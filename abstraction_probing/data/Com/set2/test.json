{"input": "Form one: A girl valued that Samuel admired that a monkey liked that Luna liked that Oliver respected that Savannah hoped that a penguin noticed that Emma noticed that the lawyer noticed that a cake grew .", "output": "VALUE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( SAMUEL , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( LUNA , NONE , NONE ) CCOMP RESPECT ( OLIVER , NONE , NONE ) CCOMP HOPE ( SAVANNAH , NONE , NONE ) CCOMP NOTICE ( PENGUIN , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LAWYER , NONE , NONE ) CCOMP GROW ( NONE , CAKE , NONE )"}
{"input": "Form one: The bee hoped that the girl said that Olivia said that Liam liked that Lincoln liked that James liked that the boy liked that the writer appreciated that a giraffe declared that Emma meant that a professor liked that a bean slid .", "output": "HOPE ( BEE , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( LINCOLN , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP APPRECIATE ( WRITER , NONE , NONE ) CCOMP DECLARE ( GIRAFFE , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP SLIDE ( NONE , BEAN , NONE )"}
{"input": "Form one: Aiden liked that Liam liked that Avery appreciated that the dog expected that a cat liked that Emma appreciated that a donut was loved .", "output": "LIKE ( AIDEN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( AVERY , NONE , NONE ) CCOMP EXPECT ( DOG , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP LOVE ( NONE , DONUT , NONE )"}
{"input": "Form one: Jackson proved that Liam noticed that Emma liked that James liked that a teacher liked that the princess wished that the dog supported that Anthony hoped that a girl said that a giraffe liked that a pen was collapsed .", "output": "PROVE ( JACKSON , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP WISH ( PRINCESS , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP HOPE ( ANTHONY , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP COLLAPSE ( NONE , PEN , NONE )"}
{"input": "Form one: Camila wished that Emma noticed that a butterfly admired that the professor believed that Mia liked that Liam appreciated that the giraffe liked that William proved that Zoe noticed that the zebra thought that Leo liked that Ava confessed that the plate burned .", "output": "WISH ( CAMILA , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( BUTTERFLY , NONE , NONE ) CCOMP BELIEVE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP PROVE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( ZOE , NONE , NONE ) CCOMP THINK ( ZEBRA , NONE , NONE ) CCOMP LIKE ( LEO , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP BURN ( NONE , PLATE , NONE )"}
{"input": "Form one: James valued that a cow liked that Liam said that Amelia said that a cat valued that a giraffe thought that Andrew thought that Emma liked that a bee expected that the girl hoped that the child confessed that a cake was found .", "output": "VALUE ( JAMES , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP SAY ( AMELIA , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP THINK ( GIRAFFE , NONE , NONE ) CCOMP THINK ( ANDREW , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP EXPECT ( BEE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP CONFESS ( CHILD , NONE , NONE ) CCOMP FIND ( NONE , CAKE , NONE )"}
{"input": "Form one: Amelia admired that a spokesman liked that Madison confessed that Jayden hoped that a girl believed that Aiden proved that a bird hoped that a bear liked that Lucas imagined that Noah hoped that a boy liked that Ava ate .", "output": "ADMIRE ( AMELIA , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP CONFESS ( MADISON , NONE , NONE ) CCOMP HOPE ( JAYDEN , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP PROVE ( AIDEN , NONE , NONE ) CCOMP HOPE ( BIRD , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP IMAGINE ( LUCAS , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP EAT ( AVA , NONE , NONE )"}
{"input": "Form one: James liked that Dylan liked that Ava liked that the boy respected that Jack admired that the girl hoped that Michael floated .", "output": "LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( DYLAN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP RESPECT ( BOY , NONE , NONE ) CCOMP ADMIRE ( JACK , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP FLOAT ( NONE , MICHAEL , NONE )"}
{"input": "Form one: The girl wished that a crocodile declared that the boy admired that Emma liked that Evelyn was passed a drink .", "output": "WISH ( GIRL , NONE , NONE ) CCOMP DECLARE ( CROCODILE , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP PASS ( NONE , DRINK , EVELYN )"}
{"input": "Form one: The girl liked that a fly liked that the goose liked that a dog confessed that the boy said that the giraffe liked that Olivia admired that a cat liked that Lucas hoped that a spokesman admired that Ryan hoped that Layla supported that a cake was thrown by the kid .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP LIKE ( GOOSE , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP ADMIRE ( SPOKESMAN , NONE , NONE ) CCOMP HOPE ( RYAN , NONE , NONE ) CCOMP SUPPORT ( LAYLA , NONE , NONE ) CCOMP THROW ( KID , CAKE , NONE )"}
{"input": "Form one: Samuel noticed that Emma supported that Noah meant that Victoria liked that Jacob sent Liam the donut in a car .", "output": "NOTICE ( SAMUEL , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP SEND ( JACOB , IN ( DONUT , CAR ) , LIAM )"}
{"input": "Form one: Ava noticed that Matthew liked that Amelia tolerated that Emily noticed that Lincoln liked that Liam liked that Penelope liked that William ate .", "output": "NOTICE ( AVA , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP TOLERATE ( AMELIA , NONE , NONE ) CCOMP NOTICE ( EMILY , NONE , NONE ) CCOMP LIKE ( LINCOLN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP EAT ( WILLIAM , NONE , NONE )"}
{"input": "Form one: Oliver liked that Noah noticed that David appreciated that Avery mailed a cake to a girl .", "output": "LIKE ( OLIVER , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( DAVID , NONE , NONE ) CCOMP MAIL ( AVERY , CAKE , GIRL )"}
{"input": "Form one: John noticed that a girl hoped that Liam imagined that the donut rolled .", "output": "NOTICE ( JOHN , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: A hen tolerated that a writer confessed that a sheep believed that Asher confessed that the donkey liked that the bird believed that Amelia liked that Evelyn confessed that the girl confessed that a knife was enlarged .", "output": "TOLERATE ( HEN , NONE , NONE ) CCOMP CONFESS ( WRITER , NONE , NONE ) CCOMP BELIEVE ( SHEEP , NONE , NONE ) CCOMP CONFESS ( ASHER , NONE , NONE ) CCOMP LIKE ( DONKEY , NONE , NONE ) CCOMP BELIEVE ( BIRD , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP CONFESS ( EVELYN , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP ENLARGE ( NONE , KNIFE , NONE )"}
{"input": "Form one: The guest liked that Emma said that a student liked that a bird said that James proved that the scientist liked that Charlotte hoped that a wolf said that Ava hoped that Olivia liked that the donut floated .", "output": "LIKE ( GUEST , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP SAY ( BIRD , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP LIKE ( SCIENTIST , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP SAY ( WOLF , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP FLOAT ( NONE , DONUT , NONE )"}
{"input": "Form one: Henry hoped that the child hoped that a cat noticed that Emma liked that the customer liked that a horse appreciated that the baby liked that Aurora liked that a girl expected that Logan liked that a bird gave a donut in a wardrobe to Noah .", "output": "HOPE ( HENRY , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP APPRECIATE ( HORSE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP GIVE ( BIRD , IN ( DONUT , WARDROBE ) , NOAH )"}
{"input": "Form one: The child supported that Charlotte hoped that the boy said that the dog liked that a girl liked that Jack confessed that Benjamin valued that Sophia tolerated that a cat hoped that Emma proved that Eleanor hoped that a donut rolled .", "output": "SUPPORT ( CHILD , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( JACK , NONE , NONE ) CCOMP VALUE ( BENJAMIN , NONE , NONE ) CCOMP TOLERATE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP HOPE ( ELEANOR , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: Lillian noticed that Emma said that Liam admired that Grace confessed that Christopher valued that Abigail declared that the frog appreciated that the professor said that a cat was slipped the cookie on a road .", "output": "NOTICE ( LILLIAN , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP CONFESS ( GRACE , NONE , NONE ) CCOMP VALUE ( CHRISTOPHER , NONE , NONE ) CCOMP DECLARE ( ABIGAIL , NONE , NONE ) CCOMP APPRECIATE ( FROG , NONE , NONE ) CCOMP SAY ( PROFESSOR , NONE , NONE ) CCOMP SLIP ( NONE , ON ( COOKIE , ROAD ) , CAT )"}
{"input": "Form one: A priest expected that Emma hoped that a princess thought that the cat imagined that the horse liked that the donkey liked that the dog liked that the customer liked that the chicken wished that the cake was eaten .", "output": "EXPECT ( PRIEST , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP THINK ( PRINCESS , NONE , NONE ) CCOMP IMAGINE ( CAT , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( DONKEY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP WISH ( CHICKEN , NONE , NONE ) CCOMP EAT ( NONE , CAKE , NONE )"}
{"input": "Form one: A kitty liked that the girl proved that Victoria hoped that a dog liked that Emma proved that the teacher imagined that the mouse wished that Liam confessed that a fly hoped that Sophia snapped .", "output": "LIKE ( KITTY , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP HOPE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP IMAGINE ( TEACHER , NONE , NONE ) CCOMP WISH ( MOUSE , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP HOPE ( FLY , NONE , NONE ) CCOMP SNAP ( NONE , SOPHIA , NONE )"}
{"input": "Form one: A dog believed that a creature admired that the frog liked that Claire liked that Liam liked that the girl liked that Ethan confessed that Emma said that the baby admired that a fruit was grown .", "output": "BELIEVE ( DOG , NONE , NONE ) CCOMP ADMIRE ( CREATURE , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( CLAIRE , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( ETHAN , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP ADMIRE ( BABY , NONE , NONE ) CCOMP GROW ( NONE , FRUIT , NONE )"}
{"input": "Form one: A girl said that Daniel liked that Emma admired that Ella expected that Noah liked that the wolf meant that Charlotte liked that Isabella noticed that Olivia said that William said that the cake was eaten by the hero .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP EXPECT ( ELLA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP MEAN ( WOLF , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP EAT ( HERO , CAKE , NONE )"}
{"input": "Form one: William said that Benjamin respected that the friend declared that Elizabeth liked that a coach hoped that the girl declared that the boy noticed that Noah respected that the child liked that the bee shortened .", "output": "SAY ( WILLIAM , NONE , NONE ) CCOMP RESPECT ( BENJAMIN , NONE , NONE ) CCOMP DECLARE ( FRIEND , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP HOPE ( COACH , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP RESPECT ( NOAH , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP SHORTEN ( NONE , BEE , NONE )"}
{"input": "Form one: The father liked that the visitor appreciated that Isabella supported that Jayden declared that a baby liked that Leah appreciated that the boy confessed that Nora hoped that a butterfly liked that Emma noticed that a girl said that Olivia was returned a cookie on the crack in the garden .", "output": "LIKE ( FATHER , NONE , NONE ) CCOMP APPRECIATE ( VISITOR , NONE , NONE ) CCOMP SUPPORT ( ISABELLA , NONE , NONE ) CCOMP DECLARE ( JAYDEN , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP APPRECIATE ( LEAH , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP HOPE ( NORA , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP RETURN ( NONE , ON ( COOKIE , IN ( CRACK , GARDEN ) ) , OLIVIA )"}
{"input": "Form one: The president hoped that Riley noticed that Sophia liked that a creature liked that James hoped that the chicken said that Emma noticed that William respected that Liam hoped that a girl intended to run .", "output": "HOPE ( PRESIDENT , NONE , NONE ) CCOMP NOTICE ( RILEY , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( CREATURE , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP SAY ( CHICKEN , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP RESPECT ( WILLIAM , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP INTEND ( GIRL , NONE , NONE ) XCOMP RUN ( GIRL , NONE , NONE )"}
{"input": "Form one: Dylan liked that Jacob liked that a giraffe hoped that a teacher hoped that a girl was offered a donut .", "output": "LIKE ( DYLAN , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP OFFER ( NONE , DONUT , GIRL )"}
{"input": "Form one: Isabella liked that a baby hoped that a cat admired that Aurora liked that a dog liked that the teacher dreamed that the boy proved that Liam liked that Lillian hoped that Lincoln liked that Emma respected that a duck thought that a donkey was fed a cake on the boat .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP DREAM ( TEACHER , NONE , NONE ) CCOMP PROVE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( LILLIAN , NONE , NONE ) CCOMP LIKE ( LINCOLN , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP THINK ( DUCK , NONE , NONE ) CCOMP FEED ( NONE , ON ( CAKE , BOAT ) , DONKEY )"}
{"input": "Form one: Emma hoped that the cat liked that Noah hoped that the ring was poked by Oliver .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP POKE ( OLIVER , RING , NONE )"}
{"input": "Form one: Amelia liked that a researcher liked that Emma respected that the baby believed that a teacher supported that the girl hoped that a passenger admired that the cat hoped that the champion liked that a hero imagined that the monkey tolerated that the melon was floated .", "output": "LIKE ( AMELIA , NONE , NONE ) CCOMP LIKE ( RESEARCHER , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP SUPPORT ( TEACHER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( PASSENGER , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( CHAMPION , NONE , NONE ) CCOMP IMAGINE ( HERO , NONE , NONE ) CCOMP TOLERATE ( MONKEY , NONE , NONE ) CCOMP FLOAT ( NONE , MELON , NONE )"}
{"input": "Form one: Scarlett admired that a boy hoped that Sophia hoped that Jacob liked that Isabella admired that Olivia liked that the girl hoped that Emma valued that the purse was painted .", "output": "ADMIRE ( SCARLETT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP ADMIRE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP PAINT ( NONE , PURSE , NONE )"}
{"input": "Form one: A boy appreciated that the dog liked that Emma hoped that Scarlett hoped that Lucas noticed that Luna confessed that Olivia liked that Liam supported that the dealer liked that the patient liked that a guy liked that the girl hoped that a bowl was cleaned .", "output": "APPRECIATE ( BOY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( SCARLETT , NONE , NONE ) CCOMP NOTICE ( LUCAS , NONE , NONE ) CCOMP CONFESS ( LUNA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP LIKE ( DEALER , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP LIKE ( GUY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP CLEAN ( NONE , BOWL , NONE )"}
{"input": "Form one: A girl proved that Benjamin liked that Charlotte respected that the horse liked that a cat liked that a monkey liked that Emma valued that the teacher appreciated that a president believed that the sailor said that the frog liked that Liam liked that the liver rolled .", "output": "PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP RESPECT ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( TEACHER , NONE , NONE ) CCOMP BELIEVE ( PRESIDENT , NONE , NONE ) CCOMP SAY ( SAILOR , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , LIVER , NONE )"}
{"input": "Form one: Ava noticed that a girl said that the spokesman liked that the donkey admired that the boy thought that a cat confessed that Noah believed that Camila broke .", "output": "NOTICE ( AVA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP ADMIRE ( DONKEY , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP BREAK ( NONE , CAMILA , NONE )"}
{"input": "Form one: The cat liked that a girl liked that Elijah liked that the driver thought that a giraffe imagined that a dog believed that a bunny grew the cookie beside the bear .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP THINK ( DRIVER , NONE , NONE ) CCOMP IMAGINE ( GIRAFFE , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP GROW ( BUNNY , BESIDE ( COOKIE , BEAR ) , NONE )"}
{"input": "Form one: Zoe hoped that a cat said that William respected that a deer expected that a giraffe meant that Ava believed that Liam hoped that Emma respected that Avery liked that Olivia liked that Daniel meant that a dog liked that the girl was lended the penny .", "output": "HOPE ( ZOE , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP RESPECT ( WILLIAM , NONE , NONE ) CCOMP EXPECT ( DEER , NONE , NONE ) CCOMP MEAN ( GIRAFFE , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP MEAN ( DANIEL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LEND ( NONE , PENNY , GIRL )"}
{"input": "Form one: James appreciated that Olivia imagined that Christopher liked that Liam noticed that a boy liked that Charlotte noticed that the hen thought that a baby noticed that Isabella hoped that William said that Abigail confessed that a politician preferred to sneeze .", "output": "APPRECIATE ( JAMES , NONE , NONE ) CCOMP IMAGINE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CHRISTOPHER , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP NOTICE ( CHARLOTTE , NONE , NONE ) CCOMP THINK ( HEN , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP CONFESS ( ABIGAIL , NONE , NONE ) CCOMP PREFER ( POLITICIAN , NONE , NONE ) XCOMP SNEEZE ( POLITICIAN , NONE , NONE )"}
{"input": "Form one: Emma liked that Michael hoped that Gabriel thought that a dog liked that the child dreamed that the girl liked that Noah slept .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( MICHAEL , NONE , NONE ) CCOMP THINK ( GABRIEL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP DREAM ( CHILD , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SLEEP ( NOAH , NONE , NONE )"}
{"input": "Form one: The bird liked that Sophia liked that the girl liked that a dog confessed that Lincoln thought that a fly tolerated that the boy liked that Emma liked that a duck liked that Olivia noticed that a sheep split .", "output": "LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP THINK ( LINCOLN , NONE , NONE ) CCOMP TOLERATE ( FLY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP SPLIT ( NONE , SHEEP , NONE )"}
{"input": "Form one: The citizen confessed that Aubrey liked that the kitty admired that Emma meant that the penguin wished that the dog believed that Lily hoped that Ava supported that James hoped that the fish liked that the captain said that Liam liked that the donut was lended to Charlotte .", "output": "CONFESS ( CITIZEN , NONE , NONE ) CCOMP LIKE ( AUBREY , NONE , NONE ) CCOMP ADMIRE ( KITTY , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP WISH ( PENGUIN , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP HOPE ( LILY , NONE , NONE ) CCOMP SUPPORT ( AVA , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP SAY ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LEND ( NONE , DONUT , CHARLOTTE )"}
{"input": "Form one: The fly said that Wyatt liked that a baby noticed that Ava believed that Claire believed that a moose valued that the cat liked that Emma hoped that Olivia proved that the girl appreciated that Mila expected that the buyer liked that the friend was served a cake beside the table .", "output": "SAY ( FLY , NONE , NONE ) CCOMP LIKE ( WYATT , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP BELIEVE ( CLAIRE , NONE , NONE ) CCOMP VALUE ( MOOSE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP PROVE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP EXPECT ( MILA , NONE , NONE ) CCOMP LIKE ( BUYER , NONE , NONE ) CCOMP SERVE ( NONE , BESIDE ( CAKE , TABLE ) , FRIEND )"}
{"input": "Form one: The child declared that Aiden noticed that the chicken declared that Charlotte liked that the moose liked that a banana rolled .", "output": "DECLARE ( CHILD , NONE , NONE ) CCOMP NOTICE ( AIDEN , NONE , NONE ) CCOMP DECLARE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( MOOSE , NONE , NONE ) CCOMP ROLL ( NONE , BANANA , NONE )"}
{"input": "Form one: The girl declared that a chicken noticed that the pony tolerated that Emma hoped that Liam noticed that Benjamin liked that the baby liked that Scarlett liked that the cat liked that Mila believed that the donut was frozen .", "output": "DECLARE ( GIRL , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP TOLERATE ( PONY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( SCARLETT , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( MILA , NONE , NONE ) CCOMP FREEZE ( NONE , DONUT , NONE )"}
{"input": "Form one: Scarlett believed that a girl liked that Emily liked that Joshua hoped that the deer declared that a cake rolled .", "output": "BELIEVE ( SCARLETT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP HOPE ( JOSHUA , NONE , NONE ) CCOMP DECLARE ( DEER , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: The boy expected that the coach noticed that Liam admired that Olivia handed a cake beside the bed to the host .", "output": "EXPECT ( BOY , NONE , NONE ) CCOMP NOTICE ( COACH , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP HAND ( OLIVIA , BESIDE ( CAKE , BED ) , HOST )"}
{"input": "Form one: Riley said that Emma hoped that the cat liked that James expected that the dog liked that Noah believed that Michael liked that a boy liked that a farmer respected that the zebra hoped that Alexander wished that a girl hoped that a fly planned to run .", "output": "SAY ( RILEY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP EXPECT ( JAMES , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP RESPECT ( FARMER , NONE , NONE ) CCOMP HOPE ( ZEBRA , NONE , NONE ) CCOMP WISH ( ALEXANDER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP PLAN ( FLY , NONE , NONE ) XCOMP RUN ( FLY , NONE , NONE )"}
{"input": "Form one: Noah liked that a child liked that Mia liked that the girl valued that a cow hoped that Abigail wished that a mouse liked that Charlotte believed that the dog meant that Owen hoped that the boy supported that a baby said that the giraffe froze .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP HOPE ( COW , NONE , NONE ) CCOMP WISH ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP BELIEVE ( CHARLOTTE , NONE , NONE ) CCOMP MEAN ( DOG , NONE , NONE ) CCOMP HOPE ( OWEN , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP FREEZE ( NONE , GIRAFFE , NONE )"}
{"input": "Form one: Emma thought that Olivia noticed that James noticed that the duke liked that Mila meant that Natalie said that a teacher noticed that Noah hoped that Amelia proved that Audrey liked that a donut was painted by a student .", "output": "THINK ( EMMA , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP MEAN ( MILA , NONE , NONE ) CCOMP SAY ( NATALIE , NONE , NONE ) CCOMP NOTICE ( TEACHER , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP PROVE ( AMELIA , NONE , NONE ) CCOMP LIKE ( AUDREY , NONE , NONE ) CCOMP PAINT ( STUDENT , DONUT , NONE )"}
{"input": "Form one: Emma admired that Daniel liked that James meant that a lion froze .", "output": "ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP MEAN ( JAMES , NONE , NONE ) CCOMP FREEZE ( NONE , LION , NONE )"}
{"input": "Form one: A mouse said that Sophia liked that a boy liked that Joshua liked that a servant said that Victoria confessed that a child liked that Lucas imagined that Emma liked that Ava liked that a cake rolled .", "output": "SAY ( MOUSE , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( JOSHUA , NONE , NONE ) CCOMP SAY ( SERVANT , NONE , NONE ) CCOMP CONFESS ( VICTORIA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP IMAGINE ( LUCAS , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma proved that a child hoped that the servant declared that the president respected that a baby wished that the doctor liked that a cat liked that the girl said that Ava believed that Liam noticed that Oliver liked that a fly declared that a boy was lended a cake in a house .", "output": "PROVE ( EMMA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP DECLARE ( SERVANT , NONE , NONE ) CCOMP RESPECT ( PRESIDENT , NONE , NONE ) CCOMP WISH ( BABY , NONE , NONE ) CCOMP LIKE ( DOCTOR , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP DECLARE ( FLY , NONE , NONE ) CCOMP LEND ( NONE , IN ( CAKE , HOUSE ) , BOY )"}
{"input": "Form one: Emily believed that Oliver thought that a girl noticed that the coach noticed that Liam liked that a lawyer said that Isabella hoped that a deer noticed that Emma hoped that Ava said that a mouse liked that the frog liked that the chicken reddened .", "output": "BELIEVE ( EMILY , NONE , NONE ) CCOMP THINK ( OLIVER , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP NOTICE ( COACH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( LAWYER , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( DEER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP REDDEN ( NONE , CHICKEN , NONE )"}
{"input": "Form one: The teacher liked that the boy liked that Avery admired that Lillian liked that the cat declared that the butterfly noticed that a dog supported that Emma liked that a girl was sold the rose on a floor by a bee .", "output": "LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ADMIRE ( AVERY , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP DECLARE ( CAT , NONE , NONE ) CCOMP NOTICE ( BUTTERFLY , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SELL ( BEE , ON ( ROSE , FLOOR ) , GIRL )"}
{"input": "Form one: Violet admired that the girl respected that Hannah liked that the bunny meant that a host hoped that Layla hoped that James believed that Lucas liked that the bird appreciated that Liam hoped that the baby liked that Oliver valued that the pumpkin split .", "output": "ADMIRE ( VIOLET , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP MEAN ( BUNNY , NONE , NONE ) CCOMP HOPE ( HOST , NONE , NONE ) CCOMP HOPE ( LAYLA , NONE , NONE ) CCOMP BELIEVE ( JAMES , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP APPRECIATE ( BIRD , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP VALUE ( OLIVER , NONE , NONE ) CCOMP SPLIT ( NONE , PUMPKIN , NONE )"}
{"input": "Form one: Liam declared that Isabella hoped that Noah liked that Emma declared that a monkey liked that a girl gave the soap to a frog .", "output": "DECLARE ( LIAM , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP GIVE ( GIRL , SOAP , FROG )"}
{"input": "Form one: The dog appreciated that Penelope liked that Daniel said that a giraffe liked that Oliver liked that Mila wished that the cat tolerated that Emma said that the girl wished that a cake floated .", "output": "APPRECIATE ( DOG , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP SAY ( DANIEL , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP WISH ( MILA , NONE , NONE ) CCOMP TOLERATE ( CAT , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP FLOAT ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma believed that a student liked that a chicken valued that the child proved that Jacob believed that a boy believed that a duck burned a cake .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP VALUE ( CHICKEN , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP BELIEVE ( JACOB , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP BURN ( DUCK , CAKE , NONE )"}
{"input": "Form one: A boy believed that a girl admired that a teacher confessed that Emma liked that Liam declared that the sandwich froze .", "output": "BELIEVE ( BOY , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP FREEZE ( NONE , SANDWICH , NONE )"}
{"input": "Form one: The girl hoped that Stella said that William believed that James liked that Wyatt liked that a cake grew .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP SAY ( STELLA , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( WYATT , NONE , NONE ) CCOMP GROW ( NONE , CAKE , NONE )"}
{"input": "Form one: A bunny supported that Ava thought that the pony thought that a girl hoped that the sailor noticed that a child declared that a boy liked that the mouse liked that Emma fed the bat beside a cabinet to Noah .", "output": "SUPPORT ( BUNNY , NONE , NONE ) CCOMP THINK ( AVA , NONE , NONE ) CCOMP THINK ( PONY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NOTICE ( SAILOR , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP FEED ( EMMA , BESIDE ( BAT , CABINET ) , NOAH )"}
{"input": "Form one: A dog liked that Liam valued that Emma said that Matthew noticed that a boy hoped that a drink was liked .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP NOTICE ( MATTHEW , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( NONE , DRINK , NONE )"}
{"input": "Form one: Andrew respected that the girl liked that the dog hoped that James liked that the lion meant that Sebastian believed that Noah said that Mateo hoped that Ava noticed that a king valued that Emma liked that a cloud was helped by the child .", "output": "RESPECT ( ANDREW , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP MEAN ( LION , NONE , NONE ) CCOMP BELIEVE ( SEBASTIAN , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP HOPE ( MATEO , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP VALUE ( KING , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HELP ( CHILD , CLOUD , NONE )"}
{"input": "Form one: The pupil respected that the boy liked that Liam admired that a cat said that a cake was eaten .", "output": "RESPECT ( PUPIL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP EAT ( NONE , CAKE , NONE )"}
{"input": "Form one: David noticed that Sophia hoped that the student confessed that Liam said that Emma hoped that Mia hoped that Olivia said that a tiger liked that a writer liked that a boy appreciated that a soldier improved the cookie .", "output": "NOTICE ( DAVID , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP CONFESS ( STUDENT , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( TIGER , NONE , NONE ) CCOMP LIKE ( WRITER , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP IMPROVE ( SOLDIER , COOKIE , NONE )"}
{"input": "Form one: William meant that Thomas wished that Mia liked that a deer liked that a journalist declared that Emma liked that a boy was served the cake in the box by a bird .", "output": "MEAN ( WILLIAM , NONE , NONE ) CCOMP WISH ( THOMAS , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP DECLARE ( JOURNALIST , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SERVE ( BIRD , IN ( CAKE , BOX ) , BOY )"}
{"input": "Form one: Mason liked that Emma proved that Ellie believed that the girl wished that Liam liked that Oliver liked that a cat said that Zoe liked that the bee declared that the hero confessed that Abigail said that Noah rolled .", "output": "LIKE ( MASON , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( ELLIE , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( ZOE , NONE , NONE ) CCOMP DECLARE ( BEE , NONE , NONE ) CCOMP CONFESS ( HERO , NONE , NONE ) CCOMP SAY ( ABIGAIL , NONE , NONE ) CCOMP ROLL ( NONE , NOAH , NONE )"}
{"input": "Form one: The duck said that Emma liked that Benjamin liked that a monkey noticed that Olivia confessed that the girl liked that a puppy liked that the spokesman rolled .", "output": "SAY ( DUCK , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP NOTICE ( MONKEY , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP ROLL ( NONE , SPOKESMAN , NONE )"}
{"input": "Form one: A zebra hoped that William hoped that Hannah believed that a kitty believed that the lamb believed that Liam liked that Emma noticed that a dog hoped that Olivia admired that the boy liked that the girl liked that a monkey liked that the cake was enlarged by the cat .", "output": "HOPE ( ZEBRA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP BELIEVE ( HANNAH , NONE , NONE ) CCOMP BELIEVE ( KITTY , NONE , NONE ) CCOMP BELIEVE ( LAMB , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP ENLARGE ( CAT , CAKE , NONE )"}
{"input": "Form one: Olivia tolerated that Ava valued that a boy liked that the child confessed that the girl thought that a hen liked that Savannah meant that Thomas wished that Scarlett liked that Alexander hoped that the teacher dreamed that Mia liked that the cake crumpled .", "output": "TOLERATE ( OLIVIA , NONE , NONE ) CCOMP VALUE ( AVA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( CHILD , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( HEN , NONE , NONE ) CCOMP MEAN ( SAVANNAH , NONE , NONE ) CCOMP WISH ( THOMAS , NONE , NONE ) CCOMP LIKE ( SCARLETT , NONE , NONE ) CCOMP HOPE ( ALEXANDER , NONE , NONE ) CCOMP DREAM ( TEACHER , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP CRUMPLE ( NONE , CAKE , NONE )"}
{"input": "Form one: A hen believed that a baby declared that a farmer proved that Liam dreamed that Emma believed that the donut floated .", "output": "BELIEVE ( HEN , NONE , NONE ) CCOMP DECLARE ( BABY , NONE , NONE ) CCOMP PROVE ( FARMER , NONE , NONE ) CCOMP DREAM ( LIAM , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP FLOAT ( NONE , DONUT , NONE )"}
{"input": "Form one: The mouse wished that the lion thought that a boy hoped that the girl liked that James proved that Henry liked that Grace liked that Isaac confessed that Liam tolerated that Emma liked that a cookie was broken by Elizabeth .", "output": "WISH ( MOUSE , NONE , NONE ) CCOMP THINK ( LION , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP LIKE ( HENRY , NONE , NONE ) CCOMP LIKE ( GRACE , NONE , NONE ) CCOMP CONFESS ( ISAAC , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP BREAK ( ELIZABETH , COOKIE , NONE )"}
{"input": "Form one: The boy liked that a cat proved that a girl noticed that Audrey liked that the frog thought that the child thought that a turkey proved that the baby said that Emma hoped that the visitor gave a cracker on the box to a mouse .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( AUDREY , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP THINK ( CHILD , NONE , NONE ) CCOMP PROVE ( TURKEY , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP GIVE ( VISITOR , ON ( CRACKER , BOX ) , MOUSE )"}
{"input": "Form one: The cat hoped that Oliver said that a goose hoped that a fish declared that a wolf liked that the dog believed that Emma liked a donut beside the table .", "output": "HOPE ( CAT , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP HOPE ( GOOSE , NONE , NONE ) CCOMP DECLARE ( FISH , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP LIKE ( EMMA , BESIDE ( DONUT , TABLE ) , NONE )"}
{"input": "Form one: Liam imagined that the girl liked that Evelyn proved that the crocodile liked that the chicken hoped that the mouse respected that the governor liked that Noah burned .", "output": "IMAGINE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( EVELYN , NONE , NONE ) CCOMP LIKE ( CROCODILE , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP RESPECT ( MOUSE , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP BURN ( NONE , NOAH , NONE )"}
{"input": "Form one: The cat wished that Emma liked that Liam liked that a pupil declared that Oliver declared that Emily liked that Jaxon was given the donut in the car .", "output": "WISH ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DECLARE ( PUPIL , NONE , NONE ) CCOMP DECLARE ( OLIVER , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP GIVE ( NONE , IN ( DONUT , CAR ) , JAXON )"}
{"input": "Form one: The baby meant that the coach hoped that Ethan said that James respected that Emma said that Ellie respected that the girl liked that a spokesman liked that Evelyn liked that Sebastian believed that the boy noticed that Nora liked that a molecule was promised to a lion .", "output": "MEAN ( BABY , NONE , NONE ) CCOMP HOPE ( COACH , NONE , NONE ) CCOMP SAY ( ETHAN , NONE , NONE ) CCOMP RESPECT ( JAMES , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP RESPECT ( ELLIE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP BELIEVE ( SEBASTIAN , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP LIKE ( NORA , NONE , NONE ) CCOMP PROMISE ( NONE , MOLECULE , LION )"}
{"input": "Form one: A farmer respected that the passenger hoped that Emma respected that a mouse liked that Leo burned .", "output": "RESPECT ( FARMER , NONE , NONE ) CCOMP HOPE ( PASSENGER , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP BURN ( NONE , LEO , NONE )"}
{"input": "Form one: The cat expected that Addison declared that a boy hoped that Zoe liked that the patient believed that Amelia admired that a butterfly appreciated that Liam dreamed that the landlord grew .", "output": "EXPECT ( CAT , NONE , NONE ) CCOMP DECLARE ( ADDISON , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( ZOE , NONE , NONE ) CCOMP BELIEVE ( PATIENT , NONE , NONE ) CCOMP ADMIRE ( AMELIA , NONE , NONE ) CCOMP APPRECIATE ( BUTTERFLY , NONE , NONE ) CCOMP DREAM ( LIAM , NONE , NONE ) CCOMP GROW ( NONE , LANDLORD , NONE )"}
{"input": "Form one: A girl liked that Liam liked that a cat hoped that the cookie was adored .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP ADORE ( NONE , COOKIE , NONE )"}
{"input": "Form one: Emma admired that a boy liked that a horse liked that the bird declared that Amelia was lended the box by Noah .", "output": "ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP DECLARE ( BIRD , NONE , NONE ) CCOMP LEND ( NOAH , BOX , AMELIA )"}
{"input": "Form one: Emma hoped that the girl said that William said that a giraffe hoped that the tenant meant that Aiden liked that Harper hoped that Oliver confessed that Mia liked that Olivia said that David hoped that Ava noticed that the child rolled .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP MEAN ( TENANT , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP HOPE ( HARPER , NONE , NONE ) CCOMP CONFESS ( OLIVER , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP HOPE ( DAVID , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , CHILD , NONE )"}
{"input": "Form one: A teacher said that the bee supported that a monster liked that Natalie declared that Abigail liked that the girl liked that Liam liked that Charlotte noticed that the deer wished that Benjamin liked that the donut was poked by Noah .", "output": "SAY ( TEACHER , NONE , NONE ) CCOMP SUPPORT ( BEE , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP DECLARE ( NATALIE , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( CHARLOTTE , NONE , NONE ) CCOMP WISH ( DEER , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP POKE ( NOAH , DONUT , NONE )"}
{"input": "Form one: Nora said that Isabella liked that the frog hoped that the scientist rolled .", "output": "SAY ( NORA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP ROLL ( NONE , SCIENTIST , NONE )"}
{"input": "Form one: The scientist liked that Olivia liked that the girl thought that Ava supported that the chicken liked that Emma liked that Noah liked that Victoria liked that Liam was given the potato on the rock .", "output": "LIKE ( SCIENTIST , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP SUPPORT ( AVA , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP GIVE ( NONE , ON ( POTATO , ROCK ) , LIAM )"}
{"input": "Form one: A mouse thought that the girl noticed that William thought that Emma liked that the boy confessed that a student hoped that the prince hoped that Charlotte liked that Lucas hoped that James wanted to sleep .", "output": "THINK ( MOUSE , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP THINK ( WILLIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP HOPE ( STUDENT , NONE , NONE ) CCOMP HOPE ( PRINCE , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP WANT ( JAMES , NONE , NONE ) XCOMP SLEEP ( JAMES , NONE , NONE )"}
{"input": "Form one: The cat respected that Nora wished that the captain liked that the girl liked that the child liked that the boy hoped that Noah said that a butterfly hoped that Lucas liked that Emma wished that Mia liked that the sandwich was disintegrated by the frog .", "output": "RESPECT ( CAT , NONE , NONE ) CCOMP WISH ( NORA , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP HOPE ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP DISINTEGRATE ( FROG , SANDWICH , NONE )"}
{"input": "Form one: Daniel believed that a baby appreciated that the girl declared that the chicken proved that Jackson liked that a mouse liked that Liam imagined that a frog liked that Grace thought that Emma said that the brain was packed .", "output": "BELIEVE ( DANIEL , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP PROVE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( JACKSON , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP THINK ( GRACE , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP PACK ( NONE , BRAIN , NONE )"}
{"input": "Form one: The girl liked that Ava wished that the boy proved that Elijah liked that Liam expected that Noah imagined that Mateo liked that the prince noticed that Emma liked that Isabella expected that a captain liked that Joseph liked that the cat was lended the donut in a house by Benjamin .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP WISH ( AVA , NONE , NONE ) CCOMP PROVE ( BOY , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP EXPECT ( LIAM , NONE , NONE ) CCOMP IMAGINE ( NOAH , NONE , NONE ) CCOMP LIKE ( MATEO , NONE , NONE ) CCOMP NOTICE ( PRINCE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP EXPECT ( ISABELLA , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( JOSEPH , NONE , NONE ) CCOMP LEND ( BENJAMIN , IN ( DONUT , HOUSE ) , CAT )"}
{"input": "Form one: A boy supported that the child supported that a girl liked that a cake was burned .", "output": "SUPPORT ( BOY , NONE , NONE ) CCOMP SUPPORT ( CHILD , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BURN ( NONE , CAKE , NONE )"}
{"input": "Form one: A boy hoped that Isaac respected that a mouse hoped that the prisoner noticed that the lawyer meant that the chicken hoped that the cat believed that Emma meant that a princess noticed that a girl thought that the dog liked that the chief hoped that a sailor was lended the drink on the surface .", "output": "HOPE ( BOY , NONE , NONE ) CCOMP RESPECT ( ISAAC , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP NOTICE ( PRISONER , NONE , NONE ) CCOMP MEAN ( LAWYER , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP NOTICE ( PRINCESS , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( CHIEF , NONE , NONE ) CCOMP LEND ( NONE , ON ( DRINK , SURFACE ) , SAILOR )"}
{"input": "Form one: The girl liked that the boy meant that a guest noticed that Julian liked that Emma lended Thomas the ball .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP NOTICE ( GUEST , NONE , NONE ) CCOMP LIKE ( JULIAN , NONE , NONE ) CCOMP LEND ( EMMA , BALL , THOMAS )"}
{"input": "Form one: A child confessed that Mia liked that Emma liked that the horse liked that Noah confessed that a dog liked that a lawyer respected that the penguin liked that James hoped that the box was decomposed .", "output": "CONFESS ( CHILD , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP RESPECT ( LAWYER , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP DECOMPOSE ( NONE , BOX , NONE )"}
{"input": "Form one: Audrey respected that Mason confessed that Michael liked that Emma believed that Christopher liked that the dog liked that the writer hoped that Liam dreamed that a frog proved that a squirrel painted a girl beside the skull .", "output": "RESPECT ( AUDREY , NONE , NONE ) CCOMP CONFESS ( MASON , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( CHRISTOPHER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( WRITER , NONE , NONE ) CCOMP DREAM ( LIAM , NONE , NONE ) CCOMP PROVE ( FROG , NONE , NONE ) CCOMP PAINT ( SQUIRREL , BESIDE ( GIRL , SKULL ) , NONE )"}
{"input": "Form one: A cat believed that Emma wished that Olivia liked that Claire hoped that the pony liked that James liked that Henry confessed that Lucas was given the cake by the customer .", "output": "BELIEVE ( CAT , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CLAIRE , NONE , NONE ) CCOMP LIKE ( PONY , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP CONFESS ( HENRY , NONE , NONE ) CCOMP GIVE ( CUSTOMER , CAKE , LUCAS )"}
{"input": "Form one: The father liked that Emma hoped that Audrey said that a sheep respected that a girl liked that Benjamin imagined that the boy liked that the doctor ate .", "output": "LIKE ( FATHER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP SAY ( AUDREY , NONE , NONE ) CCOMP RESPECT ( SHEEP , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP EAT ( DOCTOR , NONE , NONE )"}
{"input": "Form one: A kid declared that a lion liked that Jack liked that Emma liked that Olivia noticed that a prince said that a girl dreamed that Scarlett expected that Isabella confessed that a teacher painted .", "output": "DECLARE ( KID , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( JACK , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP SAY ( PRINCE , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP EXPECT ( SCARLETT , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP PAINT ( TEACHER , NONE , NONE )"}
{"input": "Form one: The turkey expected that James supported that the boy said that the girl liked that Bella liked that the passenger wished that a mouse tolerated that Grace supported that a butterfly wished that the chicken liked that a cat hoped that Liam expected that a cake shortened .", "output": "EXPECT ( TURKEY , NONE , NONE ) CCOMP SUPPORT ( JAMES , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BELLA , NONE , NONE ) CCOMP WISH ( PASSENGER , NONE , NONE ) CCOMP TOLERATE ( MOUSE , NONE , NONE ) CCOMP SUPPORT ( GRACE , NONE , NONE ) CCOMP WISH ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP EXPECT ( LIAM , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: Ethan hoped that the sailor liked that Liam said that the boy admired that Aria liked that Isabella liked that Emma liked that Madison liked that the lollipop was examined .", "output": "HOPE ( ETHAN , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP EXAMINE ( NONE , LOLLIPOP , NONE )"}
{"input": "Form one: A student liked that Noah said that the butterfly hoped that the professor respected that Owen liked that Sophia hoped that a customer respected that a girl liked that a cake was drawn .", "output": "LIKE ( STUDENT , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP HOPE ( BUTTERFLY , NONE , NONE ) CCOMP RESPECT ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( OWEN , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP RESPECT ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DRAW ( NONE , CAKE , NONE )"}
{"input": "Form one: The monkey liked that the kitty said that Owen said that the boy liked that Olivia said that the girl liked that Emma rolled .", "output": "LIKE ( MONKEY , NONE , NONE ) CCOMP SAY ( KITTY , NONE , NONE ) CCOMP SAY ( OWEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , EMMA , NONE )"}
{"input": "Form one: Michael believed that Mason hoped that the consumer liked that Lucas hoped that Emma hoped that the bear believed that Noah hoped that the boy said that Charlotte was given a donut beside a key .", "output": "BELIEVE ( MICHAEL , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP LIKE ( CONSUMER , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( BEAR , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( DONUT , KEY ) , CHARLOTTE )"}
{"input": "Form one: Emma liked that Lucas liked that a boy said that the cat rolled .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , CAT , NONE )"}
{"input": "Form one: A baby liked that the girl valued that Liam liked that a rose rolled .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , ROSE , NONE )"}
{"input": "Form one: Alexander liked that Mateo imagined that the girl supported that the director liked that the baby liked that a student dreamed that a teacher appreciated that Mason said that a cat proved that Emma hoped that Liam was given a donut .", "output": "LIKE ( ALEXANDER , NONE , NONE ) CCOMP IMAGINE ( MATEO , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP LIKE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP DREAM ( STUDENT , NONE , NONE ) CCOMP APPRECIATE ( TEACHER , NONE , NONE ) CCOMP SAY ( MASON , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP GIVE ( NONE , DONUT , LIAM )"}
{"input": "Form one: The frog liked that the duke liked that a teacher said that Emily confessed that a sailor liked that Emma dreamed that the pig hoped that the pencil was doubled by Michael .", "output": "LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP CONFESS ( EMILY , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP HOPE ( PIG , NONE , NONE ) CCOMP DOUBLE ( MICHAEL , PENCIL , NONE )"}
{"input": "Form one: Jacob liked that Noah thought that a girl liked that Mateo believed that Emma proved that Logan liked that the giraffe tolerated that Zoey liked that a lawyer hated to hunt .", "output": "LIKE ( JACOB , NONE , NONE ) CCOMP THINK ( NOAH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( MATEO , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP TOLERATE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( ZOEY , NONE , NONE ) CCOMP HATE ( LAWYER , NONE , NONE ) XCOMP HUNT ( LAWYER , NONE , NONE )"}
{"input": "Form one: Emma believed that the frog hoped that a girl liked that Amelia declared that Grayson noticed that Harper believed that Penelope liked that the boy respected that a cat tolerated that a bee wished that a raisin was liked .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( AMELIA , NONE , NONE ) CCOMP NOTICE ( GRAYSON , NONE , NONE ) CCOMP BELIEVE ( HARPER , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP RESPECT ( BOY , NONE , NONE ) CCOMP TOLERATE ( CAT , NONE , NONE ) CCOMP WISH ( BEE , NONE , NONE ) CCOMP LIKE ( NONE , RAISIN , NONE )"}
{"input": "Form one: The child liked that Liam liked that a girl liked that a hero was sold the donut by Daniel .", "output": "LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SELL ( DANIEL , DONUT , HERO )"}
{"input": "Form one: A cat noticed that a child proved that a fly proved that Emma hoped that the boy noticed that a dog supported that a girl liked that Sophia proved that the donkey liked that Gabriel said that the mouse believed that the drink rolled .", "output": "NOTICE ( CAT , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP PROVE ( FLY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( DONKEY , NONE , NONE ) CCOMP SAY ( GABRIEL , NONE , NONE ) CCOMP BELIEVE ( MOUSE , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: The deer thought that a fly liked that Ava confessed that Liam liked that Eleanor liked that a rose was nursed .", "output": "THINK ( DEER , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( ELEANOR , NONE , NONE ) CCOMP NURSE ( NONE , ROSE , NONE )"}
{"input": "Form one: Liam liked that Samuel appreciated that the horse noticed that Evelyn noticed that a baby valued that Emma liked that a dog admired that the chicken liked that the boy said that a frog was given the yogurt in a bathtub .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( SAMUEL , NONE , NONE ) CCOMP NOTICE ( HORSE , NONE , NONE ) CCOMP NOTICE ( EVELYN , NONE , NONE ) CCOMP VALUE ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( DOG , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP GIVE ( NONE , IN ( YOGURT , BATHTUB ) , FROG )"}
{"input": "Form one: Aurora declared that Emma hoped that Lucas respected that Liam said that the bunny liked that the girl tolerated that David respected that a horse noticed that Ava hoped that a donut was rolled .", "output": "DECLARE ( AURORA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP RESPECT ( LUCAS , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP RESPECT ( DAVID , NONE , NONE ) CCOMP NOTICE ( HORSE , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: Noah liked that a girl liked that Emma believed that the cat thought that a frog believed that Ava liked that a sweetcorn rolled .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP BELIEVE ( FROG , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , SWEETCORN , NONE )"}
{"input": "Form one: James liked that Olivia believed that Mason hoped that Leo tolerated that Liam froze .", "output": "LIKE ( JAMES , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP TOLERATE ( LEO , NONE , NONE ) CCOMP FREEZE ( NONE , LIAM , NONE )"}
{"input": "Form one: A cat thought that Emma liked that Isabella tolerated that a penguin liked that a chicken liked that a girl said that Liam admired that a cow supported that a donut burned .", "output": "THINK ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( COW , NONE , NONE ) CCOMP BURN ( NONE , DONUT , NONE )"}
{"input": "Form one: A bee hoped that the girl tolerated that a teacher liked that the captain liked that Liam declared that Noah liked that Victoria liked that Emma noticed that the hen froze a boy .", "output": "HOPE ( BEE , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP FREEZE ( HEN , BOY , NONE )"}
{"input": "Form one: The sailor liked that Emma meant that Alexander said that the dealer noticed that the girl liked that a host liked that a father hoped that a monster wished that Isabella liked that a turkey split .", "output": "LIKE ( SAILOR , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP SAY ( ALEXANDER , NONE , NONE ) CCOMP NOTICE ( DEALER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( HOST , NONE , NONE ) CCOMP HOPE ( FATHER , NONE , NONE ) CCOMP WISH ( MONSTER , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP SPLIT ( NONE , TURKEY , NONE )"}
{"input": "Form one: The citizen noticed that a cat valued that the boy hoped that a cake burned .", "output": "NOTICE ( CITIZEN , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP BURN ( NONE , CAKE , NONE )"}
{"input": "Form one: The tiger hoped that Emma wished that Chloe believed that Noah liked that William meant that a child was handed the rose on the table .", "output": "HOPE ( TIGER , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP BELIEVE ( CHLOE , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP MEAN ( WILLIAM , NONE , NONE ) CCOMP HAND ( NONE , ON ( ROSE , TABLE ) , CHILD )"}
{"input": "Form one: A creature hoped that the coach admired that Ava liked that Emma said that a boy expected that the patient said that Olivia proved that Elizabeth tolerated that Eleanor believed that a dog noticed that the cake was noticed by Liam .", "output": "HOPE ( CREATURE , NONE , NONE ) CCOMP ADMIRE ( COACH , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP SAY ( PATIENT , NONE , NONE ) CCOMP PROVE ( OLIVIA , NONE , NONE ) CCOMP TOLERATE ( ELIZABETH , NONE , NONE ) CCOMP BELIEVE ( ELEANOR , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP NOTICE ( LIAM , CAKE , NONE )"}
{"input": "Form one: Claire wished that Emma liked that Michael said that the dog supported that a boy rolled the raisin on a bed .", "output": "WISH ( CLAIRE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( MICHAEL , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP ROLL ( BOY , ON ( RAISIN , BED ) , NONE )"}
{"input": "Form one: Grace hoped that a prisoner liked that Zoe hoped that the bee liked that the cat hoped that a lion hoped that a child valued that a donkey was awarded the cake .", "output": "HOPE ( GRACE , NONE , NONE ) CCOMP LIKE ( PRISONER , NONE , NONE ) CCOMP HOPE ( ZOE , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP VALUE ( CHILD , NONE , NONE ) CCOMP AWARD ( NONE , CAKE , DONKEY )"}
{"input": "Form one: Olivia noticed that a frog valued that a baby hoped that Emma noticed that Noah hoped that a cake was eaten by a girl .", "output": "NOTICE ( OLIVIA , NONE , NONE ) CCOMP VALUE ( FROG , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP EAT ( GIRL , CAKE , NONE )"}
{"input": "Form one: Emma liked that the girl meant that Zoey said that a boy admired that a child believed that the teacher liked that Benjamin liked that the monkey said that the visitor liked that Ellie liked that the politician said that Olivia liked that the cat lended a kid the balloon on a table .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP SAY ( ZOEY , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP LIKE ( ELLIE , NONE , NONE ) CCOMP SAY ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LEND ( CAT , ON ( BALLOON , TABLE ) , KID )"}
{"input": "Form one: A frog liked that Emma noticed that a boy liked that William hoped that Layla hoped that Jacob noticed that Ava thought that Noah split .", "output": "LIKE ( FROG , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( LAYLA , NONE , NONE ) CCOMP NOTICE ( JACOB , NONE , NONE ) CCOMP THINK ( AVA , NONE , NONE ) CCOMP SPLIT ( NONE , NOAH , NONE )"}
{"input": "Form one: Liam thought that the bear declared that a cat hoped that a boy liked that Emma believed that a dog confessed that the fly admired that a mouse admired that Camila noticed that William liked that Joseph tolerated that a bird burned .", "output": "THINK ( LIAM , NONE , NONE ) CCOMP DECLARE ( BEAR , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP ADMIRE ( FLY , NONE , NONE ) CCOMP ADMIRE ( MOUSE , NONE , NONE ) CCOMP NOTICE ( CAMILA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP TOLERATE ( JOSEPH , NONE , NONE ) CCOMP BURN ( NONE , BIRD , NONE )"}
{"input": "Form one: A butterfly dreamed that James meant that the mouse declared that Liam valued that Emma believed that Elijah noticed that a girl froze .", "output": "DREAM ( BUTTERFLY , NONE , NONE ) CCOMP MEAN ( JAMES , NONE , NONE ) CCOMP DECLARE ( MOUSE , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP NOTICE ( ELIJAH , NONE , NONE ) CCOMP FREEZE ( NONE , GIRL , NONE )"}
{"input": "Form one: William liked that the deer tolerated that the boy hoped that Liam liked that a teacher admired that a mouse hoped that a cat liked that Emma was awarded a box by the chief .", "output": "LIKE ( WILLIAM , NONE , NONE ) CCOMP TOLERATE ( DEER , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( TEACHER , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP AWARD ( CHIEF , BOX , EMMA )"}
{"input": "Form one: A teacher noticed that Emma liked that Elizabeth said that the child tolerated that a girl noticed that a spokesman believed that Isabella liked that a student valued that a butterfly liked that a cat liked that a cake was rolled .", "output": "NOTICE ( TEACHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( ELIZABETH , NONE , NONE ) CCOMP TOLERATE ( CHILD , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( SPOKESMAN , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP VALUE ( STUDENT , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: A dog appreciated that Olivia confessed that Avery declared that Emma imagined that Ellie liked that a tourist liked that William dreamed that a bunny said that Noah liked that the lawyer appreciated that a girl tolerated that the donut was improved by a lion .", "output": "APPRECIATE ( DOG , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( AVERY , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP LIKE ( ELLIE , NONE , NONE ) CCOMP LIKE ( TOURIST , NONE , NONE ) CCOMP DREAM ( WILLIAM , NONE , NONE ) CCOMP SAY ( BUNNY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( LAWYER , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP IMPROVE ( LION , DONUT , NONE )"}
{"input": "Form one: The cow liked that a prince meant that Amelia hoped that the chicken said that Olivia said that Sophia liked that the cat hoped that the boy wished that a girl liked that Emma liked that the monkey noticed that the cookie rolled .", "output": "LIKE ( COW , NONE , NONE ) CCOMP MEAN ( PRINCE , NONE , NONE ) CCOMP HOPE ( AMELIA , NONE , NONE ) CCOMP SAY ( CHICKEN , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP WISH ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( MONKEY , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: Carter imagined that Noah liked that Audrey confessed that the dog liked that the sailor believed that the cake was liked by William .", "output": "IMAGINE ( CARTER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP CONFESS ( AUDREY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP BELIEVE ( SAILOR , NONE , NONE ) CCOMP LIKE ( WILLIAM , CAKE , NONE )"}
{"input": "Form one: A girl dreamed that Samuel liked that James liked that William said that a penguin slid Liam .", "output": "DREAM ( GIRL , NONE , NONE ) CCOMP LIKE ( SAMUEL , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP SLIDE ( PENGUIN , LIAM , NONE )"}
{"input": "Form one: Jackson noticed that William valued that Gabriel noticed that a chicken liked that James liked that Olivia tolerated that the box changed .", "output": "NOTICE ( JACKSON , NONE , NONE ) CCOMP VALUE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( GABRIEL , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP TOLERATE ( OLIVIA , NONE , NONE ) CCOMP CHANGE ( NONE , BOX , NONE )"}
{"input": "Form one: Grace dreamed that Olivia said that the customer liked that Abigail wished that Sophia said that Evelyn hoped that a hen declared that Mia liked that William declared that the girl dreamed that Ethan said that the box was frozen by Liam .", "output": "DREAM ( GRACE , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP WISH ( ABIGAIL , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP HOPE ( EVELYN , NONE , NONE ) CCOMP DECLARE ( HEN , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP SAY ( ETHAN , NONE , NONE ) CCOMP FREEZE ( LIAM , BOX , NONE )"}
{"input": "Form one: Layla valued that Emma said that a girl hoped that Benjamin liked that the frog liked that the cat liked that Emily danced .", "output": "VALUE ( LAYLA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP DANCE ( EMILY , NONE , NONE )"}
{"input": "Form one: Elijah liked that a creature liked that the cat hoped that Ava liked that William liked that Aria liked that the baby hoped that Liam liked that the guest hoped that a princess liked that the boy liked that a cake rolled .", "output": "LIKE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( CREATURE , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( GUEST , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Liam confessed that a girl dreamed that Nora noticed that Emma liked that Jack liked that the boy helped the buyer .", "output": "CONFESS ( LIAM , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP NOTICE ( NORA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( JACK , NONE , NONE ) CCOMP HELP ( BOY , BUYER , NONE )"}
{"input": "Form one: Grayson noticed that the child noticed that the spokesman said that Hannah hoped that the girl wished that Sophia liked that a giraffe slept .", "output": "NOTICE ( GRAYSON , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP SAY ( SPOKESMAN , NONE , NONE ) CCOMP HOPE ( HANNAH , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP SLEEP ( GIRAFFE , NONE , NONE )"}
{"input": "Form one: Jacob liked that a judge liked that a duck hoped that a sailor liked that Carter thought that Emma liked that Savannah hoped that the dog liked that the cat liked that Leo liked that Layla said that Olivia tolerated that Benjamin gave the donut to a girl .", "output": "LIKE ( JACOB , NONE , NONE ) CCOMP LIKE ( JUDGE , NONE , NONE ) CCOMP HOPE ( DUCK , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP THINK ( CARTER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( LEO , NONE , NONE ) CCOMP SAY ( LAYLA , NONE , NONE ) CCOMP TOLERATE ( OLIVIA , NONE , NONE ) CCOMP GIVE ( BENJAMIN , DONUT , GIRL )"}
{"input": "Form one: Emma liked that the judge proved that the girl declared that Nora liked that the lion hoped that Isabella expected that the cake was liked .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP PROVE ( JUDGE , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP LIKE ( NORA , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP EXPECT ( ISABELLA , NONE , NONE ) CCOMP LIKE ( NONE , CAKE , NONE )"}
{"input": "Form one: Liam liked that a cat admired that Ellie tolerated that the baby liked that a frog hoped that Sophia tolerated that Olivia imagined that the girl liked that Aria declared that the cookie floated .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP TOLERATE ( ELLIE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP TOLERATE ( SOPHIA , NONE , NONE ) CCOMP IMAGINE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( ARIA , NONE , NONE ) CCOMP FLOAT ( NONE , COOKIE , NONE )"}
{"input": "Form one: Liam liked that a spokesman valued that a wolf declared that Emma imagined that a girl liked that the child was offered a pumpkin by the giraffe .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( SPOKESMAN , NONE , NONE ) CCOMP DECLARE ( WOLF , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP OFFER ( GIRAFFE , PUMPKIN , CHILD )"}
{"input": "Form one: The girl respected that James said that Isabella noticed that a towel was pierced .", "output": "RESPECT ( GIRL , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP PIERCE ( NONE , TOWEL , NONE )"}
{"input": "Form one: The butterfly hoped that a girl believed that Sebastian liked that Noah liked that Evelyn confessed that a cake was sketched .", "output": "HOPE ( BUTTERFLY , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP CONFESS ( EVELYN , NONE , NONE ) CCOMP SKETCH ( NONE , CAKE , NONE )"}
{"input": "Form one: Harper admired that a child liked that a frog respected that the boy valued that a cake was doubled .", "output": "ADMIRE ( HARPER , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP RESPECT ( FROG , NONE , NONE ) CCOMP VALUE ( BOY , NONE , NONE ) CCOMP DOUBLE ( NONE , CAKE , NONE )"}
{"input": "Form one: The chicken hoped that Ava admired that Emma liked that Oliver hoped that Liam liked that the guy said that Noah liked that the key rolled .", "output": "HOPE ( CHICKEN , NONE , NONE ) CCOMP ADMIRE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( GUY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP ROLL ( NONE , KEY , NONE )"}
{"input": "Form one: Ellie liked that Michael liked that a pig liked that a student liked that Emma rolled .", "output": "LIKE ( ELLIE , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP ROLL ( NONE , EMMA , NONE )"}
{"input": "Form one: Olivia respected that Noah liked that the father declared that a girl expected that a pony expected that a bunny liked that Liam confessed that a lion confessed that a cat said that Anthony liked that Elizabeth liked that William liked that a donut was eaten .", "output": "RESPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DECLARE ( FATHER , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP EXPECT ( PONY , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP EAT ( NONE , DONUT , NONE )"}
{"input": "Form one: A mouse believed that a boy said that a tenant liked that a cat declared that the captain hoped that the student proved that a girl liked that James imagined that Emma respected that Liam liked that the monkey believed that the duck hoped that Olivia dusted .", "output": "BELIEVE ( MOUSE , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( TENANT , NONE , NONE ) CCOMP DECLARE ( CAT , NONE , NONE ) CCOMP HOPE ( CAPTAIN , NONE , NONE ) CCOMP PROVE ( STUDENT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( JAMES , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( MONKEY , NONE , NONE ) CCOMP HOPE ( DUCK , NONE , NONE ) CCOMP DUST ( OLIVIA , NONE , NONE )"}
{"input": "Form one: Victoria liked that the bunny liked that Emma hoped that a fly liked that Carter believed that the boy liked that Benjamin liked that the girl liked that Anthony sketched the squirrel .", "output": "LIKE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP BELIEVE ( CARTER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SKETCH ( ANTHONY , SQUIRREL , NONE )"}
{"input": "Form one: The guard supported that the girl appreciated that Alexander tolerated that a boy liked that a cake was rolled .", "output": "SUPPORT ( GUARD , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP TOLERATE ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: A baby liked that a wolf liked that the monkey liked that the girl valued that the chicken rolled a butterfly on the trampoline .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP ROLL ( CHICKEN , ON ( BUTTERFLY , TRAMPOLINE ) , NONE )"}
{"input": "Form one: Emma liked that Violet hoped that Sophia said that the cat hoped that a boy hoped that a monster liked that a fly liked that Mason liked that the raisin decomposed .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( VIOLET , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP DECOMPOSE ( NONE , RAISIN , NONE )"}
{"input": "Form one: The tiger supported that Mila noticed that a girl believed that Emma appreciated that Matthew liked that Liam declared that the monkey noticed that Eleanor hoped that a boy admired that the zebra declared that the hammer rolled .", "output": "SUPPORT ( TIGER , NONE , NONE ) CCOMP NOTICE ( MILA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP NOTICE ( MONKEY , NONE , NONE ) CCOMP HOPE ( ELEANOR , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP DECLARE ( ZEBRA , NONE , NONE ) CCOMP ROLL ( NONE , HAMMER , NONE )"}
{"input": "Form one: Ava noticed that Emma liked that Liam liked that the knife was liked .", "output": "NOTICE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( NONE , KNIFE , NONE )"}
{"input": "Form one: A penguin liked that the dog hoped that a chicken liked that Emma expected that the girl valued that a pig liked that the frog liked that Liam believed that Ava tolerated that the farmer said that a cat believed that Camila liked that a basket was grown by Anthony .", "output": "LIKE ( PENGUIN , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP TOLERATE ( AVA , NONE , NONE ) CCOMP SAY ( FARMER , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP LIKE ( CAMILA , NONE , NONE ) CCOMP GROW ( ANTHONY , BASKET , NONE )"}
{"input": "Form one: A boy thought that Liam liked that Anthony liked that the host liked that Abigail liked that the professor liked that Ava liked that a frog hoped that the girl liked that Leah was given a block beside the table by James .", "output": "THINK ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( HOST , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP GIVE ( JAMES , BESIDE ( BLOCK , TABLE ) , LEAH )"}
{"input": "Form one: The dog hoped that Noah liked that the farmer liked that a lion liked that the researcher appreciated that the child meant that Emma admired that Liam wished that Ava liked that the strawberry was posted to the boy .", "output": "HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( FARMER , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP APPRECIATE ( RESEARCHER , NONE , NONE ) CCOMP MEAN ( CHILD , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP WISH ( LIAM , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP POST ( NONE , STRAWBERRY , BOY )"}
{"input": "Form one: Noah hoped that Sebastian dreamed that Olivia said that Aria supported that the lawyer meant that Emma confessed that Zoey confessed that the politician liked that a tenant liked that a girl tolerated that a butterfly supported that the donut crumpled .", "output": "HOPE ( NOAH , NONE , NONE ) CCOMP DREAM ( SEBASTIAN , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP SUPPORT ( ARIA , NONE , NONE ) CCOMP MEAN ( LAWYER , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP CONFESS ( ZOEY , NONE , NONE ) CCOMP LIKE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( TENANT , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( BUTTERFLY , NONE , NONE ) CCOMP CRUMPLE ( NONE , DONUT , NONE )"}
{"input": "Form one: A chicken dreamed that the journalist wished that a student believed that a visitor liked that Liam hoped that the goose appreciated that the girl liked that a monkey said that Emma liked that the cake was helped .", "output": "DREAM ( CHICKEN , NONE , NONE ) CCOMP WISH ( JOURNALIST , NONE , NONE ) CCOMP BELIEVE ( STUDENT , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( GOOSE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HELP ( NONE , CAKE , NONE )"}
{"input": "Form one: Daniel liked that a girl admired that Lucas noticed that Emma hoped that a penguin proved that Mia was given the cake by Christopher .", "output": "LIKE ( DANIEL , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP NOTICE ( LUCAS , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP PROVE ( PENGUIN , NONE , NONE ) CCOMP GIVE ( CHRISTOPHER , CAKE , MIA )"}
{"input": "Form one: Liam expected that the deer noticed that a monster liked that a cake was offered to the girl .", "output": "EXPECT ( LIAM , NONE , NONE ) CCOMP NOTICE ( DEER , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP OFFER ( NONE , CAKE , GIRL )"}
{"input": "Form one: Amelia liked that a scientist valued that Joseph tolerated that Skylar liked that a bird liked that a tiger wished that a professor admired that a sailor liked that William wished that a frog liked that the cake froze .", "output": "LIKE ( AMELIA , NONE , NONE ) CCOMP VALUE ( SCIENTIST , NONE , NONE ) CCOMP TOLERATE ( JOSEPH , NONE , NONE ) CCOMP LIKE ( SKYLAR , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP WISH ( TIGER , NONE , NONE ) CCOMP ADMIRE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP WISH ( WILLIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: Ava thought that a boy believed that Oliver liked that a student believed that Ella hoped that Jackson respected that David liked that a bird declared that Liam was sent a pillow in the pot by the girl .", "output": "THINK ( AVA , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP BELIEVE ( STUDENT , NONE , NONE ) CCOMP HOPE ( ELLA , NONE , NONE ) CCOMP RESPECT ( JACKSON , NONE , NONE ) CCOMP LIKE ( DAVID , NONE , NONE ) CCOMP DECLARE ( BIRD , NONE , NONE ) CCOMP SEND ( GIRL , IN ( PILLOW , POT ) , LIAM )"}
{"input": "Form one: A resident appreciated that a captain liked that the teacher hoped that Ava said that Emma hoped that the customer believed that Benjamin declared that Liam confessed that the girl grew .", "output": "APPRECIATE ( RESIDENT , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( CUSTOMER , NONE , NONE ) CCOMP DECLARE ( BENJAMIN , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP GROW ( NONE , GIRL , NONE )"}
{"input": "Form one: The boy confessed that Noah liked that Lily said that Isabella respected that Emma proved that the cat admired that Benjamin said that the butterfly froze .", "output": "CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP SAY ( LILY , NONE , NONE ) CCOMP RESPECT ( ISABELLA , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP SAY ( BENJAMIN , NONE , NONE ) CCOMP FREEZE ( NONE , BUTTERFLY , NONE )"}
{"input": "Form one: A dog supported that Mason noticed that Emma meant that Alexander liked that the girl meant that a frog liked that the donkey noticed that Riley hoped that the queen liked that the boy believed that a baby drew the cake .", "output": "SUPPORT ( DOG , NONE , NONE ) CCOMP NOTICE ( MASON , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP NOTICE ( DONKEY , NONE , NONE ) CCOMP HOPE ( RILEY , NONE , NONE ) CCOMP LIKE ( QUEEN , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP DRAW ( BABY , CAKE , NONE )"}
{"input": "Form one: The girl liked that the frog said that the boy expected that Liam liked that Stella liked that Lucas hoped that the horse admired that Olivia hoped that a governor liked that Carter liked that the manager said that Jaxon was given a banana in the castle .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( FROG , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( STELLA , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP ADMIRE ( HORSE , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP LIKE ( CARTER , NONE , NONE ) CCOMP SAY ( MANAGER , NONE , NONE ) CCOMP GIVE ( NONE , IN ( BANANA , CASTLE ) , JAXON )"}
{"input": "Form one: Emma liked that the lion liked that Abigail said that Sebastian liked that Matthew hoped that the donut burned .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP SAY ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP HOPE ( MATTHEW , NONE , NONE ) CCOMP BURN ( NONE , DONUT , NONE )"}
{"input": "Form one: Matthew said that the writer said that James respected that a girl liked that Jacob said that David proved that the teacher liked that Olivia said that the chief was posted the rose beside a machine .", "output": "SAY ( MATTHEW , NONE , NONE ) CCOMP SAY ( WRITER , NONE , NONE ) CCOMP RESPECT ( JAMES , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( JACOB , NONE , NONE ) CCOMP PROVE ( DAVID , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP POST ( NONE , BESIDE ( ROSE , MACHINE ) , CHIEF )"}
{"input": "Form one: The cat admired that James proved that a lion confessed that a horse believed that a duck liked that the girl liked that Amelia declared that Emma dreamed that a pumpkin was liked .", "output": "ADMIRE ( CAT , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP BELIEVE ( HORSE , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( AMELIA , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP LIKE ( NONE , PUMPKIN , NONE )"}
{"input": "Form one: Ryan liked that a girl liked that Hazel liked that a sailor confessed that Elijah said that the butterfly thought that Liam said that Noah tolerated that the manager said that the cat liked that Mateo noticed that the cake was passed to Aubrey by the giraffe .", "output": "LIKE ( RYAN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( HAZEL , NONE , NONE ) CCOMP CONFESS ( SAILOR , NONE , NONE ) CCOMP SAY ( ELIJAH , NONE , NONE ) CCOMP THINK ( BUTTERFLY , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP SAY ( MANAGER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( MATEO , NONE , NONE ) CCOMP PASS ( GIRAFFE , CAKE , AUBREY )"}
{"input": "Form one: Emma confessed that Sebastian liked that Liam liked that a frog liked that the girl gave Amelia a sandwich .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP GIVE ( GIRL , SANDWICH , AMELIA )"}
{"input": "Form one: Jacob proved that Emma said that the girl liked that Eleanor noticed that a lamb lended the raisin to the butterfly .", "output": "PROVE ( JACOB , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( ELEANOR , NONE , NONE ) CCOMP LEND ( LAMB , RAISIN , BUTTERFLY )"}
{"input": "Form one: A baby noticed that a pupil liked that a bunny liked that Sophia admired that the girl liked that Emma hoped that William noticed that the director was given a pretzel by Liam .", "output": "NOTICE ( BABY , NONE , NONE ) CCOMP LIKE ( PUPIL , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP ADMIRE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP GIVE ( LIAM , PRETZEL , DIRECTOR )"}
{"input": "Form one: The girl hoped that Noah liked that a frog confessed that a bee was offered a cake in the vessel .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP CONFESS ( FROG , NONE , NONE ) CCOMP OFFER ( NONE , IN ( CAKE , VESSEL ) , BEE )"}
{"input": "Form one: Mila proved that the zebra wished that Ryan noticed that Emma wished that Mia liked that Daniel liked that the teacher hoped that the monkey hoped that a girl hoped that William said that a president liked that Jayden liked that Liam gave a cake to the chicken .", "output": "PROVE ( MILA , NONE , NONE ) CCOMP WISH ( ZEBRA , NONE , NONE ) CCOMP NOTICE ( RYAN , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP LIKE ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( JAYDEN , NONE , NONE ) CCOMP GIVE ( LIAM , CAKE , CHICKEN )"}
{"input": "Form one: The captain dreamed that a boy meant that a girl hoped that a cat hoped that Liam liked that a turtle liked that Olivia said that the teacher declared that a child believed that the moose noticed that Emma liked that a cookie rolled .", "output": "DREAM ( CAPTAIN , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( TURTLE , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( TEACHER , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP NOTICE ( MOOSE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: The girl hoped that Scarlett appreciated that Emma liked that a dog noticed that Olivia wished that a pony hoped that James confessed that Skylar hoped that a chicken supported that Eleanor proved that a bird was mailed a shoe .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( SCARLETT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP WISH ( OLIVIA , NONE , NONE ) CCOMP HOPE ( PONY , NONE , NONE ) CCOMP CONFESS ( JAMES , NONE , NONE ) CCOMP HOPE ( SKYLAR , NONE , NONE ) CCOMP SUPPORT ( CHICKEN , NONE , NONE ) CCOMP PROVE ( ELEANOR , NONE , NONE ) CCOMP MAIL ( NONE , SHOE , BIRD )"}
{"input": "Form one: Owen liked that a lion appreciated that Emma thought that the girl liked that a zebra noticed that Scarlett wished that a mouse hoped that a dog appreciated that the chicken confessed that the monkey changed .", "output": "LIKE ( OWEN , NONE , NONE ) CCOMP APPRECIATE ( LION , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( ZEBRA , NONE , NONE ) CCOMP WISH ( SCARLETT , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP APPRECIATE ( DOG , NONE , NONE ) CCOMP CONFESS ( CHICKEN , NONE , NONE ) CCOMP CHANGE ( NONE , MONKEY , NONE )"}
{"input": "Form one: Olivia admired that Sophia hoped that Noah expected that the rose was rolled by Emma .", "output": "ADMIRE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP EXPECT ( NOAH , NONE , NONE ) CCOMP ROLL ( EMMA , ROSE , NONE )"}
{"input": "Form one: Liam confessed that the baby liked that Mila noticed that Claire hoped that James hoped that the donkey hoped that the monkey liked that the cat noticed that Ava liked that the yogurt was juggled by the chief .", "output": "CONFESS ( LIAM , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP NOTICE ( MILA , NONE , NONE ) CCOMP HOPE ( CLAIRE , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP JUGGLE ( CHIEF , YOGURT , NONE )"}
{"input": "Form one: Sophia imagined that a mouse liked that a cow liked that Emma rolled the lollipop .", "output": "IMAGINE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP ROLL ( EMMA , LOLLIPOP , NONE )"}
{"input": "Form one: The cat said that Emma wished that a dog noticed that the cow liked that Noah liked that the squirrel said that a cookie was served to the friend .", "output": "SAY ( CAT , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP SAY ( SQUIRREL , NONE , NONE ) CCOMP SERVE ( NONE , COOKIE , FRIEND )"}
{"input": "Form one: William admired that a dog confessed that a boy dreamed that Luke appreciated that Victoria liked that the weapon was liked .", "output": "ADMIRE ( WILLIAM , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP DREAM ( BOY , NONE , NONE ) CCOMP APPRECIATE ( LUKE , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( NONE , WEAPON , NONE )"}
{"input": "Form one: A creature confessed that a baby said that Emma liked that Ava shortened .", "output": "CONFESS ( CREATURE , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SHORTEN ( NONE , AVA , NONE )"}
{"input": "Form one: A girl imagined that the farmer appreciated that Oliver confessed that Emma liked that a penguin liked that Ethan confessed that Lincoln hoped that a jar froze .", "output": "IMAGINE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( FARMER , NONE , NONE ) CCOMP CONFESS ( OLIVER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP CONFESS ( ETHAN , NONE , NONE ) CCOMP HOPE ( LINCOLN , NONE , NONE ) CCOMP FREEZE ( NONE , JAR , NONE )"}
{"input": "Form one: The queen liked that a girl liked that a boy liked that Ava believed that the baby declared that Noah tolerated that Victoria burned Matthew .", "output": "LIKE ( QUEEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP DECLARE ( BABY , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP BURN ( VICTORIA , MATTHEW , NONE )"}
{"input": "Form one: The frog respected that Bella hoped that a duck liked that Charlotte dreamed that Ava proved that a boy appreciated that Noah appreciated that a scientist liked that the teacher said that Emma liked that a drink rolled .", "output": "RESPECT ( FROG , NONE , NONE ) CCOMP HOPE ( BELLA , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP DREAM ( CHARLOTTE , NONE , NONE ) CCOMP PROVE ( AVA , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP APPRECIATE ( NOAH , NONE , NONE ) CCOMP LIKE ( SCIENTIST , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: Emma hoped that the girl hoped that the dog respected that Liam imagined that a duke admired that the box slid .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( DUKE , NONE , NONE ) CCOMP SLIDE ( NONE , BOX , NONE )"}
{"input": "Form one: Ava wished that Noah hoped that a boy hoped that Emma liked that Alexander liked that a scientist thought that Liam liked that Luna hoped that a bear liked that the cake was given to the girl by Harper .", "output": "WISH ( AVA , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP THINK ( SCIENTIST , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( LUNA , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP GIVE ( HARPER , CAKE , GIRL )"}
{"input": "Form one: The dog said that Benjamin expected that Elijah liked that a girl liked that Hazel confessed that Charlotte said that a baby liked that the cloud rolled .", "output": "SAY ( DOG , NONE , NONE ) CCOMP EXPECT ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( HAZEL , NONE , NONE ) CCOMP SAY ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP ROLL ( NONE , CLOUD , NONE )"}
{"input": "Form one: Emma supported that the visitor liked that Mia declared that a deer liked that the girl liked that the bucket was rolled .", "output": "SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP DECLARE ( MIA , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , BUCKET , NONE )"}
{"input": "Form one: A bird liked that a deer tolerated that the baby liked that Levi liked that Charlotte noticed that the child liked that Mason believed that the girl rolled .", "output": "LIKE ( BIRD , NONE , NONE ) CCOMP TOLERATE ( DEER , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( LEVI , NONE , NONE ) CCOMP NOTICE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP BELIEVE ( MASON , NONE , NONE ) CCOMP ROLL ( NONE , GIRL , NONE )"}
{"input": "Form one: The dog imagined that the scientist declared that a child hoped that Mason liked that Camila liked that the chicken hoped that the cat hoped that a girl painted .", "output": "IMAGINE ( DOG , NONE , NONE ) CCOMP DECLARE ( SCIENTIST , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP LIKE ( CAMILA , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP PAINT ( GIRL , NONE , NONE )"}
{"input": "Form one: Emma confessed that Victoria hoped that a girl liked that Ava was lended a cake by Liam .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP HOPE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LEND ( LIAM , CAKE , AVA )"}
{"input": "Form one: A president dreamed that Mason liked that the baby hoped that a pupil dreamed that Emma supported that the girl believed that Evelyn confessed that Oliver liked that a producer expected that Benjamin confessed that Sophia declared that a chicken liked that Noah dusted .", "output": "DREAM ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP DREAM ( PUPIL , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP CONFESS ( EVELYN , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP EXPECT ( PRODUCER , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP DECLARE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP DUST ( NOAH , NONE , NONE )"}
{"input": "Form one: A captain said that Harper liked that a bear liked that the girl liked that a mouse hoped that a puppy hoped that Madison liked that a fish proved that Elijah said that a cat expected that Leah rolled .", "output": "SAY ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP HOPE ( PUPPY , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP PROVE ( FISH , NONE , NONE ) CCOMP SAY ( ELIJAH , NONE , NONE ) CCOMP EXPECT ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , LEAH , NONE )"}
{"input": "Form one: The champion liked that a child believed that the boy liked that the dog liked that Luke appreciated that Liam noticed that Emma said that a cake rolled .", "output": "LIKE ( CHAMPION , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP APPRECIATE ( LUKE , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Liam expected that the teacher confessed that Oliver liked that a sailor confessed that Lucas confessed that the cat liked that a dog noticed that Harper liked that Olivia liked that a boy liked that a baby valued that the chicken admired that Jacob loaned Abigail the cake .", "output": "EXPECT ( LIAM , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP CONFESS ( SAILOR , NONE , NONE ) CCOMP CONFESS ( LUCAS , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP VALUE ( BABY , NONE , NONE ) CCOMP ADMIRE ( CHICKEN , NONE , NONE ) CCOMP LOAN ( JACOB , CAKE , ABIGAIL )"}
{"input": "Form one: Isabella wished that Emma valued that the boy liked that a cat froze .", "output": "WISH ( ISABELLA , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP FREEZE ( NONE , CAT , NONE )"}
{"input": "Form one: Dylan liked that the horse noticed that a butterfly meant that Owen tolerated that Amelia meant that the boy said that Isaac appreciated that Noah meant that a girl declared that Emma confessed that a baby was given the radio beside a bed by a giraffe .", "output": "LIKE ( DYLAN , NONE , NONE ) CCOMP NOTICE ( HORSE , NONE , NONE ) CCOMP MEAN ( BUTTERFLY , NONE , NONE ) CCOMP TOLERATE ( OWEN , NONE , NONE ) CCOMP MEAN ( AMELIA , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP APPRECIATE ( ISAAC , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP GIVE ( GIRAFFE , BESIDE ( RADIO , BED ) , BABY )"}
{"input": "Form one: The girl liked that a dog valued that a chicken respected that Skylar liked that the boy liked that Liam liked that Jacob liked that the prince liked that a squirrel was given the cake on a tree .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP VALUE ( DOG , NONE , NONE ) CCOMP RESPECT ( CHICKEN , NONE , NONE ) CCOMP LIKE ( SKYLAR , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP LIKE ( PRINCE , NONE , NONE ) CCOMP GIVE ( NONE , ON ( CAKE , TREE ) , SQUIRREL )"}
{"input": "Form one: Ellie hoped that Violet liked that James confessed that Emma noticed that a child disintegrated .", "output": "HOPE ( ELLIE , NONE , NONE ) CCOMP LIKE ( VIOLET , NONE , NONE ) CCOMP CONFESS ( JAMES , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP DISINTEGRATE ( NONE , CHILD , NONE )"}
{"input": "Form one: Oliver liked that Mila liked that Emma liked that the girl declared that a boy was lended a pillow .", "output": "LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP LEND ( NONE , PILLOW , BOY )"}
{"input": "Form one: A girl thought that Liam liked that a butterfly said that Sophia liked that a horse liked that a dog respected that Abigail needed to walk .", "output": "THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP NEED ( ABIGAIL , NONE , NONE ) XCOMP WALK ( ABIGAIL , NONE , NONE )"}
{"input": "Form one: Emma noticed that a bee liked that Olivia believed that Ava liked that the baby was given the lollipop .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP GIVE ( NONE , LOLLIPOP , BABY )"}
{"input": "Form one: Alexander wished that Logan liked that the girl confessed that Emma valued that the mouse collapsed .", "output": "WISH ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP COLLAPSE ( NONE , MOUSE , NONE )"}
{"input": "Form one: The prince said that Levi liked that the scientist noticed that Aria noticed that a monkey liked that the girl noticed that Noah believed that a giraffe liked that Emma tolerated that Emily liked that a cake rolled .", "output": "SAY ( PRINCE , NONE , NONE ) CCOMP LIKE ( LEVI , NONE , NONE ) CCOMP NOTICE ( SCIENTIST , NONE , NONE ) CCOMP NOTICE ( ARIA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma supported that a scientist tolerated that the cat valued that Charlotte dreamed that Logan liked that a boy said that a sailor hoped that a cow hoped that a buyer believed that Caleb was lended the drink beside a basket .", "output": "SUPPORT ( EMMA , NONE , NONE ) CCOMP TOLERATE ( SCIENTIST , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP DREAM ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP HOPE ( COW , NONE , NONE ) CCOMP BELIEVE ( BUYER , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( DRINK , BASKET ) , CALEB )"}
{"input": "Form one: Ava supported that a dog liked that Nathan liked that Henry admired that the girl thought that the monster liked that a cat liked that Owen believed that the glue was eaten .", "output": "SUPPORT ( AVA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP ADMIRE ( HENRY , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( OWEN , NONE , NONE ) CCOMP EAT ( NONE , GLUE , NONE )"}
{"input": "Form one: The horse liked that Ava liked that Charlotte wished that a girl said that Oliver respected that the judge believed that a hero was given the donut in the shoe beside the tree by a child .", "output": "LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP WISH ( CHARLOTTE , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP RESPECT ( OLIVER , NONE , NONE ) CCOMP BELIEVE ( JUDGE , NONE , NONE ) CCOMP GIVE ( CHILD , IN ( DONUT , BESIDE ( SHOE , TREE ) ) , HERO )"}
{"input": "Form one: The penguin respected that the zebra expected that Benjamin declared that a boy expected that a cat liked that a butterfly liked that a child thought that a girl believed that Emma hoped that a game burned .", "output": "RESPECT ( PENGUIN , NONE , NONE ) CCOMP EXPECT ( ZEBRA , NONE , NONE ) CCOMP DECLARE ( BENJAMIN , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP THINK ( CHILD , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP BURN ( NONE , GAME , NONE )"}
{"input": "Form one: A president said that the cat proved that a duck said that a girl liked that William hoped that a frog liked that Mila dreamed that a chicken liked that Sophia was brought a balloon by Michael .", "output": "SAY ( PRESIDENT , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP SAY ( DUCK , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP DREAM ( MILA , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP BRING ( MICHAEL , BALLOON , SOPHIA )"}
{"input": "Form one: A teacher hoped that Emma hoped that a boy liked that Aiden smiled .", "output": "HOPE ( TEACHER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SMILE ( AIDEN , NONE , NONE )"}
{"input": "Form one: A chicken believed that the sheep hoped that Asher thought that Amelia tolerated that Joseph dreamed that the girl appreciated that the tourist hoped that the bird dreamed that Brooklyn liked that Noah hoped that Liam hoped that Sophia hoped that a zebra observed Aurora .", "output": "BELIEVE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( SHEEP , NONE , NONE ) CCOMP THINK ( ASHER , NONE , NONE ) CCOMP TOLERATE ( AMELIA , NONE , NONE ) CCOMP DREAM ( JOSEPH , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP HOPE ( TOURIST , NONE , NONE ) CCOMP DREAM ( BIRD , NONE , NONE ) CCOMP LIKE ( BROOKLYN , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP OBSERVE ( ZEBRA , AURORA , NONE )"}
{"input": "Form one: The monkey liked that James dreamed that Evelyn thought that Julian hoped that Emily liked that a boy hoped that William liked that a girl proved that a governor liked that Michael appreciated that Zoey respected that Noah rented the needle in the cylinder to a soldier .", "output": "LIKE ( MONKEY , NONE , NONE ) CCOMP DREAM ( JAMES , NONE , NONE ) CCOMP THINK ( EVELYN , NONE , NONE ) CCOMP HOPE ( JULIAN , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP APPRECIATE ( MICHAEL , NONE , NONE ) CCOMP RESPECT ( ZOEY , NONE , NONE ) CCOMP RENT ( NOAH , IN ( NEEDLE , CYLINDER ) , SOLDIER )"}
{"input": "Form one: A boy hoped that Aurora hoped that a driver liked that Charlotte liked that a giraffe noticed that Emma noticed that Madison liked that the scientist proved that the girl said that Olivia liked that a chicken was wired a pretzel .", "output": "HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( AURORA , NONE , NONE ) CCOMP LIKE ( DRIVER , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP NOTICE ( GIRAFFE , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP PROVE ( SCIENTIST , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP WIRE ( NONE , PRETZEL , CHICKEN )"}
{"input": "Form one: The boy liked that a teacher meant that Harper thought that a cake was found by Emma .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP MEAN ( TEACHER , NONE , NONE ) CCOMP THINK ( HARPER , NONE , NONE ) CCOMP FIND ( EMMA , CAKE , NONE )"}
{"input": "Form one: Elizabeth believed that Sebastian confessed that a girl liked that Sophia declared that a cat liked that the butterfly wished that the boy declared that William liked that the coach hoped that the child wished that Liam was given a cake on the counter in the spaceship .", "output": "BELIEVE ( ELIZABETH , NONE , NONE ) CCOMP CONFESS ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP WISH ( BUTTERFLY , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( COACH , NONE , NONE ) CCOMP WISH ( CHILD , NONE , NONE ) CCOMP GIVE ( NONE , ON ( CAKE , IN ( COUNTER , SPACESHIP ) ) , LIAM )"}
{"input": "Form one: Oliver liked that Emma wished that Violet hoped that a student meant that Noah meant that a ring was rolled .", "output": "LIKE ( OLIVER , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP HOPE ( VIOLET , NONE , NONE ) CCOMP MEAN ( STUDENT , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP ROLL ( NONE , RING , NONE )"}
{"input": "Form one: Andrew meant that the girl liked that the bear liked that the spokesman liked that Emma liked that a lamb hoped that the servant meant that Liam respected that Oliver tolerated that the cake was slid .", "output": "MEAN ( ANDREW , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( LAMB , NONE , NONE ) CCOMP MEAN ( SERVANT , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP TOLERATE ( OLIVER , NONE , NONE ) CCOMP SLIDE ( NONE , CAKE , NONE )"}
{"input": "Form one: Ava thought that the child hoped that the fly liked that Harper hoped that Olivia thought that Emma liked that Abigail hoped that Isabella was given the cake .", "output": "THINK ( AVA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP HOPE ( HARPER , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( ABIGAIL , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , ISABELLA )"}
{"input": "Form one: Wyatt hoped that the cat liked that the deer declared that the girl hoped that the dog hoped that a baby respected that Liam liked that the boy was promised the drink .", "output": "HOPE ( WYATT , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP DECLARE ( DEER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP RESPECT ( BABY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP PROMISE ( NONE , DRINK , BOY )"}
{"input": "Form one: A baby meant that Noah liked that Caleb said that a boy supported that the deer liked that the pig respected that the frog liked that a girl said that Olivia believed that Nathan liked that the customer hoped that Emma thought that a pupil was given a yogurt in the house beside a skull .", "output": "MEAN ( BABY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP SAY ( CALEB , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP RESPECT ( PIG , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP HOPE ( CUSTOMER , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP GIVE ( NONE , IN ( YOGURT , BESIDE ( HOUSE , SKULL ) ) , PUPIL )"}
{"input": "Form one: A baby said that Anthony believed that Emma liked that Charlotte thought that a cat hoped that Christopher hoped that the frog hoped that a boy liked that a monkey liked that a gumball rolled .", "output": "SAY ( BABY , NONE , NONE ) CCOMP BELIEVE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP THINK ( CHARLOTTE , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( CHRISTOPHER , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP ROLL ( NONE , GUMBALL , NONE )"}
{"input": "Form one: Liam thought that the bee hoped that William said that the boy liked that Noah believed that a tenant thought that the sheep proved that Evelyn proved that Emma valued that the bird hoped that the cake was found .", "output": "THINK ( LIAM , NONE , NONE ) CCOMP HOPE ( BEE , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP THINK ( TENANT , NONE , NONE ) CCOMP PROVE ( SHEEP , NONE , NONE ) CCOMP PROVE ( EVELYN , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP HOPE ( BIRD , NONE , NONE ) CCOMP FIND ( NONE , CAKE , NONE )"}
{"input": "Form one: A girl said that a lion declared that a baby hoped that a box burned .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP DECLARE ( LION , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP BURN ( NONE , BOX , NONE )"}
{"input": "Form one: A monkey confessed that a boy hoped that Liam hoped that the customer confessed that the chair floated .", "output": "CONFESS ( MONKEY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP CONFESS ( CUSTOMER , NONE , NONE ) CCOMP FLOAT ( NONE , CHAIR , NONE )"}
{"input": "Form one: The bear admired that Amelia appreciated that Ella hoped that Ava liked that Levi meant that a girl was loaned the donut on the table .", "output": "ADMIRE ( BEAR , NONE , NONE ) CCOMP APPRECIATE ( AMELIA , NONE , NONE ) CCOMP HOPE ( ELLA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP MEAN ( LEVI , NONE , NONE ) CCOMP LOAN ( NONE , ON ( DONUT , TABLE ) , GIRL )"}
{"input": "Form one: Mila supported that a giraffe liked that a dog liked that Madison expected that Charlotte slid .", "output": "SUPPORT ( MILA , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP EXPECT ( MADISON , NONE , NONE ) CCOMP SLIDE ( NONE , CHARLOTTE , NONE )"}
{"input": "Form one: Violet supported that Ava liked that Isabella supported that Claire valued that the poet appreciated that Olivia said that Emma valued that Liam liked that Charlotte admired that a cake was drawn .", "output": "SUPPORT ( VIOLET , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP SUPPORT ( ISABELLA , NONE , NONE ) CCOMP VALUE ( CLAIRE , NONE , NONE ) CCOMP APPRECIATE ( POET , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( CHARLOTTE , NONE , NONE ) CCOMP DRAW ( NONE , CAKE , NONE )"}
{"input": "Form one: The squirrel liked that Emma hoped that John liked that a lamb supported that a baby said that a girl believed that the guest liked that Isabella liked that Jaxon believed that Liam hoped that a sailor was given a cake by a dog .", "output": "LIKE ( SQUIRREL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( JOHN , NONE , NONE ) CCOMP SUPPORT ( LAMB , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( GUEST , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP BELIEVE ( JAXON , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP GIVE ( DOG , CAKE , SAILOR )"}
{"input": "Form one: Oliver imagined that Noah liked that Emma admired that a father liked that William appreciated that a hen believed that a cow liked that the cake burned .", "output": "IMAGINE ( OLIVER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP APPRECIATE ( WILLIAM , NONE , NONE ) CCOMP BELIEVE ( HEN , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP BURN ( NONE , CAKE , NONE )"}
{"input": "Form one: Stella said that a girl hoped that the mouse confessed that Aurora hoped that the dog hoped that Lucas confessed that Liam hoped that Camila liked that Hazel liked that the boy liked that Emma noticed that the monkey was lended a cake .", "output": "SAY ( STELLA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP CONFESS ( MOUSE , NONE , NONE ) CCOMP HOPE ( AURORA , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP CONFESS ( LUCAS , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( CAMILA , NONE , NONE ) CCOMP LIKE ( HAZEL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LEND ( NONE , CAKE , MONKEY )"}
{"input": "Form one: The baby expected that a girl liked that Liam proved that a penny reddened .", "output": "EXPECT ( BABY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP REDDEN ( NONE , PENNY , NONE )"}
{"input": "Form one: William liked that the mouse hoped that the girl valued that a crocodile liked that a rose was liked .", "output": "LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP LIKE ( CROCODILE , NONE , NONE ) CCOMP LIKE ( NONE , ROSE , NONE )"}
{"input": "Form one: Olivia confessed that the pupil admired that the goose said that Liam confessed that Theodore liked that Jackson liked that a bee liked that a dog liked that a boy expected that a girl split .", "output": "CONFESS ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( PUPIL , NONE , NONE ) CCOMP SAY ( GOOSE , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP LIKE ( JACKSON , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP SPLIT ( NONE , GIRL , NONE )"}
{"input": "Form one: The boy liked that Emma liked that Elijah liked that Elizabeth admired that the wolf liked that Ava liked that a customer tolerated that a dog declared that Luke liked that Joshua said that the child hoped that Olivia noticed that the cake was cleaned .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP ADMIRE ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP TOLERATE ( CUSTOMER , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP LIKE ( LUKE , NONE , NONE ) CCOMP SAY ( JOSHUA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP CLEAN ( NONE , CAKE , NONE )"}
{"input": "Form one: A girl noticed that Liam appreciated that Caleb hoped that Samuel said that Carter was lended a mandarin in a house .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP HOPE ( CALEB , NONE , NONE ) CCOMP SAY ( SAMUEL , NONE , NONE ) CCOMP LEND ( NONE , IN ( MANDARIN , HOUSE ) , CARTER )"}
{"input": "Form one: A boy confessed that the girl liked that Ava hoped that David expected that a cat admired that Liam hoped that Daniel respected that a moose liked that Emily proved that a toy rolled .", "output": "CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP EXPECT ( DAVID , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP RESPECT ( DANIEL , NONE , NONE ) CCOMP LIKE ( MOOSE , NONE , NONE ) CCOMP PROVE ( EMILY , NONE , NONE ) CCOMP ROLL ( NONE , TOY , NONE )"}
{"input": "Form one: The bird expected that Ethan confessed that a sailor liked that Olivia admired that Ava liked that a tourist noticed that Liam appreciated that Jacob liked that the girl liked that Emma hoped that a fish liked that Harper proved that Camila was passed the banana on the table by Jackson .", "output": "EXPECT ( BIRD , NONE , NONE ) CCOMP CONFESS ( ETHAN , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP NOTICE ( TOURIST , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP PROVE ( HARPER , NONE , NONE ) CCOMP PASS ( JACKSON , ON ( BANANA , TABLE ) , CAMILA )"}
{"input": "Form one: Thomas liked that a child liked that Emma declared that Chloe appreciated that a teacher said that a bird liked that Olivia liked that a beer was offered to William by the scientist .", "output": "LIKE ( THOMAS , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( CHLOE , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP OFFER ( SCIENTIST , BEER , WILLIAM )"}
{"input": "Form one: A dog noticed that a child liked that a host supported that the boy thought that Joseph liked that Emma believed that a professor liked that the baby imagined that Abigail ran .", "output": "NOTICE ( DOG , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP SUPPORT ( HOST , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP LIKE ( JOSEPH , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP IMAGINE ( BABY , NONE , NONE ) CCOMP RUN ( ABIGAIL , NONE , NONE )"}
{"input": "Form one: Emma liked that Olivia liked that Grace said that the teacher imagined that Eleanor said that the sheep said that the girl hoped that a hero liked that the horse doubled the cake .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SAY ( GRACE , NONE , NONE ) CCOMP IMAGINE ( TEACHER , NONE , NONE ) CCOMP SAY ( ELEANOR , NONE , NONE ) CCOMP SAY ( SHEEP , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( HERO , NONE , NONE ) CCOMP DOUBLE ( HORSE , CAKE , NONE )"}
{"input": "Form one: Camila hoped that Sebastian liked that Isabella proved that Liam said that William declared that Elijah wished that a boy wished that the duck hoped that Olivia expected that the cat liked that Penelope said that Emma was returned the cake .", "output": "HOPE ( CAMILA , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP PROVE ( ISABELLA , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP WISH ( ELIJAH , NONE , NONE ) CCOMP WISH ( BOY , NONE , NONE ) CCOMP HOPE ( DUCK , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SAY ( PENELOPE , NONE , NONE ) CCOMP RETURN ( NONE , CAKE , EMMA )"}
{"input": "Form one: Liam said that a chicken hoped that Zoey imagined that a prince noticed that a bear declared that a girl thought that the host expected that James admired that a king said that a cookie was hunted by Emma .", "output": "SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP IMAGINE ( ZOEY , NONE , NONE ) CCOMP NOTICE ( PRINCE , NONE , NONE ) CCOMP DECLARE ( BEAR , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP EXPECT ( HOST , NONE , NONE ) CCOMP ADMIRE ( JAMES , NONE , NONE ) CCOMP SAY ( KING , NONE , NONE ) CCOMP HUNT ( EMMA , COOKIE , NONE )"}
{"input": "Form one: Ava noticed that the host noticed that a cat liked that Emma liked that Charlotte liked that a monster liked that the journalist meant that the girl liked that Olivia awarded a frog a donut beside a table on a tree .", "output": "NOTICE ( AVA , NONE , NONE ) CCOMP NOTICE ( HOST , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP MEAN ( JOURNALIST , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP AWARD ( OLIVIA , BESIDE ( DONUT , ON ( TABLE , TREE ) ) , FROG )"}
{"input": "Form one: The girl liked that Emma respected that Noah hoped that the boy hoped that the kitty supported that Liam hoped that Jacob tolerated that the moose hoped that a teacher liked that Benjamin declared that Brooklyn hoped that a plant decomposed .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP SUPPORT ( KITTY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP TOLERATE ( JACOB , NONE , NONE ) CCOMP HOPE ( MOOSE , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP DECLARE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( BROOKLYN , NONE , NONE ) CCOMP DECOMPOSE ( NONE , PLANT , NONE )"}
{"input": "Form one: A horse said that Ethan liked that a duck liked that the tiger liked that a drink rolled .", "output": "SAY ( HORSE , NONE , NONE ) CCOMP LIKE ( ETHAN , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP LIKE ( TIGER , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: The baby liked that a chicken liked that Emma noticed that Mia liked that Olivia liked that Audrey liked that a poet declared that Noah liked that the mouse liked that the child liked that a girl believed that Charlotte was lended the cookie .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( AUDREY , NONE , NONE ) CCOMP DECLARE ( POET , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LEND ( NONE , COOKIE , CHARLOTTE )"}
{"input": "Form one: A penguin hoped that a cat liked that a girl believed that Jack fed Luna the cake .", "output": "HOPE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP FEED ( JACK , CAKE , LUNA )"}
{"input": "Form one: The boy liked that Olivia liked that Emma liked that Carter meant that James hoped that the dog hoped that Theodore supported that Liam liked that Avery hoped that Dylan liked that the bear rolled .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP MEAN ( CARTER , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP SUPPORT ( THEODORE , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( AVERY , NONE , NONE ) CCOMP LIKE ( DYLAN , NONE , NONE ) CCOMP ROLL ( NONE , BEAR , NONE )"}
{"input": "Form one: Olivia liked that the puppy liked that Harper noticed that a donut was eaten .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP NOTICE ( HARPER , NONE , NONE ) CCOMP EAT ( NONE , DONUT , NONE )"}
{"input": "Form one: Mia said that Emma noticed that Owen liked that a girl declared that a bat was cooked by Scarlett .", "output": "SAY ( MIA , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( OWEN , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP COOK ( SCARLETT , BAT , NONE )"}
{"input": "Form one: A goose hoped that a servant admired that a girl liked that Emma liked that Liam supported that Amelia hoped that Madison meant that Olivia supported that Violet hoped that the cake rolled .", "output": "HOPE ( GOOSE , NONE , NONE ) CCOMP ADMIRE ( SERVANT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP HOPE ( AMELIA , NONE , NONE ) CCOMP MEAN ( MADISON , NONE , NONE ) CCOMP SUPPORT ( OLIVIA , NONE , NONE ) CCOMP HOPE ( VIOLET , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: The baby said that the student thought that a girl noticed that Madison liked that Luna hoped that the monkey hoped that Noah touched the cake beside a boat .", "output": "SAY ( BABY , NONE , NONE ) CCOMP THINK ( STUDENT , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP HOPE ( LUNA , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP TOUCH ( NOAH , BESIDE ( CAKE , BOAT ) , NONE )"}
{"input": "Form one: Emma liked that Oliver liked that Elizabeth liked that a strawberry split .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP SPLIT ( NONE , STRAWBERRY , NONE )"}
{"input": "Form one: Emma hoped that Sophia liked that the boy expected that Stella wished that Gabriel liked that Lincoln tolerated that a coach wished that Liam proved that Isabella noticed that Skylar hoped that the cake burned .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP WISH ( STELLA , NONE , NONE ) CCOMP LIKE ( GABRIEL , NONE , NONE ) CCOMP TOLERATE ( LINCOLN , NONE , NONE ) CCOMP WISH ( COACH , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( SKYLAR , NONE , NONE ) CCOMP BURN ( NONE , CAKE , NONE )"}
{"input": "Form one: The queen liked that William confessed that a bear liked that a teacher proved that Noah said that Lucas declared that Liam liked that Olivia was lended a glue .", "output": "LIKE ( QUEEN , NONE , NONE ) CCOMP CONFESS ( WILLIAM , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP PROVE ( TEACHER , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP DECLARE ( LUCAS , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LEND ( NONE , GLUE , OLIVIA )"}
{"input": "Form one: A cat hoped that a girl said that a child noticed that a boy liked that the duck thought that the chief noticed that a baby was sold the donut on a tiger .", "output": "HOPE ( CAT , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP THINK ( DUCK , NONE , NONE ) CCOMP NOTICE ( CHIEF , NONE , NONE ) CCOMP SELL ( NONE , ON ( DONUT , TIGER ) , BABY )"}
{"input": "Form one: The mother dreamed that a deer liked that Nora hoped that the girl believed that a dog noticed that Noah admired that the boy was returned a strawberry by Oliver .", "output": "DREAM ( MOTHER , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP HOPE ( NORA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP RETURN ( OLIVER , STRAWBERRY , BOY )"}
{"input": "Form one: Emma noticed that a child believed that Ava respected that the dog liked that the customer hoped that Olivia liked that Audrey respected that William liked that a bird liked that the cake was eaten by Mia .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP RESPECT ( AVA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP RESPECT ( AUDREY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP EAT ( MIA , CAKE , NONE )"}
{"input": "Form one: The child hoped that a host noticed that Emma dreamed that Elijah hoped that a girl noticed that Victoria appreciated that a visitor liked that the zebra declared that Luna liked that a monkey hoped that Ava liked that a cake was thrown .", "output": "HOPE ( CHILD , NONE , NONE ) CCOMP NOTICE ( HOST , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP DECLARE ( ZEBRA , NONE , NONE ) CCOMP LIKE ( LUNA , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP THROW ( NONE , CAKE , NONE )"}
{"input": "Form one: Levi liked that the prisoner thought that a cat hoped that Joshua was lended a strawberry on a shelf by a girl .", "output": "LIKE ( LEVI , NONE , NONE ) CCOMP THINK ( PRISONER , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LEND ( GIRL , ON ( STRAWBERRY , SHELF ) , JOSHUA )"}
{"input": "Form one: Benjamin proved that Ava confessed that Daniel thought that a dog supported that Penelope believed that the cat imagined that a pupil noticed that a boy liked that Camila said that Isabella liked that a cake rolled .", "output": "PROVE ( BENJAMIN , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP THINK ( DANIEL , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP BELIEVE ( PENELOPE , NONE , NONE ) CCOMP IMAGINE ( CAT , NONE , NONE ) CCOMP NOTICE ( PUPIL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( CAMILA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Sophia liked that the baby dreamed that Emma liked that a cat liked that Ava expected that James thought that Lillian confessed that the boy noticed that Eleanor burned .", "output": "LIKE ( SOPHIA , NONE , NONE ) CCOMP DREAM ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP EXPECT ( AVA , NONE , NONE ) CCOMP THINK ( JAMES , NONE , NONE ) CCOMP CONFESS ( LILLIAN , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP BURN ( NONE , ELEANOR , NONE )"}
{"input": "Form one: Ava liked that Oliver liked that a monster said that a potato was drawn by Noah .", "output": "LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP SAY ( MONSTER , NONE , NONE ) CCOMP DRAW ( NOAH , POTATO , NONE )"}
{"input": "Form one: A frog hoped that Sofia admired that Aiden liked that the teacher appreciated that a girl liked that the penguin believed that Samuel declared that a coach supported that the soldier thought that Emma hoped that a cake was eaten by Zoe .", "output": "HOPE ( FROG , NONE , NONE ) CCOMP ADMIRE ( SOFIA , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP APPRECIATE ( TEACHER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( PENGUIN , NONE , NONE ) CCOMP DECLARE ( SAMUEL , NONE , NONE ) CCOMP SUPPORT ( COACH , NONE , NONE ) CCOMP THINK ( SOLDIER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP EAT ( ZOE , CAKE , NONE )"}
{"input": "Form one: Liam valued that the farmer hoped that the prince liked that Ava liked that a glue rolled .", "output": "VALUE ( LIAM , NONE , NONE ) CCOMP HOPE ( FARMER , NONE , NONE ) CCOMP LIKE ( PRINCE , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , GLUE , NONE )"}
{"input": "Form one: Emma liked that a hero declared that Victoria confessed that Harper liked that a gumball was forwarded to the human .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP DECLARE ( HERO , NONE , NONE ) CCOMP CONFESS ( VICTORIA , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP FORWARD ( NONE , GUMBALL , HUMAN )"}
{"input": "Form one: Harper liked that a cat thought that Luna said that Stella hoped that Luke wished that the girl hoped that Violet noticed that Emma liked a boy beside the table .", "output": "LIKE ( HARPER , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP SAY ( LUNA , NONE , NONE ) CCOMP HOPE ( STELLA , NONE , NONE ) CCOMP WISH ( LUKE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NOTICE ( VIOLET , NONE , NONE ) CCOMP LIKE ( EMMA , BESIDE ( BOY , TABLE ) , NONE )"}
{"input": "Form one: Harper liked that Liam liked that a girl dreamed that the king said that James liked that a cookie was eaten by Isabella .", "output": "LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP SAY ( KING , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP EAT ( ISABELLA , COOKIE , NONE )"}
{"input": "Form one: A dog said that Aiden declared that the child liked that James hoped that Liam rolled .", "output": "SAY ( DOG , NONE , NONE ) CCOMP DECLARE ( AIDEN , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP ROLL ( NONE , LIAM , NONE )"}
{"input": "Form one: Liam liked that the bunny confessed that Ava noticed that a girl valued that Charlotte noticed that a cake froze .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( BUNNY , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP NOTICE ( CHARLOTTE , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: A cat said that the child proved that a girl liked that Riley dreamed that the fish proved that a bear tolerated that Sofia liked that Liam respected that Emma wished that Olivia appreciated that a dog said that the cake was rolled .", "output": "SAY ( CAT , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DREAM ( RILEY , NONE , NONE ) CCOMP PROVE ( FISH , NONE , NONE ) CCOMP TOLERATE ( BEAR , NONE , NONE ) CCOMP LIKE ( SOFIA , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( OLIVIA , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Mia imagined that Liam liked that Olivia liked that the boy noticed that Emma believed that a bee tolerated that Evelyn declared that the baby pierced a bat on a desk .", "output": "IMAGINE ( MIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( BEE , NONE , NONE ) CCOMP DECLARE ( EVELYN , NONE , NONE ) CCOMP PIERCE ( BABY , ON ( BAT , DESK ) , NONE )"}
{"input": "Form one: Logan liked that the girl believed that the hero liked that Oliver hoped that Emma liked that Olivia liked that Amelia noticed that the professor respected that Liam liked that the baby noticed that the sweetcorn was found .", "output": "LIKE ( LOGAN , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( HERO , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( AMELIA , NONE , NONE ) CCOMP RESPECT ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP FIND ( NONE , SWEETCORN , NONE )"}
{"input": "Form one: The baby liked that Logan believed that a politician liked that the patient proved that Jack declared that the child liked that Jaxon imagined that the cat liked that the chicken thought that the brush was given to the bunny .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP BELIEVE ( LOGAN , NONE , NONE ) CCOMP LIKE ( POLITICIAN , NONE , NONE ) CCOMP PROVE ( PATIENT , NONE , NONE ) CCOMP DECLARE ( JACK , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP IMAGINE ( JAXON , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP THINK ( CHICKEN , NONE , NONE ) CCOMP GIVE ( NONE , BRUSH , BUNNY )"}
{"input": "Form one: Mia confessed that a girl admired that a teacher liked that Emma grew .", "output": "CONFESS ( MIA , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP GROW ( NONE , EMMA , NONE )"}
{"input": "Form one: Aurora meant that the girl noticed that the father liked that James noticed that Dylan hoped that Liam needed to sneeze .", "output": "MEAN ( AURORA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP HOPE ( DYLAN , NONE , NONE ) CCOMP NEED ( LIAM , NONE , NONE ) XCOMP SNEEZE ( LIAM , NONE , NONE )"}
{"input": "Form one: Sophia imagined that the frog wished that Emma hoped that a horse liked that the politician confessed that the cat liked that Eleanor collapsed .", "output": "IMAGINE ( SOPHIA , NONE , NONE ) CCOMP WISH ( FROG , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP CONFESS ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP COLLAPSE ( NONE , ELEANOR , NONE )"}
{"input": "Form one: Liam proved that David liked that Charlotte hoped that the boy admired that a chicken hoped that a mouse hoped that the girl hoped that Ava believed that the pancake was liked by the host .", "output": "PROVE ( LIAM , NONE , NONE ) CCOMP LIKE ( DAVID , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP LIKE ( HOST , PANCAKE , NONE )"}
{"input": "Form one: Camila liked that Emma hoped that a fly hoped that a monkey tolerated that a dog proved that Anthony noticed that Benjamin hoped that a girl liked that Olivia supported that Isabella noticed that the boy liked that the hero said that Wyatt helped the fruit in the soup .", "output": "LIKE ( CAMILA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( FLY , NONE , NONE ) CCOMP TOLERATE ( MONKEY , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP NOTICE ( ANTHONY , NONE , NONE ) CCOMP HOPE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( HERO , NONE , NONE ) CCOMP HELP ( WYATT , IN ( FRUIT , SOUP ) , NONE )"}
{"input": "Form one: A girl imagined that a cat liked that William hoped that Liam noticed that Oliver noticed that the moose liked that Emma noticed that Bella was lended a cake .", "output": "IMAGINE ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP LIKE ( MOOSE , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LEND ( NONE , CAKE , BELLA )"}
{"input": "Form one: Sophia thought that the boy liked that a duck liked that the zebra liked that James declared that Emma liked that the girl believed that a dog observed .", "output": "THINK ( SOPHIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP LIKE ( ZEBRA , NONE , NONE ) CCOMP DECLARE ( JAMES , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP OBSERVE ( DOG , NONE , NONE )"}
{"input": "Form one: A dog admired that a sailor dreamed that the baby liked that Olivia noticed that Liam liked that Emma liked that the boy hoped that a pupil hoped that Oliver hoped that a donut was liked .", "output": "ADMIRE ( DOG , NONE , NONE ) CCOMP DREAM ( SAILOR , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( PUPIL , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( NONE , DONUT , NONE )"}
{"input": "Form one: The turkey liked that a girl valued that the boy said that Oliver liked that Liam confessed that Evelyn liked that Emma expected that Savannah tolerated that a cat liked that the bird rolled .", "output": "LIKE ( TURKEY , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP TOLERATE ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , BIRD , NONE )"}
{"input": "Form one: The student thought that the child respected that the frog believed that a doctor liked that William liked that Olivia said that Emma admired that Ethan hoped that the girl confessed that a boy was given a hamburger beside the table by Victoria .", "output": "THINK ( STUDENT , NONE , NONE ) CCOMP RESPECT ( CHILD , NONE , NONE ) CCOMP BELIEVE ( FROG , NONE , NONE ) CCOMP LIKE ( DOCTOR , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP HOPE ( ETHAN , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP GIVE ( VICTORIA , BESIDE ( HAMBURGER , TABLE ) , BOY )"}
{"input": "Form one: The human liked that the wolf liked that the giraffe dreamed that the baby liked that Ava expected that the child hoped that a boy said that the girl proved that Stella hoped that a pencil floated .", "output": "LIKE ( HUMAN , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP DREAM ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP EXPECT ( AVA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP HOPE ( STELLA , NONE , NONE ) CCOMP FLOAT ( NONE , PENCIL , NONE )"}
{"input": "Form one: Emma liked that a girl respected that Asher said that a giraffe tolerated that Ava liked that James confessed that the bunny tolerated that a servant hoped that Olivia believed that the child wished that Oliver smiled .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP SAY ( ASHER , NONE , NONE ) CCOMP TOLERATE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP CONFESS ( JAMES , NONE , NONE ) CCOMP TOLERATE ( BUNNY , NONE , NONE ) CCOMP HOPE ( SERVANT , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP WISH ( CHILD , NONE , NONE ) CCOMP SMILE ( OLIVER , NONE , NONE )"}
{"input": "Form one: The girl liked that the buyer confessed that a boy liked that the lion hoped that a dog dreamed that Oliver liked that the giraffe liked that a cake was passed to Isabella .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( BUYER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP PASS ( NONE , CAKE , ISABELLA )"}
{"input": "Form one: Ava imagined that Jacob liked that a girl thought that the prisoner declared that Emma declared that a goose appreciated that Isaac liked that the princess liked that a baby noticed that a bear liked that Nathan liked that a poet noticed that the pen rolled .", "output": "IMAGINE ( AVA , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP DECLARE ( PRISONER , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( GOOSE , NONE , NONE ) CCOMP LIKE ( ISAAC , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP NOTICE ( POET , NONE , NONE ) CCOMP ROLL ( NONE , PEN , NONE )"}
{"input": "Form one: Madison proved that Theodore said that a girl liked that the cat was returned a cake beside the table .", "output": "PROVE ( MADISON , NONE , NONE ) CCOMP SAY ( THEODORE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP RETURN ( NONE , BESIDE ( CAKE , TABLE ) , CAT )"}
{"input": "Form one: A horse liked that Olivia liked that Julian said that the boy dreamed that Leah meant that Emma liked that a cow liked that Aiden thought that Samuel said that the queen appreciated that Amelia liked that a baby said that a girl was rented a melon in a room .", "output": "LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SAY ( JULIAN , NONE , NONE ) CCOMP DREAM ( BOY , NONE , NONE ) CCOMP MEAN ( LEAH , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP THINK ( AIDEN , NONE , NONE ) CCOMP SAY ( SAMUEL , NONE , NONE ) CCOMP APPRECIATE ( QUEEN , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP RENT ( NONE , IN ( MELON , ROOM ) , GIRL )"}
{"input": "Form one: The girl liked that Sophia dreamed that Jackson liked that the dog confessed that Isabella noticed that Emma liked that the princess noticed that the horse liked that Noah hoped that a cake changed .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP DREAM ( SOPHIA , NONE , NONE ) CCOMP LIKE ( JACKSON , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( PRINCESS , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP CHANGE ( NONE , CAKE , NONE )"}
{"input": "Form one: The boy believed that Benjamin supported that the girl liked that Lucas noticed that the cake slid .", "output": "BELIEVE ( BOY , NONE , NONE ) CCOMP SUPPORT ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( LUCAS , NONE , NONE ) CCOMP SLIDE ( NONE , CAKE , NONE )"}
{"input": "Form one: Ryan liked that the boy thought that Nora hoped that the deer hoped that Olivia noticed that Evelyn said that David said that the lion hoped that Emma said that a raisin was eaten by Anthony .", "output": "LIKE ( RYAN , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP HOPE ( NORA , NONE , NONE ) CCOMP HOPE ( DEER , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP SAY ( EVELYN , NONE , NONE ) CCOMP SAY ( DAVID , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP EAT ( ANTHONY , RAISIN , NONE )"}
{"input": "Form one: Olivia hoped that a cat believed that the duke liked that Oliver hoped that Emma thought that a pig liked that a kitty supported that the child declared that the dog slept .", "output": "HOPE ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP SUPPORT ( KITTY , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP SLEEP ( DOG , NONE , NONE )"}
{"input": "Form one: A student confessed that Olivia respected that a giraffe liked that a lamb liked that Mia liked that Emma noticed that a butterfly liked that Scarlett thought that Oliver noticed that the cat liked that the bear was sold the donut in the cabinet by a horse .", "output": "CONFESS ( STUDENT , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( LAMB , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP THINK ( SCARLETT , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SELL ( HORSE , IN ( DONUT , CABINET ) , BEAR )"}
{"input": "Form one: A boy noticed that the hen noticed that William noticed that Liam valued that Emma meant that Noah said that a cat noticed that a girl reddened .", "output": "NOTICE ( BOY , NONE , NONE ) CCOMP NOTICE ( HEN , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP REDDEN ( NONE , GIRL , NONE )"}
{"input": "Form one: David hoped that a coach liked that the president liked that Emma said that the frog liked that the boy respected that the girl confessed that Samuel believed that Liam said that a cake rolled .", "output": "HOPE ( DAVID , NONE , NONE ) CCOMP LIKE ( COACH , NONE , NONE ) CCOMP LIKE ( PRESIDENT , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP RESPECT ( BOY , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP BELIEVE ( SAMUEL , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: The girl liked that a boy noticed that a teacher declared that the cat imagined that a guard dreamed that Elizabeth liked that James believed that Emma froze the yogurt .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP DECLARE ( TEACHER , NONE , NONE ) CCOMP IMAGINE ( CAT , NONE , NONE ) CCOMP DREAM ( GUARD , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP BELIEVE ( JAMES , NONE , NONE ) CCOMP FREEZE ( EMMA , YOGURT , NONE )"}
{"input": "Form one: Wyatt liked that the mouse hoped that Olivia liked that Liam liked that Brooklyn thought that Ava valued that Emma dreamed that a boy hoped that a soldier wished that a duck said that a cat respected that the donut was handed to Elijah .", "output": "LIKE ( WYATT , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP THINK ( BROOKLYN , NONE , NONE ) CCOMP VALUE ( AVA , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP WISH ( SOLDIER , NONE , NONE ) CCOMP SAY ( DUCK , NONE , NONE ) CCOMP RESPECT ( CAT , NONE , NONE ) CCOMP HAND ( NONE , DONUT , ELIJAH )"}
{"input": "Form one: Stella declared that a cat confessed that Ava liked that the lion planned to investigate .", "output": "DECLARE ( STELLA , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP PLAN ( LION , NONE , NONE ) XCOMP INVESTIGATE ( LION , NONE , NONE )"}
{"input": "Form one: The kitty liked that the queen liked that Matthew liked that the fish thought that a girl liked that Elizabeth hoped that a beer was painted .", "output": "LIKE ( KITTY , NONE , NONE ) CCOMP LIKE ( QUEEN , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP THINK ( FISH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( ELIZABETH , NONE , NONE ) CCOMP PAINT ( NONE , BEER , NONE )"}
{"input": "Form one: A girl liked that Caleb confessed that a butterfly liked that Ava dreamed that the cat hoped that Noah liked that a boy imagined that the rose was sent to Evelyn by Emma .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( CALEB , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP DREAM ( AVA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP SEND ( EMMA , ROSE , EVELYN )"}
{"input": "Form one: A boy hoped that the girl valued that Emma hoped that the baby appreciated that a dog liked that a kitty liked that Benjamin believed that Isabella liked that William respected that the cat liked that a pizza was rolled .", "output": "HOPE ( BOY , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP BELIEVE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP RESPECT ( WILLIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , PIZZA , NONE )"}
{"input": "Form one: Emma proved that Christopher valued that Ava liked that a writer liked that a lawyer hoped that James liked that a kitty admired that the girl scoffed .", "output": "PROVE ( EMMA , NONE , NONE ) CCOMP VALUE ( CHRISTOPHER , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( WRITER , NONE , NONE ) CCOMP HOPE ( LAWYER , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP ADMIRE ( KITTY , NONE , NONE ) CCOMP SCOFF ( GIRL , NONE , NONE )"}
{"input": "Form one: Victoria liked that Lily admired that Hazel believed that the lawyer admired that the princess was lended the cake beside the table .", "output": "LIKE ( VICTORIA , NONE , NONE ) CCOMP ADMIRE ( LILY , NONE , NONE ) CCOMP BELIEVE ( HAZEL , NONE , NONE ) CCOMP ADMIRE ( LAWYER , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( CAKE , TABLE ) , PRINCESS )"}
{"input": "Form one: Liam appreciated that a girl imagined that a mouse noticed that Emma liked that the manager liked that Olivia liked that a cookie was rolled .", "output": "APPRECIATE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP NOTICE ( MOUSE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( MANAGER , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: Oliver hoped that Liam hoped that the child noticed that the customer liked that Grayson liked that a frog declared that the raisin was rolled .", "output": "HOPE ( OLIVER , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( GRAYSON , NONE , NONE ) CCOMP DECLARE ( FROG , NONE , NONE ) CCOMP ROLL ( NONE , RAISIN , NONE )"}
{"input": "Form one: A lion said that Charlotte liked that a dog liked that Isabella confessed that Bella meant that the baby liked that Anthony hoped that Emma liked that a soldier liked that the zebra liked that a girl thought that a boy hoped that Mila was promised a cake beside a table .", "output": "SAY ( LION , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP MEAN ( BELLA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( SOLDIER , NONE , NONE ) CCOMP LIKE ( ZEBRA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP PROMISE ( NONE , BESIDE ( CAKE , TABLE ) , MILA )"}
{"input": "Form one: Savannah liked that the cat liked that the dog noticed that the box was hunted .", "output": "LIKE ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP HUNT ( NONE , BOX , NONE )"}
{"input": "Form one: Lucas liked that a girl declared that Skylar meant that Liam liked that the boy confessed that William noticed that a teacher hoped that a raisin was rolled by Hannah .", "output": "LIKE ( LUCAS , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP MEAN ( SKYLAR , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP ROLL ( HANNAH , RAISIN , NONE )"}
{"input": "Form one: Emma confessed that Alexander proved that William said that a monkey said that the frog said that the girl liked that Elizabeth proved that a bear hoped that James wished that Benjamin liked that Addison appreciated that the student snapped .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP PROVE ( ALEXANDER , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP SAY ( FROG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( ELIZABETH , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP WISH ( JAMES , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP APPRECIATE ( ADDISON , NONE , NONE ) CCOMP SNAP ( NONE , STUDENT , NONE )"}
{"input": "Form one: The boy declared that a dealer respected that the bunny liked that the patient liked that Logan said that Liam liked that Emma hoped that Charlotte hoped that Emily appreciated that the researcher said that the dog liked that Olivia rolled .", "output": "DECLARE ( BOY , NONE , NONE ) CCOMP RESPECT ( DEALER , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP SAY ( LOGAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP APPRECIATE ( EMILY , NONE , NONE ) CCOMP SAY ( RESEARCHER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP ROLL ( NONE , OLIVIA , NONE )"}
{"input": "Form one: A lawyer hoped that Sofia liked that Noah admired that Isabella tolerated that Liam confessed that the boy respected that Mason wished that the cookie burned .", "output": "HOPE ( LAWYER , NONE , NONE ) CCOMP LIKE ( SOFIA , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP TOLERATE ( ISABELLA , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP RESPECT ( BOY , NONE , NONE ) CCOMP WISH ( MASON , NONE , NONE ) CCOMP BURN ( NONE , COOKIE , NONE )"}
{"input": "Form one: The girl said that a cat proved that Jacob hoped that Mia confessed that the child expected that Elijah was lended the cake on the table .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP HOPE ( JACOB , NONE , NONE ) CCOMP CONFESS ( MIA , NONE , NONE ) CCOMP EXPECT ( CHILD , NONE , NONE ) CCOMP LEND ( NONE , ON ( CAKE , TABLE ) , ELIJAH )"}
{"input": "Form one: James liked that the cat appreciated that a girl tolerated that the chicken liked that a monkey rolled .", "output": "LIKE ( JAMES , NONE , NONE ) CCOMP APPRECIATE ( CAT , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP ROLL ( NONE , MONKEY , NONE )"}
{"input": "Form one: Caleb declared that Noah liked that the king noticed that a girl thought that William liked that a kitty hoped that the baby said that the cat forwarded the cookie beside the bike to a boy .", "output": "DECLARE ( CALEB , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP NOTICE ( KING , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( KITTY , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP FORWARD ( CAT , BESIDE ( COOKIE , BIKE ) , BOY )"}
{"input": "Form one: Elijah liked that Matthew confessed that the dog liked that a princess liked that the customer liked that a baby noticed that the penguin believed that Emma admired that Elizabeth valued that the boy said that Sophia liked that Ava noticed that a cake was valued .", "output": "LIKE ( ELIJAH , NONE , NONE ) CCOMP CONFESS ( MATTHEW , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP BELIEVE ( PENGUIN , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP VALUE ( ELIZABETH , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP VALUE ( NONE , CAKE , NONE )"}
{"input": "Form one: William liked that a monster thought that Olivia declared that Henry noticed that a girl said that the horse hoped that the priest rolled .", "output": "LIKE ( WILLIAM , NONE , NONE ) CCOMP THINK ( MONSTER , NONE , NONE ) CCOMP DECLARE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( HENRY , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP HOPE ( HORSE , NONE , NONE ) CCOMP ROLL ( NONE , PRIEST , NONE )"}
{"input": "Form one: Aiden liked that Andrew liked that Henry noticed that Grace believed that Noah was loaned a box in the garden by Emma .", "output": "LIKE ( AIDEN , NONE , NONE ) CCOMP LIKE ( ANDREW , NONE , NONE ) CCOMP NOTICE ( HENRY , NONE , NONE ) CCOMP BELIEVE ( GRACE , NONE , NONE ) CCOMP LOAN ( EMMA , IN ( BOX , GARDEN ) , NOAH )"}
{"input": "Form one: Emma noticed that Olivia thought that William liked that the butterfly was given the pancake .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP GIVE ( NONE , PANCAKE , BUTTERFLY )"}
{"input": "Form one: The girl liked that Sophia liked that a teacher hoped that a baby hoped that a cat liked that a father liked that Liam noticed that the boy imagined that Emma liked that the monkey liked that Michael said that a donut was rolled .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP SAY ( MICHAEL , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: A girl proved that the boy dreamed that the spokesman proved that a cake was given to a politician by the dog .", "output": "PROVE ( GIRL , NONE , NONE ) CCOMP DREAM ( BOY , NONE , NONE ) CCOMP PROVE ( SPOKESMAN , NONE , NONE ) CCOMP GIVE ( DOG , CAKE , POLITICIAN )"}
{"input": "Form one: A girl liked that a lion confessed that Liam believed that Andrew liked that Benjamin confessed that Emma liked that Aubrey hoped that a moose heard a dog on a chair .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP LIKE ( ANDREW , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( AUBREY , NONE , NONE ) CCOMP HEAR ( MOOSE , ON ( DOG , CHAIR ) , NONE )"}
{"input": "Form one: A bee meant that Liam said that Emma liked that Abigail liked that a cat said that a girl liked that a box was lended to a zebra by the boy .", "output": "MEAN ( BEE , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LEND ( BOY , BOX , ZEBRA )"}
{"input": "Form one: The boy valued that a patient noticed that William said that the girl hoped that Emily confessed that Ella admired that the cake doubled .", "output": "VALUE ( BOY , NONE , NONE ) CCOMP NOTICE ( PATIENT , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP CONFESS ( EMILY , NONE , NONE ) CCOMP ADMIRE ( ELLA , NONE , NONE ) CCOMP DOUBLE ( NONE , CAKE , NONE )"}
{"input": "Form one: Henry said that a cat believed that Lucas noticed that the baby respected that a boy liked that Emma hoped that a child liked that Leah admired that a girl was fed a jar in the house by Noah .", "output": "SAY ( HENRY , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP NOTICE ( LUCAS , NONE , NONE ) CCOMP RESPECT ( BABY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP ADMIRE ( LEAH , NONE , NONE ) CCOMP FEED ( NOAH , IN ( JAR , HOUSE ) , GIRL )"}
{"input": "Form one: Emma appreciated that the monster liked that a teacher hoped that Ava hoped that Jacob supported that a boy hoped that the cat hoped that a customer believed that Liam supported that Charlotte said that a baby confessed that the cookie was known by Olivia .", "output": "APPRECIATE ( EMMA , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP SUPPORT ( JACOB , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP BELIEVE ( CUSTOMER , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP SAY ( CHARLOTTE , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP KNOW ( OLIVIA , COOKIE , NONE )"}
{"input": "Form one: Sofia hoped that the cat expected that a child imagined that Emma liked that a monkey was given the cake beside a book .", "output": "HOPE ( SOFIA , NONE , NONE ) CCOMP EXPECT ( CAT , NONE , NONE ) CCOMP IMAGINE ( CHILD , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( CAKE , BOOK ) , MONKEY )"}
{"input": "Form one: A politician noticed that Elijah hoped that Lillian said that a girl meant that a chief believed that a strawberry slid .", "output": "NOTICE ( POLITICIAN , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP SAY ( LILLIAN , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP BELIEVE ( CHIEF , NONE , NONE ) CCOMP SLIDE ( NONE , STRAWBERRY , NONE )"}
{"input": "Form one: Noah liked that Olivia said that the cat hoped that Liam rolled .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , LIAM , NONE )"}
{"input": "Form one: Noah liked that a chicken noticed that Emma liked that James hoped that a tool shortened .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP SHORTEN ( NONE , TOOL , NONE )"}
{"input": "Form one: Liam hoped that the teacher proved that a girl proved that Emma valued that Isaac hoped that Abigail liked that James liked that Logan dreamed that a fly liked that a boy liked that Leo admired that the cake was given to a penguin by a hero .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP PROVE ( TEACHER , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP HOPE ( ISAAC , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP DREAM ( LOGAN , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ADMIRE ( LEO , NONE , NONE ) CCOMP GIVE ( HERO , CAKE , PENGUIN )"}
{"input": "Form one: A bird meant that the girl wished that the boy liked that Ava imagined that Isabella liked that Lucas wished that the baby hoped that Emma confessed that Olivia respected that a crocodile appreciated that Noah meant that a cake was painted .", "output": "MEAN ( BIRD , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP IMAGINE ( AVA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP WISH ( LUCAS , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( CROCODILE , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP PAINT ( NONE , CAKE , NONE )"}
{"input": "Form one: Liam confessed that Emma noticed that William hoped that Leah liked that Mia liked that the cat wished that a moose expected that the girl said that Olivia respected that the drink was painted .", "output": "CONFESS ( LIAM , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( LEAH , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP WISH ( CAT , NONE , NONE ) CCOMP EXPECT ( MOOSE , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP PAINT ( NONE , DRINK , NONE )"}
{"input": "Form one: A boy respected that James wished that William supported that the girl hoped that a mother supported that Aiden liked that Mason admired that Emma liked that Carter noticed that a dog hoped that Noah rolled .", "output": "RESPECT ( BOY , NONE , NONE ) CCOMP WISH ( JAMES , NONE , NONE ) CCOMP SUPPORT ( WILLIAM , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( MOTHER , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP ADMIRE ( MASON , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( CARTER , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP ROLL ( NONE , NOAH , NONE )"}
{"input": "Form one: A zebra thought that the girl hoped that Mia said that Olivia liked that a boy liked that the guest liked that a chief confessed that Oliver liked that Emma believed that a wolf liked that Amelia imagined that Noah respected that a cookie shortened .", "output": "THINK ( ZEBRA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SAY ( MIA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( GUEST , NONE , NONE ) CCOMP CONFESS ( CHIEF , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP IMAGINE ( AMELIA , NONE , NONE ) CCOMP RESPECT ( NOAH , NONE , NONE ) CCOMP SHORTEN ( NONE , COOKIE , NONE )"}
{"input": "Form one: Emma dreamed that a lawyer hoped that the baby liked that the girl was passed a cake by the patient .", "output": "DREAM ( EMMA , NONE , NONE ) CCOMP HOPE ( LAWYER , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP PASS ( PATIENT , CAKE , GIRL )"}
{"input": "Form one: A girl meant that James liked that a monster liked that the fly liked that the boy was given the cookie on the stool .", "output": "MEAN ( GIRL , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP GIVE ( NONE , ON ( COOKIE , STOOL ) , BOY )"}
{"input": "Form one: Oliver expected that Emma imagined that a hero declared that Ava liked that Jack liked that a girl expected that a boy declared that the friend supported that Nora expected that the cake was seen .", "output": "EXPECT ( OLIVER , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP DECLARE ( HERO , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( JACK , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP SUPPORT ( FRIEND , NONE , NONE ) CCOMP EXPECT ( NORA , NONE , NONE ) CCOMP SEE ( NONE , CAKE , NONE )"}
{"input": "Form one: Liam liked that Isabella declared that a girl liked that the boy supported that Emma liked that a professor valued that the chicken declared that the dog meant that the cat noticed that Hannah valued that the cake snapped .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP VALUE ( PROFESSOR , NONE , NONE ) CCOMP DECLARE ( CHICKEN , NONE , NONE ) CCOMP MEAN ( DOG , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP VALUE ( HANNAH , NONE , NONE ) CCOMP SNAP ( NONE , CAKE , NONE )"}
{"input": "Form one: A sailor wished that a fish appreciated that Zoe valued that Liam proved that Noah liked that James slid .", "output": "WISH ( SAILOR , NONE , NONE ) CCOMP APPRECIATE ( FISH , NONE , NONE ) CCOMP VALUE ( ZOE , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP SLIDE ( NONE , JAMES , NONE )"}
{"input": "Form one: Emma liked that a cat liked that a boy expected that the monster was lended a cake .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP LEND ( NONE , CAKE , MONSTER )"}
{"input": "Form one: A pig said that the penguin thought that Layla noticed that Olivia valued that the baby enlarged .", "output": "SAY ( PIG , NONE , NONE ) CCOMP THINK ( PENGUIN , NONE , NONE ) CCOMP NOTICE ( LAYLA , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP ENLARGE ( NONE , BABY , NONE )"}
{"input": "Form one: A director admired that a girl liked that Nathan admired that the bunny wished that a dog liked that John liked that Mason liked that the boy declared that a deer liked the melon beside a bed .", "output": "ADMIRE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( NATHAN , NONE , NONE ) CCOMP WISH ( BUNNY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( JOHN , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP LIKE ( DEER , BESIDE ( MELON , BED ) , NONE )"}
{"input": "Form one: A fish liked that the president supported that Oliver said that a girl liked that Elijah confessed that Aubrey confessed that Olivia hoped that Michael liked that the penguin was lended the toy by Mia .", "output": "LIKE ( FISH , NONE , NONE ) CCOMP SUPPORT ( PRESIDENT , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( ELIJAH , NONE , NONE ) CCOMP CONFESS ( AUBREY , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP LEND ( MIA , TOY , PENGUIN )"}
{"input": "Form one: A cat thought that Lucas liked that Olivia liked that the giraffe liked that Aiden liked that the mouse liked that Benjamin wished that Liam wished that a hero imagined that Matthew hoped that Emma hated to cook .", "output": "THINK ( CAT , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP WISH ( BENJAMIN , NONE , NONE ) CCOMP WISH ( LIAM , NONE , NONE ) CCOMP IMAGINE ( HERO , NONE , NONE ) CCOMP HOPE ( MATTHEW , NONE , NONE ) CCOMP HATE ( EMMA , NONE , NONE ) XCOMP COOK ( EMMA , NONE , NONE )"}
{"input": "Form one: Aiden liked that Scarlett appreciated that Ava liked that a cat thought that Zoey liked that Noah said that Elizabeth hoped that a spokesman liked that Emma hoped that Penelope liked that the creature tolerated that the boy confessed that Olivia was lended the cake beside a glass beside the rock by Liam .", "output": "LIKE ( AIDEN , NONE , NONE ) CCOMP APPRECIATE ( SCARLETT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP LIKE ( ZOEY , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP HOPE ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP TOLERATE ( CREATURE , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP LEND ( LIAM , BESIDE ( CAKE , BESIDE ( GLASS , ROCK ) ) , OLIVIA )"}
{"input": "Form one: Violet expected that Evelyn expected that Joseph noticed that the boy confessed that the duck hoped that a raisin was sent to the horse .", "output": "EXPECT ( VIOLET , NONE , NONE ) CCOMP EXPECT ( EVELYN , NONE , NONE ) CCOMP NOTICE ( JOSEPH , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP HOPE ( DUCK , NONE , NONE ) CCOMP SEND ( NONE , RAISIN , HORSE )"}
{"input": "Form one: Noah imagined that a baby appreciated that the zebra hoped that the boy supported that the cat declared that Mila said that Emma said that the president hoped that the rose was known by Benjamin .", "output": "IMAGINE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP HOPE ( ZEBRA , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP DECLARE ( CAT , NONE , NONE ) CCOMP SAY ( MILA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP HOPE ( PRESIDENT , NONE , NONE ) CCOMP KNOW ( BENJAMIN , ROSE , NONE )"}
{"input": "Form one: A cat liked that Natalie proved that the boy said that the girl expected that Victoria liked that a father proved that the dog admired that the chicken liked that Harper liked that a president hoped that Ella shortened .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP PROVE ( NATALIE , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP PROVE ( FATHER , NONE , NONE ) CCOMP ADMIRE ( DOG , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP HOPE ( PRESIDENT , NONE , NONE ) CCOMP SHORTEN ( NONE , ELLA , NONE )"}
{"input": "Form one: John imagined that a girl confessed that Isabella admired that the princess meant that the frog hoped that Emma talked .", "output": "IMAGINE ( JOHN , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP ADMIRE ( ISABELLA , NONE , NONE ) CCOMP MEAN ( PRINCESS , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP TALK ( EMMA , NONE , NONE )"}
{"input": "Form one: Grayson liked that the teacher hoped that Daniel declared that Noah liked that Emma declared that the girl respected that the student hoped that the boy preferred to walk .", "output": "LIKE ( GRAYSON , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP DECLARE ( DANIEL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP HOPE ( STUDENT , NONE , NONE ) CCOMP PREFER ( BOY , NONE , NONE ) XCOMP WALK ( BOY , NONE , NONE )"}
{"input": "Form one: Owen believed that Alexander supported that Theodore liked that a chicken liked that a girl liked that Emma declared that Hannah liked that Matthew appreciated that the cake was lended to William by a lawyer .", "output": "BELIEVE ( OWEN , NONE , NONE ) CCOMP SUPPORT ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP APPRECIATE ( MATTHEW , NONE , NONE ) CCOMP LEND ( LAWYER , CAKE , WILLIAM )"}
{"input": "Form one: Harper proved that a prisoner meant that a spokesman declared that Charlotte meant that the baby proved that Olivia thought that a boy said that a cat liked that Emma confessed that a servant liked that a bear hoped that a farmer hoped that the girl juggled a horse beside a road .", "output": "PROVE ( HARPER , NONE , NONE ) CCOMP MEAN ( PRISONER , NONE , NONE ) CCOMP DECLARE ( SPOKESMAN , NONE , NONE ) CCOMP MEAN ( CHARLOTTE , NONE , NONE ) CCOMP PROVE ( BABY , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( SERVANT , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP HOPE ( FARMER , NONE , NONE ) CCOMP JUGGLE ( GIRL , BESIDE ( HORSE , ROAD ) , NONE )"}
{"input": "Form one: Benjamin hoped that Sophia noticed that a bird hoped that Liam dreamed that a cat liked that a chicken noticed that the boy liked that Charlotte appreciated that the muffin shortened .", "output": "HOPE ( BENJAMIN , NONE , NONE ) CCOMP NOTICE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( BIRD , NONE , NONE ) CCOMP DREAM ( LIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP APPRECIATE ( CHARLOTTE , NONE , NONE ) CCOMP SHORTEN ( NONE , MUFFIN , NONE )"}
{"input": "Form one: Dylan confessed that the student hoped that the kid declared that the girl slid the cow in a house .", "output": "CONFESS ( DYLAN , NONE , NONE ) CCOMP HOPE ( STUDENT , NONE , NONE ) CCOMP DECLARE ( KID , NONE , NONE ) CCOMP SLIDE ( GIRL , IN ( COW , HOUSE ) , NONE )"}
{"input": "Form one: The boy tolerated that the monkey believed that Benjamin respected that a girl proved that Ethan liked that Olivia valued that the student liked that the horse was given a cookie by the creature .", "output": "TOLERATE ( BOY , NONE , NONE ) CCOMP BELIEVE ( MONKEY , NONE , NONE ) CCOMP RESPECT ( BENJAMIN , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( ETHAN , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP GIVE ( CREATURE , COOKIE , HORSE )"}
{"input": "Form one: A girl liked that Noah liked that Liam wished that a cake floated .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP WISH ( LIAM , NONE , NONE ) CCOMP FLOAT ( NONE , CAKE , NONE )"}
{"input": "Form one: The penguin hoped that the girl declared that Liam liked that a resident was given a cake beside the table in a house in the cabinet .", "output": "HOPE ( PENGUIN , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( CAKE , IN ( TABLE , IN ( HOUSE , CABINET ) ) ) , RESIDENT )"}
{"input": "Form one: A chicken meant that the child liked that Lucas said that the squirrel liked that Emma liked that Avery believed that the dog hoped that James wished that a boy liked that the girl liked that Isabella liked that the cookie was rolled .", "output": "MEAN ( CHICKEN , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP SAY ( LUCAS , NONE , NONE ) CCOMP LIKE ( SQUIRREL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( AVERY , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP WISH ( JAMES , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: James hoped that the girl valued that the bird wished that the dog respected that a cat noticed that a penguin burned .", "output": "HOPE ( JAMES , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP WISH ( BIRD , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP BURN ( NONE , PENGUIN , NONE )"}
{"input": "Form one: The fly confessed that the cat admired that the customer wished that a priest believed that the baby liked that the bottle was given to a horse by the father .", "output": "CONFESS ( FLY , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP WISH ( CUSTOMER , NONE , NONE ) CCOMP BELIEVE ( PRIEST , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP GIVE ( FATHER , BOTTLE , HORSE )"}
{"input": "Form one: A squirrel wished that a cat liked that a horse believed that a girl tolerated that Noah dreamed that Emma said that the monkey slept .", "output": "WISH ( SQUIRREL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( HORSE , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP DREAM ( NOAH , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP SLEEP ( MONKEY , NONE , NONE )"}
{"input": "Form one: Logan confessed that Emma liked that Ava hoped that John liked the towel beside a poster beside the wolf beside a table on the stage .", "output": "CONFESS ( LOGAN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LIKE ( JOHN , BESIDE ( TOWEL , BESIDE ( POSTER , BESIDE ( WOLF , ON ( TABLE , STAGE ) ) ) ) , NONE )"}
{"input": "Form one: The puppy believed that a tiger confessed that Noah liked that William liked that a child liked that the bear noticed that the lion liked that a girl was lended the cake .", "output": "BELIEVE ( PUPPY , NONE , NONE ) CCOMP CONFESS ( TIGER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP NOTICE ( BEAR , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LEND ( NONE , CAKE , GIRL )"}
{"input": "Form one: Emma supported that Liam liked that Jackson proved that the horse confessed that the boy valued that Sophia believed that Henry liked that Isabella admired that James sketched .", "output": "SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP PROVE ( JACKSON , NONE , NONE ) CCOMP CONFESS ( HORSE , NONE , NONE ) CCOMP VALUE ( BOY , NONE , NONE ) CCOMP BELIEVE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( HENRY , NONE , NONE ) CCOMP ADMIRE ( ISABELLA , NONE , NONE ) CCOMP SKETCH ( JAMES , NONE , NONE )"}
{"input": "Form one: Harper liked that a dog dreamed that Olivia thought that a baby meant that the girl liked that Charlotte liked that a cat believed that the horse liked that Emma was given a cookie by Benjamin .", "output": "LIKE ( HARPER , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP MEAN ( BABY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP GIVE ( BENJAMIN , COOKIE , EMMA )"}
{"input": "Form one: The girl tolerated that Alexander expected that Charlotte dreamed that the bee liked that a bear hoped that Liam said that the frog thought that a child said that Isabella proved that Elijah hoped that Ethan thought that a visitor liked that Olivia shortened .", "output": "TOLERATE ( GIRL , NONE , NONE ) CCOMP EXPECT ( ALEXANDER , NONE , NONE ) CCOMP DREAM ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP PROVE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP THINK ( ETHAN , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP SHORTEN ( NONE , OLIVIA , NONE )"}
{"input": "Form one: The horse noticed that Lucas believed that Emily thought that a girl supported that the director liked that a cat liked that Julian liked that Noah liked that the buyer hoped that Olivia expected that the guest proved that Ella liked that the lion doubled .", "output": "NOTICE ( HORSE , NONE , NONE ) CCOMP BELIEVE ( LUCAS , NONE , NONE ) CCOMP THINK ( EMILY , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP LIKE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( JULIAN , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP HOPE ( BUYER , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP PROVE ( GUEST , NONE , NONE ) CCOMP LIKE ( ELLA , NONE , NONE ) CCOMP DOUBLE ( NONE , LION , NONE )"}
{"input": "Form one: Isabella hoped that a child noticed that Noah said that a professor imagined that Amelia liked that Ava liked that a gumball was given to Emma .", "output": "HOPE ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP IMAGINE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP GIVE ( NONE , GUMBALL , EMMA )"}
{"input": "Form one: Olivia hoped that a girl liked that William said that a child believed that a lawyer hoped that Oliver liked that Charlotte hoped that Noah tolerated that David tolerated that Emma believed that a cake was rolled by the buyer .", "output": "HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP HOPE ( LAWYER , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP TOLERATE ( DAVID , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP ROLL ( BUYER , CAKE , NONE )"}
{"input": "Form one: The bird admired that the cat noticed that a baby said that Emma said that Liam valued that a cake was examined .", "output": "ADMIRE ( BIRD , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP EXAMINE ( NONE , CAKE , NONE )"}
{"input": "Form one: Ella believed that the student liked that a bunny believed that Lillian liked that Hannah liked that the customer liked that Emma liked that a giraffe dreamed that Aubrey liked that the boy said that Liam liked that Daniel noticed that a scarf was found .", "output": "BELIEVE ( ELLA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP BELIEVE ( BUNNY , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DREAM ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( AUBREY , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( DANIEL , NONE , NONE ) CCOMP FIND ( NONE , SCARF , NONE )"}
{"input": "Form one: Emily hoped that Ava respected that Ryan valued that a dog liked that the baby declared that the boy appreciated that the child noticed that the girl inflated the donut .", "output": "HOPE ( EMILY , NONE , NONE ) CCOMP RESPECT ( AVA , NONE , NONE ) CCOMP VALUE ( RYAN , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP DECLARE ( BABY , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP INFLATE ( GIRL , DONUT , NONE )"}
{"input": "Form one: The boy thought that William believed that Zoe liked that Ava was promised the donut .", "output": "THINK ( BOY , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( ZOE , NONE , NONE ) CCOMP PROMISE ( NONE , DONUT , AVA )"}
{"input": "Form one: Emma liked that Liam liked that the baby liked that a girl believed that the boy liked that Ellie said that a child hoped that a spokesman admired that Ava said that Logan confessed that the dog declared that Avery hoped that Grayson ate .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( ELLIE , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP ADMIRE ( SPOKESMAN , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP CONFESS ( LOGAN , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP HOPE ( AVERY , NONE , NONE ) CCOMP EAT ( GRAYSON , NONE , NONE )"}
{"input": "Form one: The director noticed that the girl tolerated that a student valued that a cat hoped that a fly liked that Sebastian declared that Theodore appreciated that the teacher liked that Lucas liked that a baby liked that Grace liked that the cake rolled .", "output": "NOTICE ( DIRECTOR , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP VALUE ( STUDENT , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP DECLARE ( SEBASTIAN , NONE , NONE ) CCOMP APPRECIATE ( THEODORE , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( GRACE , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: The bunny admired that Michael wished that a girl meant that James noticed that Emma hoped that the boy noticed that Charlotte hoped that the dog proved that a child liked that the hen liked that the book crumpled .", "output": "ADMIRE ( BUNNY , NONE , NONE ) CCOMP WISH ( MICHAEL , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( HEN , NONE , NONE ) CCOMP CRUMPLE ( NONE , BOOK , NONE )"}
{"input": "Form one: Liam believed that the cat noticed that Luna believed that a spokesman wished that Emma confessed that the chicken admired that the boy liked that Isabella hoped that a baby liked that the child declared that a cake rolled .", "output": "BELIEVE ( LIAM , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP BELIEVE ( LUNA , NONE , NONE ) CCOMP WISH ( SPOKESMAN , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP ADMIRE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Joshua liked that the cat said that William proved that the chief hoped that a girl confessed that Olivia thought that Harper liked that the cake was drawn by a horse .", "output": "LIKE ( JOSHUA , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP PROVE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( CHIEF , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP DRAW ( HORSE , CAKE , NONE )"}
{"input": "Form one: A pupil tolerated that a lion thought that a child dreamed that the baby liked that a girl confessed that Dylan declared that the chicken hoped that the soldier declared that the boy confessed that Nora was posted the drink by Liam .", "output": "TOLERATE ( PUPIL , NONE , NONE ) CCOMP THINK ( LION , NONE , NONE ) CCOMP DREAM ( CHILD , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP DECLARE ( DYLAN , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP DECLARE ( SOLDIER , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP POST ( LIAM , DRINK , NORA )"}
{"input": "Form one: A servant believed that the tenant said that Savannah appreciated that Emma said that a boy hoped that the girl liked that Liam said that Ethan enjoyed to walk .", "output": "BELIEVE ( SERVANT , NONE , NONE ) CCOMP SAY ( TENANT , NONE , NONE ) CCOMP APPRECIATE ( SAVANNAH , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP ENJOY ( ETHAN , NONE , NONE ) XCOMP WALK ( ETHAN , NONE , NONE )"}
{"input": "Form one: Olivia admired that a girl liked that Ava said that a bee admired that the citizen noticed that William noticed that Noah hoped that Liam confessed that Emma hoped that Lucas appreciated that the tool froze .", "output": "ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP ADMIRE ( BEE , NONE , NONE ) CCOMP NOTICE ( CITIZEN , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( LUCAS , NONE , NONE ) CCOMP FREEZE ( NONE , TOOL , NONE )"}
{"input": "Form one: Liam liked that Emma believed that the lion liked that Noah hoped that Abigail hoped that Olivia liked that the sailor valued that the mouse said that the fly believed that the girl liked that Grayson admired that the cake rolled .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP HOPE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP VALUE ( SAILOR , NONE , NONE ) CCOMP SAY ( MOUSE , NONE , NONE ) CCOMP BELIEVE ( FLY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( GRAYSON , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Thomas declared that Amelia noticed that a girl believed that the puppy liked that Emma wished that a guard proved that Ava liked that a sweetcorn floated .", "output": "DECLARE ( THOMAS , NONE , NONE ) CCOMP NOTICE ( AMELIA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP PROVE ( GUARD , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP FLOAT ( NONE , SWEETCORN , NONE )"}
{"input": "Form one: Mia expected that a boy imagined that the cat said that the deer liked that Chloe liked that a dog valued that Liam noticed that a tourist believed that Emma hoped that the drink changed .", "output": "EXPECT ( MIA , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP LIKE ( CHLOE , NONE , NONE ) CCOMP VALUE ( DOG , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( TOURIST , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP CHANGE ( NONE , DRINK , NONE )"}
{"input": "Form one: The bee proved that the dog said that Liam said that a girl said that the frog said that Michael drew .", "output": "PROVE ( BEE , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( FROG , NONE , NONE ) CCOMP DRAW ( MICHAEL , NONE , NONE )"}
{"input": "Form one: Elijah hoped that the boy supported that the monkey declared that Olivia liked that Emma said that Jacob liked that the tourist noticed that a chicken liked that the poet dreamed that Chloe liked that a box froze .", "output": "HOPE ( ELIJAH , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP DECLARE ( MONKEY , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP NOTICE ( TOURIST , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP DREAM ( POET , NONE , NONE ) CCOMP LIKE ( CHLOE , NONE , NONE ) CCOMP FREEZE ( NONE , BOX , NONE )"}
{"input": "Form one: The girl liked that the boy confessed that Lucas liked that a dog collapsed a cookie .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP COLLAPSE ( DOG , COOKIE , NONE )"}
{"input": "Form one: Olivia liked that a boy liked that Jaxon said that the bear noticed that Victoria liked that a girl noticed that the baby imagined that Benjamin liked that the producer hoped that Liam burned the student .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( JAXON , NONE , NONE ) CCOMP NOTICE ( BEAR , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( BABY , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( PRODUCER , NONE , NONE ) CCOMP BURN ( LIAM , STUDENT , NONE )"}
{"input": "Form one: Emma hoped that Caleb confessed that the girl noticed that the student liked that a mouse liked that a dog hoped that Noah thought that Liam liked that a child said that a chicken declared that a teacher declared that the cake was liked .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP CONFESS ( CALEB , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP THINK ( NOAH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP DECLARE ( CHICKEN , NONE , NONE ) CCOMP DECLARE ( TEACHER , NONE , NONE ) CCOMP LIKE ( NONE , CAKE , NONE )"}
{"input": "Form one: The judge liked that Emma declared that a patient said that Isabella believed that Liam hoped that Olivia liked that the child liked that a girl hoped that Oliver liked that the king was given a cake .", "output": "LIKE ( JUDGE , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP SAY ( PATIENT , NONE , NONE ) CCOMP BELIEVE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , KING )"}
{"input": "Form one: Isabella liked that a father liked that Liam thought that a boy liked that Hannah liked that Isaac wished that Michael hoped that a girl said that the monkey dreamed that a patient wished that Olivia liked that a giraffe was given the cake in the house .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP WISH ( ISAAC , NONE , NONE ) CCOMP HOPE ( MICHAEL , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP DREAM ( MONKEY , NONE , NONE ) CCOMP WISH ( PATIENT , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP GIVE ( NONE , IN ( CAKE , HOUSE ) , GIRAFFE )"}
{"input": "Form one: A girl liked that Aurora said that Liam liked that the strawberry was lended to Emma .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( AURORA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LEND ( NONE , STRAWBERRY , EMMA )"}
{"input": "Form one: Liam hoped that the girl liked that Isabella wished that Elijah supported that a sailor hoped that the frog helped Emma .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP WISH ( ISABELLA , NONE , NONE ) CCOMP SUPPORT ( ELIJAH , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP HELP ( FROG , EMMA , NONE )"}
{"input": "Form one: A cat expected that the boy hoped that Stella hoped that a cake was lended to Emily .", "output": "EXPECT ( CAT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( STELLA , NONE , NONE ) CCOMP LEND ( NONE , CAKE , EMILY )"}
{"input": "Form one: The girl liked that Noah hoped that William noticed that Ethan noticed that Charlotte was forwarded a pretzel .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( ETHAN , NONE , NONE ) CCOMP FORWARD ( NONE , PRETZEL , CHARLOTTE )"}
{"input": "Form one: Hannah proved that the passenger liked that the lion liked that Emma liked that Lucas noticed that a squirrel was slipped the toothbrush beside the stage .", "output": "PROVE ( HANNAH , NONE , NONE ) CCOMP LIKE ( PASSENGER , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LUCAS , NONE , NONE ) CCOMP SLIP ( NONE , BESIDE ( TOOTHBRUSH , STAGE ) , SQUIRREL )"}
{"input": "Form one: Mila liked that Emma liked that Noah tolerated that Ava liked that a manager liked that the girl hoped that Sebastian liked that Olivia liked that Charlotte proved that Hazel was fed a beer on a rock by David .", "output": "LIKE ( MILA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( MANAGER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP PROVE ( CHARLOTTE , NONE , NONE ) CCOMP FEED ( DAVID , ON ( BEER , ROCK ) , HAZEL )"}
{"input": "Form one: The bird said that Emma liked that the creature hoped that the cat liked that the girl liked that Olivia noticed that the cake froze .", "output": "SAY ( BIRD , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( CREATURE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: A dog noticed that Liam liked that the monkey said that Emma thought that Ethan respected that William hoped that a girl noticed that Noah liked that a sheep thought that the kid hoped that Nora said that Harper worshipped the strawberry .", "output": "NOTICE ( DOG , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP RESPECT ( ETHAN , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP THINK ( SHEEP , NONE , NONE ) CCOMP HOPE ( KID , NONE , NONE ) CCOMP SAY ( NORA , NONE , NONE ) CCOMP WORSHIP ( HARPER , STRAWBERRY , NONE )"}
{"input": "Form one: The mouse said that the king proved that a cat said that a girl thought that Joshua respected that Liam liked that Henry confessed that the dog respected that Oliver liked that William respected that Sophia appreciated that a sandwich was frozen by Emma .", "output": "SAY ( MOUSE , NONE , NONE ) CCOMP PROVE ( KING , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP RESPECT ( JOSHUA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( HENRY , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP RESPECT ( WILLIAM , NONE , NONE ) CCOMP APPRECIATE ( SOPHIA , NONE , NONE ) CCOMP FREEZE ( EMMA , SANDWICH , NONE )"}
{"input": "Form one: The guard liked that a dog liked that a driver proved that Emma liked that Chloe noticed that Mia said that a girl hoped that a cat reddened .", "output": "LIKE ( GUARD , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP PROVE ( DRIVER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( CHLOE , NONE , NONE ) CCOMP SAY ( MIA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP REDDEN ( NONE , CAT , NONE )"}
{"input": "Form one: A girl liked that a dog meant that the child liked that a monkey dreamed that a baby respected that Oliver tolerated that the lion thought that the customer meant that Emma hoped that the melon was worshipped .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP MEAN ( DOG , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP DREAM ( MONKEY , NONE , NONE ) CCOMP RESPECT ( BABY , NONE , NONE ) CCOMP TOLERATE ( OLIVER , NONE , NONE ) CCOMP THINK ( LION , NONE , NONE ) CCOMP MEAN ( CUSTOMER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP WORSHIP ( NONE , MELON , NONE )"}
{"input": "Form one: Savannah hoped that the frog proved that Logan hoped that a dog decomposed .", "output": "HOPE ( SAVANNAH , NONE , NONE ) CCOMP PROVE ( FROG , NONE , NONE ) CCOMP HOPE ( LOGAN , NONE , NONE ) CCOMP DECOMPOSE ( NONE , DOG , NONE )"}
{"input": "Form one: The baby declared that Liam liked that a chicken believed that Layla respected that the frog thought that the game was reddened .", "output": "DECLARE ( BABY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( CHICKEN , NONE , NONE ) CCOMP RESPECT ( LAYLA , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP REDDEN ( NONE , GAME , NONE )"}
{"input": "Form one: Emma liked that a butterfly wished that Noah proved that a girl grew .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP WISH ( BUTTERFLY , NONE , NONE ) CCOMP PROVE ( NOAH , NONE , NONE ) CCOMP GROW ( NONE , GIRL , NONE )"}
{"input": "Form one: Emma noticed that Lily liked that Liam valued that the girl respected that the boy liked that a box was liked .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( LILY , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( NONE , BOX , NONE )"}
{"input": "Form one: The teacher said that Eleanor said that Liam supported that Elijah declared that a baby liked that the crocodile liked that a pupil meant that the professor liked that the sheep hoped that a girl valued that the human dreamed that Emma helped the bird on a stool beside the road .", "output": "SAY ( TEACHER , NONE , NONE ) CCOMP SAY ( ELEANOR , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP DECLARE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( CROCODILE , NONE , NONE ) CCOMP MEAN ( PUPIL , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP HOPE ( SHEEP , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP DREAM ( HUMAN , NONE , NONE ) CCOMP HELP ( EMMA , ON ( BIRD , BESIDE ( STOOL , ROAD ) ) , NONE )"}
{"input": "Form one: Olivia declared that the frog thought that a cat liked that Theodore liked that the donkey valued that a teacher liked that Benjamin proved that a pony tolerated that Oliver liked that a cookie was served to the girl by a puppy .", "output": "DECLARE ( OLIVIA , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP VALUE ( DONKEY , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP PROVE ( BENJAMIN , NONE , NONE ) CCOMP TOLERATE ( PONY , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP SERVE ( PUPPY , COOKIE , GIRL )"}
{"input": "Form one: Olivia thought that a lawyer dreamed that Oliver declared that Liam said that the monkey hoped that the producer hoped that a cat expected that Jaxon wished that the girl hoped that a giraffe hoped that Victoria believed that the boy liked that Emma was offered a chemical in a car .", "output": "THINK ( OLIVIA , NONE , NONE ) CCOMP DREAM ( LAWYER , NONE , NONE ) CCOMP DECLARE ( OLIVER , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP HOPE ( PRODUCER , NONE , NONE ) CCOMP EXPECT ( CAT , NONE , NONE ) CCOMP WISH ( JAXON , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP BELIEVE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP OFFER ( NONE , IN ( CHEMICAL , CAR ) , EMMA )"}
{"input": "Form one: Olivia meant that Ava appreciated that a boy liked that Liam liked that the bird believed that Alexander liked that a politician hoped that a monster tolerated that the child hoped that Mila liked that the deer respected that Ryan admired that the strawberry was seen by Emma .", "output": "MEAN ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( AVA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( BIRD , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP HOPE ( POLITICIAN , NONE , NONE ) CCOMP TOLERATE ( MONSTER , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP RESPECT ( DEER , NONE , NONE ) CCOMP ADMIRE ( RYAN , NONE , NONE ) CCOMP SEE ( EMMA , STRAWBERRY , NONE )"}
{"input": "Form one: Emma respected that the girl liked that the judge believed that the cat believed that William hoped that Noah dreamed that Liam hoped that the baby noticed that Theodore was given the cake .", "output": "RESPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( JUDGE , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP DREAM ( NOAH , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , THEODORE )"}
{"input": "Form one: The sailor said that a boy respected that a dog confessed that Olivia confessed that Jayden dreamed that Liam declared that Emma hoped that the chicken noticed that a watch was disintegrated .", "output": "SAY ( SAILOR , NONE , NONE ) CCOMP RESPECT ( BOY , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP DREAM ( JAYDEN , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP DISINTEGRATE ( NONE , WATCH , NONE )"}
{"input": "Form one: Mia said that a zebra liked that Jackson declared that Oliver liked that the mouse tolerated that a customer liked that a horse liked that Liam believed that Abigail liked that Isabella liked that a girl meant that Emma ate .", "output": "SAY ( MIA , NONE , NONE ) CCOMP LIKE ( ZEBRA , NONE , NONE ) CCOMP DECLARE ( JACKSON , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP TOLERATE ( MOUSE , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP EAT ( EMMA , NONE , NONE )"}
{"input": "Form one: Liam liked that a hero noticed that a driver wished that Emma liked the cookie .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( HERO , NONE , NONE ) CCOMP WISH ( DRIVER , NONE , NONE ) CCOMP LIKE ( EMMA , COOKIE , NONE )"}
{"input": "Form one: A president liked that Aiden hoped that Stella liked that the girl hoped that Wyatt noticed that Olivia confessed that Christopher noticed that Mia valued that the drink froze .", "output": "LIKE ( PRESIDENT , NONE , NONE ) CCOMP HOPE ( AIDEN , NONE , NONE ) CCOMP LIKE ( STELLA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NOTICE ( WYATT , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( CHRISTOPHER , NONE , NONE ) CCOMP VALUE ( MIA , NONE , NONE ) CCOMP FREEZE ( NONE , DRINK , NONE )"}
{"input": "Form one: Penelope liked that Daniel hoped that a girl liked that the cat noticed that a pig liked that a child respected that Elizabeth hoped that a boy appreciated that Liam imagined that Sofia imagined that Emma split .", "output": "LIKE ( PENELOPE , NONE , NONE ) CCOMP HOPE ( DANIEL , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP RESPECT ( CHILD , NONE , NONE ) CCOMP HOPE ( ELIZABETH , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( SOFIA , NONE , NONE ) CCOMP SPLIT ( NONE , EMMA , NONE )"}
{"input": "Form one: Victoria liked that Emma said that Liam hoped that Elizabeth was passed the radio by a boy .", "output": "LIKE ( VICTORIA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP PASS ( BOY , RADIO , ELIZABETH )"}
{"input": "Form one: The soldier said that Hazel liked that Emma meant that Ava liked that Owen thought that Charlotte hoped that Elijah liked that the cake was sent to the boy .", "output": "SAY ( SOLDIER , NONE , NONE ) CCOMP LIKE ( HAZEL , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP THINK ( OWEN , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP SEND ( NONE , CAKE , BOY )"}
{"input": "Form one: Ava confessed that a wolf hoped that the baby liked that Noah hoped that Claire liked that a frog valued that a girl admired that Emma admired that Mia liked that the boy thought that a cat liked that a bunny noticed that a pretzel was poked .", "output": "CONFESS ( AVA , NONE , NONE ) CCOMP HOPE ( WOLF , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( CLAIRE , NONE , NONE ) CCOMP VALUE ( FROG , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( BUNNY , NONE , NONE ) CCOMP POKE ( NONE , PRETZEL , NONE )"}
{"input": "Form one: Olivia liked that Noah liked that the doctor liked that Liam appreciated that a girl hoped that the child thought that Abigail hoped that Daniel liked that William liked that Aiden respected that Harper confessed that a boy declared that a cake was grown .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( DOCTOR , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP THINK ( CHILD , NONE , NONE ) CCOMP HOPE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP RESPECT ( AIDEN , NONE , NONE ) CCOMP CONFESS ( HARPER , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP GROW ( NONE , CAKE , NONE )"}
{"input": "Form one: The pony expected that a pupil noticed that a student noticed that a turkey liked that Liam liked that Thomas noticed that a boy liked that the cat liked that a donut changed .", "output": "EXPECT ( PONY , NONE , NONE ) CCOMP NOTICE ( PUPIL , NONE , NONE ) CCOMP NOTICE ( STUDENT , NONE , NONE ) CCOMP LIKE ( TURKEY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( THOMAS , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP CHANGE ( NONE , DONUT , NONE )"}
{"input": "Form one: A cow liked that Emily believed that a chicken liked that Mila supported that a chief said that a boy liked Olivia .", "output": "LIKE ( COW , NONE , NONE ) CCOMP BELIEVE ( EMILY , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP SUPPORT ( MILA , NONE , NONE ) CCOMP SAY ( CHIEF , NONE , NONE ) CCOMP LIKE ( BOY , OLIVIA , NONE )"}
{"input": "Form one: Layla liked that Ethan said that the teacher hoped that Ella liked that the sailor respected that Joshua expected that Emma wished that a girl noticed that the boy liked that Lincoln tossed a cookie on a road .", "output": "LIKE ( LAYLA , NONE , NONE ) CCOMP SAY ( ETHAN , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP LIKE ( ELLA , NONE , NONE ) CCOMP RESPECT ( SAILOR , NONE , NONE ) CCOMP EXPECT ( JOSHUA , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP TOSS ( LINCOLN , ON ( COOKIE , ROAD ) , NONE )"}
{"input": "Form one: Ethan said that the boy tolerated that Liam confessed that Ava liked that a girl liked that a human dreamed that Madison liked that the mouse liked that Emma dreamed that a crayon was cooked .", "output": "SAY ( ETHAN , NONE , NONE ) CCOMP TOLERATE ( BOY , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DREAM ( HUMAN , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP COOK ( NONE , CRAYON , NONE )"}
{"input": "Form one: Emma liked that Luke noticed that Asher hoped that a butterfly said that Mia liked that the monkey proved that Ella noticed that Benjamin confessed that Olivia tolerated that a scientist thought that Sophia tolerated that Henry respected that Liam was sold a cake in a car beside a table .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LUKE , NONE , NONE ) CCOMP HOPE ( ASHER , NONE , NONE ) CCOMP SAY ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP PROVE ( MONKEY , NONE , NONE ) CCOMP NOTICE ( ELLA , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP TOLERATE ( OLIVIA , NONE , NONE ) CCOMP THINK ( SCIENTIST , NONE , NONE ) CCOMP TOLERATE ( SOPHIA , NONE , NONE ) CCOMP RESPECT ( HENRY , NONE , NONE ) CCOMP SELL ( NONE , IN ( CAKE , BESIDE ( CAR , TABLE ) ) , LIAM )"}
{"input": "Form one: Emma said that Charlotte liked that the girl imagined that Sebastian liked that the cake was liked .", "output": "SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( NONE , CAKE , NONE )"}
{"input": "Form one: The dog tolerated that a boy confessed that Emma said that Michael liked that a mouse said that the girl believed that the frog thought that Penelope dreamed that Liam admired that the professor wanted to nap .", "output": "TOLERATE ( DOG , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP SAY ( MOUSE , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP DREAM ( PENELOPE , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP WANT ( PROFESSOR , NONE , NONE ) XCOMP NAP ( PROFESSOR , NONE , NONE )"}
{"input": "Form one: Evelyn proved that a child liked that Anthony imagined that the girl liked that the toy was pierced .", "output": "PROVE ( EVELYN , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP IMAGINE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PIERCE ( NONE , TOY , NONE )"}
{"input": "Form one: Lucas said that a penguin tolerated that a giraffe liked that a boy declared that the girl admired that Liam appreciated that James supported that the mirror inflated .", "output": "SAY ( LUCAS , NONE , NONE ) CCOMP TOLERATE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( JAMES , NONE , NONE ) CCOMP INFLATE ( NONE , MIRROR , NONE )"}
{"input": "Form one: Olivia liked that the girl thought that Emma admired that a cake froze .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: The bear said that Liam wished that Olivia imagined that Jacob noticed that a dog dreamed that the baby liked that a kitty liked that Joseph hoped that Benjamin noticed that the child liked that a boy liked that James liked that Emma burned .", "output": "SAY ( BEAR , NONE , NONE ) CCOMP WISH ( LIAM , NONE , NONE ) CCOMP IMAGINE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( JACOB , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP HOPE ( JOSEPH , NONE , NONE ) CCOMP NOTICE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP BURN ( NONE , EMMA , NONE )"}
{"input": "Form one: The boy noticed that a girl wished that Elijah confessed that the cake rolled .", "output": "NOTICE ( BOY , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP CONFESS ( ELIJAH , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: The mouse liked that Olivia expected that a girl liked that Emma said that the hen confessed that a giraffe confessed that a deer sneezed .", "output": "LIKE ( MOUSE , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP CONFESS ( HEN , NONE , NONE ) CCOMP CONFESS ( GIRAFFE , NONE , NONE ) CCOMP SNEEZE ( DEER , NONE , NONE )"}
{"input": "Form one: The monkey said that a frog liked that Noah noticed that Joshua hoped that Olivia noticed that Nathan liked that William liked that a giraffe liked that Oliver liked that the dog liked that the cat proved that a girl confessed that a cake shortened .", "output": "SAY ( MONKEY , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP HOPE ( JOSHUA , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: Joseph liked that Sophia liked that Liam liked that Emma hoped that a dog declared that Ellie liked that a boy liked that a pony tolerated that the kitty liked that a girl liked that the baby hoped that the horse painted .", "output": "LIKE ( JOSEPH , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP LIKE ( ELLIE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP TOLERATE ( PONY , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP PAINT ( HORSE , NONE , NONE )"}
{"input": "Form one: Olivia said that a prince said that Noah respected that a writer liked that Emma said that the lamb liked that Logan imagined that the dog declared that the girl reddened .", "output": "SAY ( OLIVIA , NONE , NONE ) CCOMP SAY ( PRINCE , NONE , NONE ) CCOMP RESPECT ( NOAH , NONE , NONE ) CCOMP LIKE ( WRITER , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( LAMB , NONE , NONE ) CCOMP IMAGINE ( LOGAN , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP REDDEN ( NONE , GIRL , NONE )"}
{"input": "Form one: Liam hoped that Isabella liked that the teacher thought that the hero hoped that the child noticed that a wolf hoped that Ava froze .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP THINK ( TEACHER , NONE , NONE ) CCOMP HOPE ( HERO , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP HOPE ( WOLF , NONE , NONE ) CCOMP FREEZE ( NONE , AVA , NONE )"}
{"input": "Form one: Emma hoped that James valued that Amelia liked that the father hoped that the visitor hoped that Sophia believed that a girl liked that Noah liked that the pony liked that Isabella liked that the boy was handed the beer beside a table .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP VALUE ( JAMES , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP HOPE ( FATHER , NONE , NONE ) CCOMP HOPE ( VISITOR , NONE , NONE ) CCOMP BELIEVE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( PONY , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP HAND ( NONE , BESIDE ( BEER , TABLE ) , BOY )"}
{"input": "Form one: Sophia liked that Emma hoped that the cat liked that Carter hoped that Mila slept .", "output": "LIKE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( CARTER , NONE , NONE ) CCOMP SLEEP ( MILA , NONE , NONE )"}
{"input": "Form one: Grace expected that Harper hoped that a pony hoped that Sofia said that Sophia noticed that Isabella said that a girl thought that a child declared that Emma hoped that Aria noticed that Liam said that Mason was lended a cake beside a machine .", "output": "EXPECT ( GRACE , NONE , NONE ) CCOMP HOPE ( HARPER , NONE , NONE ) CCOMP HOPE ( PONY , NONE , NONE ) CCOMP SAY ( SOFIA , NONE , NONE ) CCOMP NOTICE ( SOPHIA , NONE , NONE ) CCOMP SAY ( ISABELLA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP NOTICE ( ARIA , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( CAKE , MACHINE ) , MASON )"}
{"input": "Form one: Emma declared that Carter said that the girl noticed that Alexander meant that Natalie thought that Olivia appreciated that Sofia noticed that the butterfly rolled .", "output": "DECLARE ( EMMA , NONE , NONE ) CCOMP SAY ( CARTER , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP MEAN ( ALEXANDER , NONE , NONE ) CCOMP THINK ( NATALIE , NONE , NONE ) CCOMP APPRECIATE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( SOFIA , NONE , NONE ) CCOMP ROLL ( NONE , BUTTERFLY , NONE )"}
{"input": "Form one: Owen hoped that a boy liked that a girl confessed that Hazel hoped that a cake froze .", "output": "HOPE ( OWEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP HOPE ( HAZEL , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: Lincoln believed that Olivia liked that Grayson noticed that Sophia liked that Emma noticed that the girl liked that the bird rolled .", "output": "BELIEVE ( LINCOLN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( GRAYSON , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , BIRD , NONE )"}
{"input": "Form one: Leo thought that the chicken said that Emma supported that Oliver meant that a boy liked that a butterfly wished that the crayon rolled .", "output": "THINK ( LEO , NONE , NONE ) CCOMP SAY ( CHICKEN , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP MEAN ( OLIVER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP WISH ( BUTTERFLY , NONE , NONE ) CCOMP ROLL ( NONE , CRAYON , NONE )"}
{"input": "Form one: Liam liked that Lincoln hoped that Oliver said that Daniel said that a poet proved that Emma admired that the boy hoped that the dog declared that a girl liked that Olivia wished that William was offered the cake on the box by Isabella .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( LINCOLN , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP SAY ( DANIEL , NONE , NONE ) CCOMP PROVE ( POET , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP WISH ( OLIVIA , NONE , NONE ) CCOMP OFFER ( ISABELLA , ON ( CAKE , BOX ) , WILLIAM )"}
{"input": "Form one: A producer liked that the girl liked that Isabella proved that a donkey said that the lion liked that Aria liked that Emma liked that Luke liked that Oliver liked that Olivia liked that the donut was lended to the boy .", "output": "LIKE ( PRODUCER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( ISABELLA , NONE , NONE ) CCOMP SAY ( DONKEY , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LUKE , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LEND ( NONE , DONUT , BOY )"}
{"input": "Form one: Bella liked that a bear hoped that Emma tolerated that Ava noticed that a bunny noticed that the cat hoped that Liam hoped that a dog liked that the donut crumpled .", "output": "LIKE ( BELLA , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP NOTICE ( BUNNY , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP CRUMPLE ( NONE , DONUT , NONE )"}
{"input": "Form one: The baby liked that the president thought that Emma said that Leah liked that Oliver liked that a girl believed that Mia hoped that Liam said that Emily said that Isabella liked that the donut shortened .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP THINK ( PRESIDENT , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( LEAH , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP SAY ( EMILY , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP SHORTEN ( NONE , DONUT , NONE )"}
{"input": "Form one: The baby tolerated that the dog confessed that Julian believed that Emma liked that the girl liked that Liam declared that a bear imagined that Oliver liked that the cat liked that a box burned .", "output": "TOLERATE ( BABY , NONE , NONE ) CCOMP CONFESS ( DOG , NONE , NONE ) CCOMP BELIEVE ( JULIAN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( BEAR , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BURN ( NONE , BOX , NONE )"}
{"input": "Form one: Charlotte dreamed that Emma liked that the girl confessed that a zebra was given the donut beside a table on the bench .", "output": "DREAM ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( DONUT , ON ( TABLE , BENCH ) ) , ZEBRA )"}
{"input": "Form one: Liam expected that a frog thought that Emma liked that James wished that the chicken thought that a cake was frozen by a cat .", "output": "EXPECT ( LIAM , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP WISH ( JAMES , NONE , NONE ) CCOMP THINK ( CHICKEN , NONE , NONE ) CCOMP FREEZE ( CAT , CAKE , NONE )"}
{"input": "Form one: The girl respected that Scarlett imagined that William dreamed that the lawyer thought that a child liked that a tiger hoped that a baby thought that the boy hoped that Dylan was lended a strawberry .", "output": "RESPECT ( GIRL , NONE , NONE ) CCOMP IMAGINE ( SCARLETT , NONE , NONE ) CCOMP DREAM ( WILLIAM , NONE , NONE ) CCOMP THINK ( LAWYER , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( TIGER , NONE , NONE ) CCOMP THINK ( BABY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LEND ( NONE , STRAWBERRY , DYLAN )"}
{"input": "Form one: Emma liked that Wyatt confessed that Stella proved that a mouse liked that Sophia liked that William hoped that a girl supported that Natalie slid .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP CONFESS ( WYATT , NONE , NONE ) CCOMP PROVE ( STELLA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP SLIDE ( NONE , NATALIE , NONE )"}
{"input": "Form one: A girl hoped that Aiden hoped that Olivia believed that the politician noticed that Bella hoped that Addison passed a bottle to Emma .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( AIDEN , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( POLITICIAN , NONE , NONE ) CCOMP HOPE ( BELLA , NONE , NONE ) CCOMP PASS ( ADDISON , BOTTLE , EMMA )"}
{"input": "Form one: Harper liked that the girl noticed that Noah confessed that Liam liked that Emma dreamed that Hannah tolerated that Oliver appreciated that William liked that the bear dreamed that a frog dusted .", "output": "LIKE ( HARPER , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP TOLERATE ( HANNAH , NONE , NONE ) CCOMP APPRECIATE ( OLIVER , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP DREAM ( BEAR , NONE , NONE ) CCOMP DUST ( FROG , NONE , NONE )"}
{"input": "Form one: The cow noticed that Jacob tolerated that Olivia noticed that a bear admired that Sophia thought that the dog hoped that the baby appreciated that Isabella liked that Emma said that the cat snapped .", "output": "NOTICE ( COW , NONE , NONE ) CCOMP TOLERATE ( JACOB , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( BEAR , NONE , NONE ) CCOMP THINK ( SOPHIA , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP SNAP ( NONE , CAT , NONE )"}
{"input": "Form one: Emma hoped that a butterfly liked that the citizen noticed that the cat said that the boy liked that Emily believed that the bunny liked that Jack liked that the bear hoped that William expected that the brush was given to the girl .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP NOTICE ( CITIZEN , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP BELIEVE ( EMILY , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( JACK , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP EXPECT ( WILLIAM , NONE , NONE ) CCOMP GIVE ( NONE , BRUSH , GIRL )"}
{"input": "Form one: A deer declared that the teacher liked that the cat confessed that Jackson proved that the chicken liked that a girl liked that Violet noticed that the dog thought that Liam valued that the boy thought that the father noticed that Emma liked that the cake rolled .", "output": "DECLARE ( DEER , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP PROVE ( JACKSON , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( VIOLET , NONE , NONE ) CCOMP THINK ( DOG , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP NOTICE ( FATHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Logan noticed that Liam liked that a girl imagined that Noah rolled .", "output": "NOTICE ( LOGAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , NOAH , NONE )"}
{"input": "Form one: Avery supported that the lawyer liked that Harper liked that the mother hoped that the girl rolled a potato beside the house .", "output": "SUPPORT ( AVERY , NONE , NONE ) CCOMP LIKE ( LAWYER , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP HOPE ( MOTHER , NONE , NONE ) CCOMP ROLL ( GIRL , BESIDE ( POTATO , HOUSE ) , NONE )"}
{"input": "Form one: Emily wished that Savannah noticed that the poet liked that a frog hoped that Liam hoped that Olivia liked that a baby appreciated that Natalie liked that a girl liked that Daniel tolerated that Eleanor liked that the cat noticed that a hen rolled a cake .", "output": "WISH ( EMILY , NONE , NONE ) CCOMP NOTICE ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( POET , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP LIKE ( NATALIE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP TOLERATE ( DANIEL , NONE , NONE ) CCOMP LIKE ( ELEANOR , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP ROLL ( HEN , CAKE , NONE )"}
{"input": "Form one: Sophia liked that a cat liked that the girl appreciated that Emma hoped that Noah was given a seed on the stage by a boy .", "output": "LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP GIVE ( BOY , ON ( SEED , STAGE ) , NOAH )"}
{"input": "Form one: A guy valued that Jayden noticed that the girl liked that the turtle expected that Madison liked that Isabella hoped that the boy believed that a teacher meant that Noah froze .", "output": "VALUE ( GUY , NONE , NONE ) CCOMP NOTICE ( JAYDEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP EXPECT ( TURTLE , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP MEAN ( TEACHER , NONE , NONE ) CCOMP FREEZE ( NONE , NOAH , NONE )"}
{"input": "Form one: Addison noticed that a teacher said that Jacob hoped that the hen noticed that Logan said that Isabella grew .", "output": "NOTICE ( ADDISON , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP HOPE ( JACOB , NONE , NONE ) CCOMP NOTICE ( HEN , NONE , NONE ) CCOMP SAY ( LOGAN , NONE , NONE ) CCOMP GROW ( NONE , ISABELLA , NONE )"}
{"input": "Form one: The puppy meant that the bear appreciated that the priest liked that the cat hoped that the boy proved that the frog believed that a patient meant that the mouse liked that David gave a cake on the barrel to a champion .", "output": "MEAN ( PUPPY , NONE , NONE ) CCOMP APPRECIATE ( BEAR , NONE , NONE ) CCOMP LIKE ( PRIEST , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP PROVE ( BOY , NONE , NONE ) CCOMP BELIEVE ( FROG , NONE , NONE ) CCOMP MEAN ( PATIENT , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP GIVE ( DAVID , ON ( CAKE , BARREL ) , CHAMPION )"}
{"input": "Form one: Noah proved that a dog declared that Emma respected that a monkey proved that a girl hoped that William was passed a ball beside a key by the boy .", "output": "PROVE ( NOAH , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP PROVE ( MONKEY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP PASS ( BOY , BESIDE ( BALL , KEY ) , WILLIAM )"}
{"input": "Form one: The boy proved that the monkey liked that Olivia hoped that a hero confessed that a baby noticed that James said that Emma meant that the cake burned .", "output": "PROVE ( BOY , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( HERO , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP BURN ( NONE , CAKE , NONE )"}
{"input": "Form one: The duck supported that the baby liked that Charlotte tolerated that a creature hoped that the cookie was poked by a girl .", "output": "SUPPORT ( DUCK , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP TOLERATE ( CHARLOTTE , NONE , NONE ) CCOMP HOPE ( CREATURE , NONE , NONE ) CCOMP POKE ( GIRL , COOKIE , NONE )"}
{"input": "Form one: A giraffe liked that the boy appreciated that Elijah said that Jackson wished that Abigail wished that the sailor hoped that the girl proved that Emma believed that a cookie was liked .", "output": "LIKE ( GIRAFFE , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP SAY ( ELIJAH , NONE , NONE ) CCOMP WISH ( JACKSON , NONE , NONE ) CCOMP WISH ( ABIGAIL , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( NONE , COOKIE , NONE )"}
{"input": "Form one: Isabella liked that Noah liked that a monkey dreamed that Emma thought that Charlotte liked that a pig liked that the mouse liked that the girl declared that a deer respected that William tolerated that a tourist liked that Penelope admired that the duck was sold the box .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DREAM ( MONKEY , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP RESPECT ( DEER , NONE , NONE ) CCOMP TOLERATE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( TOURIST , NONE , NONE ) CCOMP ADMIRE ( PENELOPE , NONE , NONE ) CCOMP SELL ( NONE , BOX , DUCK )"}
{"input": "Form one: Carter noticed that the producer wished that Olivia thought that Mia supported that a girl respected that the teacher hoped that Noah liked that Liam proved that the dog painted .", "output": "NOTICE ( CARTER , NONE , NONE ) CCOMP WISH ( PRODUCER , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP SUPPORT ( MIA , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP PAINT ( DOG , NONE , NONE )"}
{"input": "Form one: The dog noticed that Grace thought that Charlotte liked that the director supported that a mouse liked that a girl liked that Emma was given the cake on a table by Henry .", "output": "NOTICE ( DOG , NONE , NONE ) CCOMP THINK ( GRACE , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP SUPPORT ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP GIVE ( HENRY , ON ( CAKE , TABLE ) , EMMA )"}
{"input": "Form one: Benjamin liked that Ava liked that Emma supported that a dog liked that Olivia ate the cookie on the table .", "output": "LIKE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP EAT ( OLIVIA , ON ( COOKIE , TABLE ) , NONE )"}
{"input": "Form one: The girl hoped that the boy liked that Evelyn said that a champion believed that Emma nursed the hero .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( EVELYN , NONE , NONE ) CCOMP BELIEVE ( CHAMPION , NONE , NONE ) CCOMP NURSE ( EMMA , HERO , NONE )"}
{"input": "Form one: Benjamin noticed that Julian valued that Emma declared that the doll was tolerated .", "output": "NOTICE ( BENJAMIN , NONE , NONE ) CCOMP VALUE ( JULIAN , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( NONE , DOLL , NONE )"}
{"input": "Form one: The girl hoped that Ava liked that Olivia believed that Penelope liked that Noah said that Emma liked that a mother liked that the raisin froze .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( MOTHER , NONE , NONE ) CCOMP FREEZE ( NONE , RAISIN , NONE )"}
{"input": "Form one: A moose dreamed that Matthew liked that Olivia admired that the baby liked that Hannah liked that a boy liked that a child valued that the girl gave a newspaper to Michael .", "output": "DREAM ( MOOSE , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP VALUE ( CHILD , NONE , NONE ) CCOMP GIVE ( GIRL , NEWSPAPER , MICHAEL )"}
{"input": "Form one: Liam hoped that a bear hoped that the baby imagined that Olivia believed that the girl liked that the boy liked that the cake was broken by Mia .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP IMAGINE ( BABY , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP BREAK ( MIA , CAKE , NONE )"}
{"input": "Form one: Liam said that the cat liked that James proved that Benjamin expected that Daniel liked that Abigail liked that Samuel liked that Olivia declared that the girl liked that a dog valued that Lucas liked that Evelyn proved that Lily painted the box in the room .", "output": "SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP EXPECT ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( SAMUEL , NONE , NONE ) CCOMP DECLARE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP VALUE ( DOG , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP PROVE ( EVELYN , NONE , NONE ) CCOMP PAINT ( LILY , IN ( BOX , ROOM ) , NONE )"}
{"input": "Form one: A cat noticed that the moose liked that Oliver hoped that Sophia liked that the baby liked that Ethan liked that the judge was offered the hat .", "output": "NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( MOOSE , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( ETHAN , NONE , NONE ) CCOMP OFFER ( NONE , HAT , JUDGE )"}
{"input": "Form one: A resident hoped that Nora proved that the journalist noticed that a cat liked that the boy liked that William dreamed that Michael dreamed that Liam declared that the puppy liked that a monkey thought that the cake was dusted .", "output": "HOPE ( RESIDENT , NONE , NONE ) CCOMP PROVE ( NORA , NONE , NONE ) CCOMP NOTICE ( JOURNALIST , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP DREAM ( WILLIAM , NONE , NONE ) CCOMP DREAM ( MICHAEL , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP THINK ( MONKEY , NONE , NONE ) CCOMP DUST ( NONE , CAKE , NONE )"}
{"input": "Form one: A donkey proved that a mouse declared that a boy liked that a farmer proved that the cat liked that Benjamin liked that a landlord liked that Liam liked that the cake was tossed by the girl .", "output": "PROVE ( DONKEY , NONE , NONE ) CCOMP DECLARE ( MOUSE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( FARMER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( LANDLORD , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP TOSS ( GIRL , CAKE , NONE )"}
{"input": "Form one: A girl liked that Hannah liked that Mason hoped that the cake doubled .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP DOUBLE ( NONE , CAKE , NONE )"}
{"input": "Form one: A boy meant that the girl hoped that Olivia hoped that Mason believed that a chicken hoped that Ellie hoped that Ryan slid Sebastian .", "output": "MEAN ( BOY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( MASON , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( ELLIE , NONE , NONE ) CCOMP SLIDE ( RYAN , SEBASTIAN , NONE )"}
{"input": "Form one: The bee imagined that the sailor liked that Liam meant that Anthony declared that Emma liked that Amelia liked that the cake was painted by Ava .", "output": "IMAGINE ( BEE , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP MEAN ( LIAM , NONE , NONE ) CCOMP DECLARE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP PAINT ( AVA , CAKE , NONE )"}
{"input": "Form one: The dog said that Anthony dreamed that Liam hoped that Emma thought that the cat noticed that a fruit was liked .", "output": "SAY ( DOG , NONE , NONE ) CCOMP DREAM ( ANTHONY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( NONE , FRUIT , NONE )"}
{"input": "Form one: The girl liked that a chicken hoped that Hazel said that a boy liked that a cat proved that a cake was slid .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP SAY ( HAZEL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP SLIDE ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma noticed that Liam liked that a chicken meant that the boy liked that a girl was given a cake .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP MEAN ( CHICKEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , GIRL )"}
{"input": "Form one: A girl liked that Aiden liked that a puppy liked that Aria expected that the baby said that the cat sneezed .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP EXPECT ( ARIA , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP SNEEZE ( CAT , NONE , NONE )"}
{"input": "Form one: Levi confessed that a kitty supported that Evelyn declared that a mouse liked that Luke thought that a bird noticed that Alexander said that the frog liked that Olivia valued that a raisin was thrown .", "output": "CONFESS ( LEVI , NONE , NONE ) CCOMP SUPPORT ( KITTY , NONE , NONE ) CCOMP DECLARE ( EVELYN , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP THINK ( LUKE , NONE , NONE ) CCOMP NOTICE ( BIRD , NONE , NONE ) CCOMP SAY ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP THROW ( NONE , RAISIN , NONE )"}
{"input": "Form one: The patient liked that the girl liked that Emma valued that William hoped that Ava declared that a bee liked that James hoped that the child found a boy on the table .", "output": "LIKE ( PATIENT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP DECLARE ( AVA , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP FIND ( CHILD , ON ( BOY , TABLE ) , NONE )"}
{"input": "Form one: Noah noticed that Avery tolerated that Olivia hoped that the cat liked that the goose imagined that Liam was given the cake .", "output": "NOTICE ( NOAH , NONE , NONE ) CCOMP TOLERATE ( AVERY , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP IMAGINE ( GOOSE , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , LIAM )"}
{"input": "Form one: Emma believed that the champion declared that the kitty confessed that Liam liked that a girl gave the bat in the garden to Ava .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP DECLARE ( CHAMPION , NONE , NONE ) CCOMP CONFESS ( KITTY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP GIVE ( GIRL , IN ( BAT , GARDEN ) , AVA )"}
{"input": "Form one: The girl hoped that the giraffe liked that Isabella liked that the cat liked that the donut was collapsed .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP COLLAPSE ( NONE , DONUT , NONE )"}
{"input": "Form one: Olivia liked that a chicken hoped that a visitor said that the baby liked that Liam imagined that a mouse admired that Ella said that Henry liked that Ava was lended the cake by a cat .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP SAY ( VISITOR , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( MOUSE , NONE , NONE ) CCOMP SAY ( ELLA , NONE , NONE ) CCOMP LIKE ( HENRY , NONE , NONE ) CCOMP LEND ( CAT , CAKE , AVA )"}
{"input": "Form one: Noah liked that the girl respected that Bella liked that Liam liked that a boy liked that a lion proved that the cat thought that Mia was posted a balloon on the stage by Evelyn .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( BELLA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( LION , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP POST ( EVELYN , ON ( BALLOON , STAGE ) , MIA )"}
{"input": "Form one: A donkey wished that a penguin liked that Liam liked that the kitty liked that a giraffe liked that Ava was lended a box .", "output": "WISH ( DONKEY , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LEND ( NONE , BOX , AVA )"}
{"input": "Form one: The dog liked that a bear tolerated that the journalist declared that Emma tolerated that the doctor liked that Victoria hoped that the giraffe hoped that Daniel hoped that Benjamin was lended a cake .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP TOLERATE ( BEAR , NONE , NONE ) CCOMP DECLARE ( JOURNALIST , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP LIKE ( DOCTOR , NONE , NONE ) CCOMP HOPE ( VICTORIA , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP HOPE ( DANIEL , NONE , NONE ) CCOMP LEND ( NONE , CAKE , BENJAMIN )"}
{"input": "Form one: The boy declared that Natalie said that Gabriel hoped that a doctor liked that Liam ate a donut .", "output": "DECLARE ( BOY , NONE , NONE ) CCOMP SAY ( NATALIE , NONE , NONE ) CCOMP HOPE ( GABRIEL , NONE , NONE ) CCOMP LIKE ( DOCTOR , NONE , NONE ) CCOMP EAT ( LIAM , DONUT , NONE )"}
{"input": "Form one: The pony hoped that the girl proved that the boy said that a priest liked that James hoped that the turkey dreamed that Amelia tolerated that Emma liked that a cookie was liked .", "output": "HOPE ( PONY , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( PRIEST , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP DREAM ( TURKEY , NONE , NONE ) CCOMP TOLERATE ( AMELIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( NONE , COOKIE , NONE )"}
{"input": "Form one: Emma believed that a boy noticed that a baby liked that the frog ate .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP EAT ( FROG , NONE , NONE )"}
{"input": "Form one: Liam liked that Benjamin hoped that James liked that Oliver noticed that a moose liked that a fig was helped by the teacher .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP LIKE ( MOOSE , NONE , NONE ) CCOMP HELP ( TEACHER , FIG , NONE )"}
{"input": "Form one: Emma noticed that Stella hoped that a baby liked that a girl hoped that a boy liked that a cow liked that the cake slid .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP HOPE ( STELLA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP SLIDE ( NONE , CAKE , NONE )"}
{"input": "Form one: A student liked that a penguin liked that Olivia believed that the girl hoped that the bee hoped that Noah confessed that Emma liked that the cow believed that James tolerated that a chief said that a zebra was given the melon in the cup .", "output": "LIKE ( STUDENT , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( BEE , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( COW , NONE , NONE ) CCOMP TOLERATE ( JAMES , NONE , NONE ) CCOMP SAY ( CHIEF , NONE , NONE ) CCOMP GIVE ( NONE , IN ( MELON , CUP ) , ZEBRA )"}
{"input": "Form one: Sophia thought that a giraffe dreamed that the friend liked that the horse expected that the hero hoped that the dog liked that a cat noticed that Emma liked that the consumer liked that Oliver noticed that Ava hoped that Lucas was lended a book on a stage by the president .", "output": "THINK ( SOPHIA , NONE , NONE ) CCOMP DREAM ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( FRIEND , NONE , NONE ) CCOMP EXPECT ( HORSE , NONE , NONE ) CCOMP HOPE ( HERO , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CONSUMER , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LEND ( PRESIDENT , ON ( BOOK , STAGE ) , LUCAS )"}
{"input": "Form one: The tiger liked that a kid liked that Isabella supported that a boy liked that Bella was lended the flag on a table .", "output": "LIKE ( TIGER , NONE , NONE ) CCOMP LIKE ( KID , NONE , NONE ) CCOMP SUPPORT ( ISABELLA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LEND ( NONE , ON ( FLAG , TABLE ) , BELLA )"}
{"input": "Form one: The dog tolerated that a child hoped that Emma said that a frog liked that Aiden liked that the cat supported that the bird liked that a pizza enlarged .", "output": "TOLERATE ( DOG , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP SUPPORT ( CAT , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP ENLARGE ( NONE , PIZZA , NONE )"}
{"input": "Form one: Benjamin liked that Evelyn hoped that Henry supported that Claire liked that Emma wished that the girl believed that a guest liked that Liam noticed that a chicken liked that the donut was helped .", "output": "LIKE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( EVELYN , NONE , NONE ) CCOMP SUPPORT ( HENRY , NONE , NONE ) CCOMP LIKE ( CLAIRE , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( GUEST , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP HELP ( NONE , DONUT , NONE )"}
{"input": "Form one: Aubrey liked that the cat believed that the bunny believed that a kid meant that Emily valued that William thought that Layla noticed that Emma proved that Oliver meant that Aiden expected that Olivia liked that Jacob proved that the cookie decomposed .", "output": "LIKE ( AUBREY , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP BELIEVE ( BUNNY , NONE , NONE ) CCOMP MEAN ( KID , NONE , NONE ) CCOMP VALUE ( EMILY , NONE , NONE ) CCOMP THINK ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( LAYLA , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP MEAN ( OLIVER , NONE , NONE ) CCOMP EXPECT ( AIDEN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP PROVE ( JACOB , NONE , NONE ) CCOMP DECOMPOSE ( NONE , COOKIE , NONE )"}
{"input": "Form one: The monster valued that a frog hoped that Mason hoped that the king hoped that William admired that Olivia liked that Sophia appreciated that the child hoped that Ava liked that Oliver hoped that a teacher hoped that a girl was fed a cake in the room .", "output": "VALUE ( MONSTER , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP HOPE ( KING , NONE , NONE ) CCOMP ADMIRE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP FEED ( NONE , IN ( CAKE , ROOM ) , GIRL )"}
{"input": "Form one: A queen hoped that a king believed that a girl said that James liked that the boy imagined that the frog imagined that Ava said that the cat hoped that Noah was lended the donut .", "output": "HOPE ( QUEEN , NONE , NONE ) CCOMP BELIEVE ( KING , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP IMAGINE ( FROG , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP LEND ( NONE , DONUT , NOAH )"}
{"input": "Form one: The boy said that Emily appreciated that Harper confessed that the cup froze .", "output": "SAY ( BOY , NONE , NONE ) CCOMP APPRECIATE ( EMILY , NONE , NONE ) CCOMP CONFESS ( HARPER , NONE , NONE ) CCOMP FREEZE ( NONE , CUP , NONE )"}
{"input": "Form one: The cat liked that the boy liked that a monkey liked that Emma meant that Claire said that a bunny expected that a mouse liked that the scientist liked that Noah believed that a guy declared that Olivia forwarded the flag to a girl .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP SAY ( CLAIRE , NONE , NONE ) CCOMP EXPECT ( BUNNY , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( SCIENTIST , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP DECLARE ( GUY , NONE , NONE ) CCOMP FORWARD ( OLIVIA , FLAG , GIRL )"}
{"input": "Form one: Harper tolerated that Liam said that a cat valued that Emma confessed that Sophia confessed that James declared that Ava split .", "output": "TOLERATE ( HARPER , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP CONFESS ( SOPHIA , NONE , NONE ) CCOMP DECLARE ( JAMES , NONE , NONE ) CCOMP SPLIT ( NONE , AVA , NONE )"}
{"input": "Form one: A bird declared that Matthew said that Liam hoped that a boy hoped that the girl liked that the cake was posted to Thomas .", "output": "DECLARE ( BIRD , NONE , NONE ) CCOMP SAY ( MATTHEW , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP POST ( NONE , CAKE , THOMAS )"}
{"input": "Form one: The customer hoped that a cat liked that the bunny liked that Emma liked that the horse liked that Olivia liked that the guest appreciated that a boy thought that the cake was floated by Lily .", "output": "HOPE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( GUEST , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP FLOAT ( LILY , CAKE , NONE )"}
{"input": "Form one: Emma hoped that the dog meant that the consumer expected that a chicken liked that the girl liked that Benjamin liked that the mandarin was rolled by Olivia .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP MEAN ( DOG , NONE , NONE ) CCOMP EXPECT ( CONSUMER , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP ROLL ( OLIVIA , MANDARIN , NONE )"}
{"input": "Form one: The girl confessed that a boy liked that Emma meant that James thought that a cat thought that the tiger packed .", "output": "CONFESS ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP THINK ( JAMES , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP PACK ( TIGER , NONE , NONE )"}
{"input": "Form one: Jackson tolerated that Charlotte declared that Isabella noticed that a mother liked that the princess liked that Emma appreciated that Mia expected that a lion confessed that Addison liked that Liam liked that Ava was awarded the cake on a log beside a cassette .", "output": "TOLERATE ( JACKSON , NONE , NONE ) CCOMP DECLARE ( CHARLOTTE , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( MOTHER , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP EXPECT ( MIA , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP LIKE ( ADDISON , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP AWARD ( NONE , ON ( CAKE , BESIDE ( LOG , CASSETTE ) ) , AVA )"}
{"input": "Form one: Mia meant that the girl noticed that William liked that Oliver respected that Noah liked that Emma valued that Avery burned .", "output": "MEAN ( MIA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP RESPECT ( OLIVER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP BURN ( NONE , AVERY , NONE )"}
{"input": "Form one: Sebastian wished that Madison hoped that Emma imagined that Mila respected that the child thought that Olivia liked that Elizabeth hoped that the cake rolled .", "output": "WISH ( SEBASTIAN , NONE , NONE ) CCOMP HOPE ( MADISON , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP RESPECT ( MILA , NONE , NONE ) CCOMP THINK ( CHILD , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( ELIZABETH , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma confessed that a child liked that Noah liked that Lily appreciated that a hen liked that the tenant liked that the girl imagined that Penelope admired that a cat hoped that Jaxon noticed that a crocodile changed .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( LILY , NONE , NONE ) CCOMP LIKE ( HEN , NONE , NONE ) CCOMP LIKE ( TENANT , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( PENELOPE , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP NOTICE ( JAXON , NONE , NONE ) CCOMP CHANGE ( NONE , CROCODILE , NONE )"}
{"input": "Form one: A girl liked that Liam believed that the patient liked that the dog noticed that Noah believed that Olivia appreciated that Emma hoped that the cookie was fed to Jacob .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP FEED ( NONE , COOKIE , JACOB )"}
{"input": "Form one: Daniel liked that a mouse liked that a boy liked that a lion liked that Noah rolled the cake beside the hedge .", "output": "LIKE ( DANIEL , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP ROLL ( NOAH , BESIDE ( CAKE , HEDGE ) , NONE )"}
{"input": "Form one: The cat liked that David liked that Ethan respected that Olivia liked that Liam valued that Aria liked that a girl proved that the boy was sent the cake .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( DAVID , NONE , NONE ) CCOMP RESPECT ( ETHAN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP SEND ( NONE , CAKE , BOY )"}
{"input": "Form one: The boy imagined that Jayden valued that Emma meant that Isabella meant that Amelia hoped that a cat liked that Evelyn liked that Olivia liked that a frog believed that the girl valued that the donut crumpled .", "output": "IMAGINE ( BOY , NONE , NONE ) CCOMP VALUE ( JAYDEN , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP MEAN ( ISABELLA , NONE , NONE ) CCOMP HOPE ( AMELIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( FROG , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP CRUMPLE ( NONE , DONUT , NONE )"}
{"input": "Form one: William hoped that Emma imagined that Noah thought that the boy noticed that the cup was heard .", "output": "HOPE ( WILLIAM , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP THINK ( NOAH , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP HEAR ( NONE , CUP , NONE )"}
{"input": "Form one: Alexander liked that Emma declared that the boy declared that the child liked that a chicken liked that the buyer appreciated that the cat hoped that the fly imagined that a hat was packed .", "output": "LIKE ( ALEXANDER , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP APPRECIATE ( BUYER , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP IMAGINE ( FLY , NONE , NONE ) CCOMP PACK ( NONE , HAT , NONE )"}
{"input": "Form one: The student confessed that a boy liked that the cat expected that Theodore said that Emma said that the cookie was crumpled .", "output": "CONFESS ( STUDENT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP EXPECT ( CAT , NONE , NONE ) CCOMP SAY ( THEODORE , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP CRUMPLE ( NONE , COOKIE , NONE )"}
{"input": "Form one: A cat proved that Mila expected that a politician hoped that the giraffe liked that Emma wished that a dog liked that the boy believed that Liam declared that a teacher said that Emily liked that the girl liked that a donut was passed to Joseph .", "output": "PROVE ( CAT , NONE , NONE ) CCOMP EXPECT ( MILA , NONE , NONE ) CCOMP HOPE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PASS ( NONE , DONUT , JOSEPH )"}
{"input": "Form one: The girl expected that Sofia noticed that Noah believed that a landlord believed that Ava liked that Olivia thought that the deer liked that Benjamin confessed that a butterfly respected that Isabella expected that a dog liked that Emma liked that the cake was given to the lion .", "output": "EXPECT ( GIRL , NONE , NONE ) CCOMP NOTICE ( SOFIA , NONE , NONE ) CCOMP BELIEVE ( NOAH , NONE , NONE ) CCOMP BELIEVE ( LANDLORD , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP RESPECT ( BUTTERFLY , NONE , NONE ) CCOMP EXPECT ( ISABELLA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , LION )"}
{"input": "Form one: Isabella liked that Liam supported that Emma confessed that Noah declared that the boy liked that Olivia said that Victoria liked that the lion liked that the girl wished that the pizza was disintegrated .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP DECLARE ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP DISINTEGRATE ( NONE , PIZZA , NONE )"}
{"input": "Form one: Emma supported that Isabella liked that Liam liked that Madison appreciated that a flag was burned .", "output": "SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( MADISON , NONE , NONE ) CCOMP BURN ( NONE , FLAG , NONE )"}
{"input": "Form one: A boy believed that a cat liked that Liam said that Mia noticed that Lucas was given a rose in the room by Olivia .", "output": "BELIEVE ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP NOTICE ( MIA , NONE , NONE ) CCOMP GIVE ( OLIVIA , IN ( ROSE , ROOM ) , LUCAS )"}
{"input": "Form one: A sheep believed that William confessed that Noah liked that a deer liked that the cat hoped that a monkey said that the boy valued that the president hoped that the sailor liked that Theodore believed that Emma expected that the yogurt floated .", "output": "BELIEVE ( SHEEP , NONE , NONE ) CCOMP CONFESS ( WILLIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP VALUE ( BOY , NONE , NONE ) CCOMP HOPE ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP BELIEVE ( THEODORE , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP FLOAT ( NONE , YOGURT , NONE )"}
{"input": "Form one: The giraffe noticed that the bear liked that a baby liked that a bunny liked that the chief liked that the boy supported that Emma confessed that a professor hoped that a cat proved that Harper liked that the dog liked that the donut was lended to Sophia .", "output": "NOTICE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( CHIEF , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP HOPE ( PROFESSOR , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LEND ( NONE , DONUT , SOPHIA )"}
{"input": "Form one: Leah declared that Isabella respected that Liam supported that Emma admired that Isaac liked that the captain hoped that Noah was given the rose beside the nest .", "output": "DECLARE ( LEAH , NONE , NONE ) CCOMP RESPECT ( ISABELLA , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( ISAAC , NONE , NONE ) CCOMP HOPE ( CAPTAIN , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( ROSE , NEST ) , NOAH )"}
{"input": "Form one: A boy declared that Savannah confessed that a driver liked that the judge hoped that the girl believed that Emma liked that a queen tolerated that a chief appreciated that a cookie was rolled by Alexander .", "output": "DECLARE ( BOY , NONE , NONE ) CCOMP CONFESS ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( DRIVER , NONE , NONE ) CCOMP HOPE ( JUDGE , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( QUEEN , NONE , NONE ) CCOMP APPRECIATE ( CHIEF , NONE , NONE ) CCOMP ROLL ( ALEXANDER , COOKIE , NONE )"}
{"input": "Form one: The butterfly hoped that Ava said that Emma liked that the child hoped that the boy rolled .", "output": "HOPE ( BUTTERFLY , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP ROLL ( NONE , BOY , NONE )"}
{"input": "Form one: Nora tolerated that Liam hoped that a mouse declared that a dog liked that Olivia confessed that a chicken imagined that Ava proved that Emma liked that a drink rolled .", "output": "TOLERATE ( NORA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP DECLARE ( MOUSE , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP IMAGINE ( CHICKEN , NONE , NONE ) CCOMP PROVE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: The hen said that the duck confessed that a boy liked that Violet confessed that the giraffe liked that Emma respected that Amelia thought that Matthew believed that Isabella hoped that a dog proved that Oliver noticed that Liam liked that a girl was given a crystal beside the table .", "output": "SAY ( HEN , NONE , NONE ) CCOMP CONFESS ( DUCK , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( VIOLET , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP THINK ( AMELIA , NONE , NONE ) CCOMP BELIEVE ( MATTHEW , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( CRYSTAL , TABLE ) , GIRL )"}
{"input": "Form one: A princess supported that Olivia liked that a teacher hoped that James declared that Charlotte liked that a chief wished that a giraffe said that the driver liked that Ella supported that the girl hoped that the cat said that a lion said that a cake was rolled .", "output": "SUPPORT ( PRINCESS , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP DECLARE ( JAMES , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP WISH ( CHIEF , NONE , NONE ) CCOMP SAY ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( DRIVER , NONE , NONE ) CCOMP SUPPORT ( ELLA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP SAY ( LION , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma liked that Liam noticed that Stella noticed that the drink froze .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP NOTICE ( STELLA , NONE , NONE ) CCOMP FREEZE ( NONE , DRINK , NONE )"}
{"input": "Form one: The mouse liked that a girl hoped that Charlotte hoped that Lucas confessed that Emma dreamed that a dog tolerated that Wyatt expected that Evelyn liked that Noah dreamed that Thomas respected that William liked that Savannah liked that a boy ate .", "output": "LIKE ( MOUSE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP CONFESS ( LUCAS , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP TOLERATE ( DOG , NONE , NONE ) CCOMP EXPECT ( WYATT , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP DREAM ( NOAH , NONE , NONE ) CCOMP RESPECT ( THOMAS , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( SAVANNAH , NONE , NONE ) CCOMP EAT ( BOY , NONE , NONE )"}
{"input": "Form one: Emma liked that the dog wished that Liam hoped that the girl liked that the servant said that Nathan declared that the bear liked that a governor liked that a baby respected that the cookie broke .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP WISH ( DOG , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( SERVANT , NONE , NONE ) CCOMP DECLARE ( NATHAN , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP RESPECT ( BABY , NONE , NONE ) CCOMP BREAK ( NONE , COOKIE , NONE )"}
{"input": "Form one: A buyer thought that a cat meant that a boy hoped that a sailor shortened a donut beside a sword on the table on a bible beside a machine on a windowsill beside a bed .", "output": "THINK ( BUYER , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP SHORTEN ( SAILOR , BESIDE ( DONUT , ON ( SWORD , ON ( TABLE , BESIDE ( BIBLE , ON ( MACHINE , BESIDE ( WINDOWSILL , BED ) ) ) ) ) ) , NONE )"}
{"input": "Form one: Violet confessed that Liam confessed that the girl wished that the tiger liked that Elizabeth liked that a donkey hoped that a tenant liked that a dog liked that Christopher rolled .", "output": "CONFESS ( VIOLET , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( TIGER , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP LIKE ( TENANT , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP ROLL ( NONE , CHRISTOPHER , NONE )"}
{"input": "Form one: James thought that Nathan liked that Ava confessed that the boy admired that the lion liked that the crown was lended to a priest .", "output": "THINK ( JAMES , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LEND ( NONE , CROWN , PRIEST )"}
{"input": "Form one: Emma confessed that the bear liked that the girl believed that the chicken hoped that Liam admired that the child liked that Lucas liked that Ava appreciated that a cake shortened .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP APPRECIATE ( AVA , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: Ava liked that Olivia confessed that the donkey believed that a dog proved that the girl said that Emma said that Liam liked that Noah supported that a mouse said that a boy supported that a potato was sold to the tourist .", "output": "LIKE ( AVA , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( DONKEY , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( NOAH , NONE , NONE ) CCOMP SAY ( MOUSE , NONE , NONE ) CCOMP SUPPORT ( BOY , NONE , NONE ) CCOMP SELL ( NONE , POTATO , TOURIST )"}
{"input": "Form one: Liam liked that Lincoln liked that Emma wished that Nora noticed that Emily liked that the spokesman liked that Isabella respected that a girl said that a cake collapsed .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( LINCOLN , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP NOTICE ( NORA , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP RESPECT ( ISABELLA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP COLLAPSE ( NONE , CAKE , NONE )"}
{"input": "Form one: Olivia liked that James supported that a prince admired that a cake was floated by a driver .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP SUPPORT ( JAMES , NONE , NONE ) CCOMP ADMIRE ( PRINCE , NONE , NONE ) CCOMP FLOAT ( DRIVER , CAKE , NONE )"}
{"input": "Form one: A kitty liked that a boy hoped that Olivia noticed that the cat noticed that James said that the chicken respected that Natalie meant that Emma crumpled .", "output": "LIKE ( KITTY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP RESPECT ( CHICKEN , NONE , NONE ) CCOMP MEAN ( NATALIE , NONE , NONE ) CCOMP CRUMPLE ( NONE , EMMA , NONE )"}
{"input": "Form one: The mouse declared that a puppy liked that William liked that the pony liked that a boy admired that Mia declared that Ava liked that a box changed .", "output": "DECLARE ( MOUSE , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( PONY , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP DECLARE ( MIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP CHANGE ( NONE , BOX , NONE )"}
{"input": "Form one: The boy liked that Camila said that Liam hoped that Emma thought that the girl thought that a baby believed that Isabella hoped that Victoria said that the mouse said that Noah admired that a book enlarged .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP SAY ( CAMILA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP SAY ( VICTORIA , NONE , NONE ) CCOMP SAY ( MOUSE , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP ENLARGE ( NONE , BOOK , NONE )"}
{"input": "Form one: A girl liked that the goose confessed that a hero liked that Grace imagined that a doctor believed that Isaac liked that Ryan confessed that Camila liked that a bear liked that Emma hoped that Liam thought that the baby rolled .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( GOOSE , NONE , NONE ) CCOMP LIKE ( HERO , NONE , NONE ) CCOMP IMAGINE ( GRACE , NONE , NONE ) CCOMP BELIEVE ( DOCTOR , NONE , NONE ) CCOMP LIKE ( ISAAC , NONE , NONE ) CCOMP CONFESS ( RYAN , NONE , NONE ) CCOMP LIKE ( CAMILA , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , BABY , NONE )"}
{"input": "Form one: The chicken appreciated that the squirrel liked that Isabella declared that the dog said that a crocodile liked that the girl believed that the cat was loaned a cake beside the bat by the professor .", "output": "APPRECIATE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( SQUIRREL , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP LIKE ( CROCODILE , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LOAN ( PROFESSOR , BESIDE ( CAKE , BAT ) , CAT )"}
{"input": "Form one: David liked that the monkey hoped that Olivia dreamed that the landlord tolerated that Liam hoped that the wolf admired that a bear confessed that a tourist dreamed that Emma liked that Isabella liked that a boy meant that a girl thought that a dog froze .", "output": "LIKE ( DAVID , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP DREAM ( OLIVIA , NONE , NONE ) CCOMP TOLERATE ( LANDLORD , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( WOLF , NONE , NONE ) CCOMP CONFESS ( BEAR , NONE , NONE ) CCOMP DREAM ( TOURIST , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP FREEZE ( NONE , DOG , NONE )"}
{"input": "Form one: A lion supported that the fish believed that Emma confessed that a princess liked that the soldier declared that a child declared that Jackson liked that the donut rolled .", "output": "SUPPORT ( LION , NONE , NONE ) CCOMP BELIEVE ( FISH , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP DECLARE ( SOLDIER , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP LIKE ( JACKSON , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: Ava wished that Olivia hoped that the horse tolerated that a politician liked that Lily liked that Levi respected that the chicken liked that a box was liked by a sailor .", "output": "WISH ( AVA , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP TOLERATE ( HORSE , NONE , NONE ) CCOMP LIKE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( LILY , NONE , NONE ) CCOMP RESPECT ( LEVI , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( SAILOR , BOX , NONE )"}
{"input": "Form one: A cat declared that Liam said that Charlotte meant that the girl liked that Emma appreciated that the boy liked that the frog liked that the duck lended a jigsaw on the table in a room to Ava .", "output": "DECLARE ( CAT , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP MEAN ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP LEND ( DUCK , ON ( JIGSAW , IN ( TABLE , ROOM ) ) , AVA )"}
{"input": "Form one: James hoped that a monkey liked that a cat liked that Emily liked that a girl liked that Ava laughed .", "output": "HOPE ( JAMES , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( EMILY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LAUGH ( AVA , NONE , NONE )"}
{"input": "Form one: Joshua admired that a girl noticed that the crocodile hoped that a monkey noticed that a dog liked that a donut collapsed .", "output": "ADMIRE ( JOSHUA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP HOPE ( CROCODILE , NONE , NONE ) CCOMP NOTICE ( MONKEY , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP COLLAPSE ( NONE , DONUT , NONE )"}
{"input": "Form one: Gabriel liked that the friend noticed that Noah dreamed that the sheep said that Emma confessed that Liam liked that a researcher gave a frog a cake .", "output": "LIKE ( GABRIEL , NONE , NONE ) CCOMP NOTICE ( FRIEND , NONE , NONE ) CCOMP DREAM ( NOAH , NONE , NONE ) CCOMP SAY ( SHEEP , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP GIVE ( RESEARCHER , CAKE , FROG )"}
{"input": "Form one: Emma said that a boy wished that a girl liked that a cat liked that the judge hoped that Noah admired that a fish liked that a giraffe liked that the hero believed that a donut was seen .", "output": "SAY ( EMMA , NONE , NONE ) CCOMP WISH ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( JUDGE , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP BELIEVE ( HERO , NONE , NONE ) CCOMP SEE ( NONE , DONUT , NONE )"}
{"input": "Form one: Oliver hoped that a frog tolerated that the puppy liked that John liked that Olivia hoped that Emma liked that the donut decomposed .", "output": "HOPE ( OLIVER , NONE , NONE ) CCOMP TOLERATE ( FROG , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP LIKE ( JOHN , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DECOMPOSE ( NONE , DONUT , NONE )"}
{"input": "Form one: The boy meant that the poet liked that a squirrel proved that William respected that a bird hoped that Hannah hoped that Liam liked that the cake changed .", "output": "MEAN ( BOY , NONE , NONE ) CCOMP LIKE ( POET , NONE , NONE ) CCOMP PROVE ( SQUIRREL , NONE , NONE ) CCOMP RESPECT ( WILLIAM , NONE , NONE ) CCOMP HOPE ( BIRD , NONE , NONE ) CCOMP HOPE ( HANNAH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP CHANGE ( NONE , CAKE , NONE )"}
{"input": "Form one: The pig liked that Levi liked that the dog supported that Sophia wished that the girl imagined that the cat liked that the baby liked that Logan noticed that the president meant that Emma admired that a horse passed the donut on a carpet on a table to Olivia .", "output": "LIKE ( PIG , NONE , NONE ) CCOMP LIKE ( LEVI , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP WISH ( SOPHIA , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP NOTICE ( LOGAN , NONE , NONE ) CCOMP MEAN ( PRESIDENT , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP PASS ( HORSE , ON ( DONUT , ON ( CARPET , TABLE ) ) , OLIVIA )"}
{"input": "Form one: A boy liked that a baby liked that Emma liked that Liam valued that Thomas liked that Layla was sold a cake in a house .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP LIKE ( THOMAS , NONE , NONE ) CCOMP SELL ( NONE , IN ( CAKE , HOUSE ) , LAYLA )"}
{"input": "Form one: The chicken confessed that the princess thought that Benjamin liked that Liam valued that Harper liked that the student said that a boy believed that a girl said that Mia meant that Levi confessed that Olivia hoped that Michael tolerated that Camila was sold a cake in a box on a table by Isabella .", "output": "CONFESS ( CHICKEN , NONE , NONE ) CCOMP THINK ( PRINCESS , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP SAY ( STUDENT , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP MEAN ( MIA , NONE , NONE ) CCOMP CONFESS ( LEVI , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP TOLERATE ( MICHAEL , NONE , NONE ) CCOMP SELL ( ISABELLA , IN ( CAKE , ON ( BOX , TABLE ) ) , CAMILA )"}
{"input": "Form one: The cow liked that Liam said that the student liked that the horse believed that Sophia admired that Emma hoped that Charlotte liked that the girl tolerated that Michael admired that the bear hoped that Jayden dreamed that the professor ate a donut in the room .", "output": "LIKE ( COW , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP BELIEVE ( HORSE , NONE , NONE ) CCOMP ADMIRE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( MICHAEL , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP DREAM ( JAYDEN , NONE , NONE ) CCOMP EAT ( PROFESSOR , IN ( DONUT , ROOM ) , NONE )"}
{"input": "Form one: Jackson liked that Isabella liked that William hoped that Olivia imagined that the cat appreciated that Abigail liked that Liam said that the hero liked that a bird liked that a mouse liked that a sheep passed the girl a cake in the stadium .", "output": "LIKE ( JACKSON , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP IMAGINE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( CAT , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( HERO , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP PASS ( SHEEP , IN ( CAKE , STADIUM ) , GIRL )"}
{"input": "Form one: Olivia confessed that Ethan noticed that Emma tolerated that Liam thought that a child confessed that Benjamin appreciated that David hoped that Noah liked that a girl tolerated that the ball was admired .", "output": "CONFESS ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( ETHAN , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP CONFESS ( CHILD , NONE , NONE ) CCOMP APPRECIATE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( DAVID , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( NONE , BALL , NONE )"}
{"input": "Form one: The girl hoped that Chloe liked that Mia liked that a consumer liked that the boy admired that Emma believed that the biscuit was split by a cat .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( CHLOE , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( CONSUMER , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP SPLIT ( CAT , BISCUIT , NONE )"}
{"input": "Form one: Lucas dreamed that Hazel thought that a girl declared that Joshua confessed that Liam respected that Brooklyn slept .", "output": "DREAM ( LUCAS , NONE , NONE ) CCOMP THINK ( HAZEL , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP CONFESS ( JOSHUA , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP SLEEP ( BROOKLYN , NONE , NONE )"}
{"input": "Form one: A girl respected that a cat noticed that the baby proved that Emma wished that Liam liked that a monster valued that a frog liked that Theodore said that the bird supported that the cake was fed to Olivia .", "output": "RESPECT ( GIRL , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP PROVE ( BABY , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( MONSTER , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP SAY ( THEODORE , NONE , NONE ) CCOMP SUPPORT ( BIRD , NONE , NONE ) CCOMP FEED ( NONE , CAKE , OLIVIA )"}
{"input": "Form one: Ava liked that the moose meant that the chief liked that James hoped that a girl liked that the cat believed that Natalie tolerated that Emma said that Elizabeth hoped that the kid tolerated that a baby laughed .", "output": "LIKE ( AVA , NONE , NONE ) CCOMP MEAN ( MOOSE , NONE , NONE ) CCOMP LIKE ( CHIEF , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP TOLERATE ( NATALIE , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP HOPE ( ELIZABETH , NONE , NONE ) CCOMP TOLERATE ( KID , NONE , NONE ) CCOMP LAUGH ( BABY , NONE , NONE )"}
{"input": "Form one: Ethan hoped that a girl imagined that a boy appreciated that the student rolled .", "output": "HOPE ( ETHAN , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , STUDENT , NONE )"}
{"input": "Form one: Charlotte noticed that Emma wished that Stella liked that Elijah believed that a cat liked that Liam believed that Olivia confessed that a chief noticed that Ava believed that Joshua meant that Jackson proved that the girl liked that the hamburger was painted .", "output": "NOTICE ( CHARLOTTE , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( STELLA , NONE , NONE ) CCOMP BELIEVE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( CHIEF , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP MEAN ( JOSHUA , NONE , NONE ) CCOMP PROVE ( JACKSON , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PAINT ( NONE , HAMBURGER , NONE )"}
{"input": "Form one: A boy said that Olivia liked that a girl confessed that Isabella liked that the monkey liked that a baby imagined that a frog noticed that Luna hoped that the cake was helped .", "output": "SAY ( BOY , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP IMAGINE ( BABY , NONE , NONE ) CCOMP NOTICE ( FROG , NONE , NONE ) CCOMP HOPE ( LUNA , NONE , NONE ) CCOMP HELP ( NONE , CAKE , NONE )"}
{"input": "Form one: The cat liked that a teacher hoped that the chicken said that a baby said that Scarlett respected that Noah liked that a cow noticed that Ava meant that a butterfly hoped that Charlotte declared that Emma tolerated that the girl proved that Lily was given a rose in the house .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP SAY ( CHICKEN , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP RESPECT ( SCARLETT , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP NOTICE ( COW , NONE , NONE ) CCOMP MEAN ( AVA , NONE , NONE ) CCOMP HOPE ( BUTTERFLY , NONE , NONE ) CCOMP DECLARE ( CHARLOTTE , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP GIVE ( NONE , IN ( ROSE , HOUSE ) , LILY )"}
{"input": "Form one: Emma declared that Lucas liked that Gabriel respected that Benjamin liked that a baby believed that a wolf said that the girl hoped that the butterfly appreciated that the spokesman noticed that Liam liked that a dog hoped that Amelia hoped that a monkey shortened a needle .", "output": "DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP RESPECT ( GABRIEL , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP SAY ( WOLF , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( BUTTERFLY , NONE , NONE ) CCOMP NOTICE ( SPOKESMAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP HOPE ( AMELIA , NONE , NONE ) CCOMP SHORTEN ( MONKEY , NEEDLE , NONE )"}
{"input": "Form one: Emma tolerated that the doctor respected that Olivia thought that the boy hoped that the bear respected that Liam noticed that the mouse admired that a teacher thought that the donut was liked by a dog .", "output": "TOLERATE ( EMMA , NONE , NONE ) CCOMP RESPECT ( DOCTOR , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP RESPECT ( BEAR , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP ADMIRE ( MOUSE , NONE , NONE ) CCOMP THINK ( TEACHER , NONE , NONE ) CCOMP LIKE ( DOG , DONUT , NONE )"}
{"input": "Form one: Carter respected that a visitor thought that Emma appreciated that Aria liked that Joshua appreciated that Olivia respected that James declared that the dog admired that a baby hoped that a cat said that Ava liked that Grayson was fed a cake by Jacob .", "output": "RESPECT ( CARTER , NONE , NONE ) CCOMP THINK ( VISITOR , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP APPRECIATE ( JOSHUA , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( JAMES , NONE , NONE ) CCOMP ADMIRE ( DOG , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP FEED ( JACOB , CAKE , GRAYSON )"}
{"input": "Form one: Scarlett tolerated that the monster appreciated that Emma imagined that a dog imagined that the girl wished that a cat hoped that James confessed that Oliver hoped that a coach liked that a guitar was eaten .", "output": "TOLERATE ( SCARLETT , NONE , NONE ) CCOMP APPRECIATE ( MONSTER , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP IMAGINE ( DOG , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP CONFESS ( JAMES , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( COACH , NONE , NONE ) CCOMP EAT ( NONE , GUITAR , NONE )"}
{"input": "Form one: A kitty said that Emma dreamed that Elizabeth dreamed that a goose appreciated that Zoey liked that Ethan tolerated that Ava said that Liam said that a bag was cleaned by a prince .", "output": "SAY ( KITTY , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP DREAM ( ELIZABETH , NONE , NONE ) CCOMP APPRECIATE ( GOOSE , NONE , NONE ) CCOMP LIKE ( ZOEY , NONE , NONE ) CCOMP TOLERATE ( ETHAN , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP CLEAN ( PRINCE , BAG , NONE )"}
{"input": "Form one: The student liked that a mouse liked that a child said that the girl liked that Caleb appreciated that the boy hoped that Chloe supported that the cat said that Madison noticed that a leaf was cleaned .", "output": "LIKE ( STUDENT , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( CALEB , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP SUPPORT ( CHLOE , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP NOTICE ( MADISON , NONE , NONE ) CCOMP CLEAN ( NONE , LEAF , NONE )"}
{"input": "Form one: A girl tolerated that Benjamin said that the dog supported that Abigail liked that the bird hoped that Emma believed that a donkey hoped that a professor hoped that Olivia valued that Dylan dreamed that a giraffe rolled .", "output": "TOLERATE ( GIRL , NONE , NONE ) CCOMP SAY ( BENJAMIN , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP HOPE ( BIRD , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP HOPE ( PROFESSOR , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP DREAM ( DYLAN , NONE , NONE ) CCOMP ROLL ( NONE , GIRAFFE , NONE )"}
{"input": "Form one: Emma liked that Hannah proved that a cow liked that Luna imagined that the key was liked .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP PROVE ( HANNAH , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP IMAGINE ( LUNA , NONE , NONE ) CCOMP LIKE ( NONE , KEY , NONE )"}
{"input": "Form one: Emma liked that the dog hoped that a lion liked that the girl noticed that Ava hoped that Michael thought that the teacher hoped that Isaac dreamed that Aurora liked that Hannah held Olivia .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP THINK ( MICHAEL , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP DREAM ( ISAAC , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP HOLD ( HANNAH , OLIVIA , NONE )"}
{"input": "Form one: Olivia noticed that Henry thought that Liam tolerated that a cat liked that Elijah liked that Noah liked that the squirrel declared that a customer liked that a girl was given a hamburger beside the machine .", "output": "NOTICE ( OLIVIA , NONE , NONE ) CCOMP THINK ( HENRY , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DECLARE ( SQUIRREL , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( HAMBURGER , MACHINE ) , GIRL )"}
{"input": "Form one: Liam said that Mason meant that Matthew liked that a goose imagined that Oliver respected that the lion hoped that the teacher said that a pony hoped that the boy was lended a spoon in a room by Emma .", "output": "SAY ( LIAM , NONE , NONE ) CCOMP MEAN ( MASON , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP IMAGINE ( GOOSE , NONE , NONE ) CCOMP RESPECT ( OLIVER , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP HOPE ( PONY , NONE , NONE ) CCOMP LEND ( EMMA , IN ( SPOON , ROOM ) , BOY )"}
{"input": "Form one: Avery liked that the baby believed that William hoped that the pupil hoped that the manager supported that Michael imagined that Emma imagined that a girl was lended the cake beside the bush .", "output": "LIKE ( AVERY , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( PUPIL , NONE , NONE ) CCOMP SUPPORT ( MANAGER , NONE , NONE ) CCOMP IMAGINE ( MICHAEL , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( CAKE , BUSH ) , GIRL )"}
{"input": "Form one: The boy liked that Ella believed that Emma hoped that the baby liked that Victoria liked that a girl proved that a fly admired that William supported that Amelia liked that the radio was shortened by Matthew .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP BELIEVE ( ELLA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( FLY , NONE , NONE ) CCOMP SUPPORT ( WILLIAM , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP SHORTEN ( MATTHEW , RADIO , NONE )"}
{"input": "Form one: The girl liked that Liam thought that Penelope liked that a cat liked that a cake rolled .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Oliver hoped that a chicken appreciated that William noticed that a cat dreamed that a girl declared that the cake shortened .", "output": "HOPE ( OLIVER , NONE , NONE ) CCOMP APPRECIATE ( CHICKEN , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP DREAM ( CAT , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: The dog admired that Joseph liked that Mia meant that a chicken noticed that a girl liked that the judge liked that the raisin was adored by Noah .", "output": "ADMIRE ( DOG , NONE , NONE ) CCOMP LIKE ( JOSEPH , NONE , NONE ) CCOMP MEAN ( MIA , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( JUDGE , NONE , NONE ) CCOMP ADORE ( NOAH , RAISIN , NONE )"}
{"input": "Form one: A baby liked that a frog imagined that Jaxon declared that Liam hoped that the chicken was sold a cake in a jar .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP IMAGINE ( FROG , NONE , NONE ) CCOMP DECLARE ( JAXON , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SELL ( NONE , IN ( CAKE , JAR ) , CHICKEN )"}
{"input": "Form one: The baby tolerated that Elijah liked that the deer hoped that the bird liked that a cat noticed that Emma said that a customer tolerated that Aria liked that Liam expected that a dog was given a cake .", "output": "TOLERATE ( BABY , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP HOPE ( DEER , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP TOLERATE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP EXPECT ( LIAM , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , DOG )"}
{"input": "Form one: A boy liked that Liam liked that Isabella hoped that Mila liked that the sailor hoped that a servant believed that Emma liked that a chalk slid .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP BELIEVE ( SERVANT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SLIDE ( NONE , CHALK , NONE )"}
{"input": "Form one: Ava liked that Theodore liked that the girl expected that Elijah said that the dog dreamed that Avery confessed that the bear liked that a customer confessed that Noah liked that the box was eaten .", "output": "LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP SAY ( ELIJAH , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP CONFESS ( AVERY , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP CONFESS ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP EAT ( NONE , BOX , NONE )"}
{"input": "Form one: Olivia confessed that the girl noticed that Isabella liked that Liam hoped that Logan believed that Michael liked that Ava noticed that Emma said that the bottle decomposed .", "output": "CONFESS ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( LOGAN , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP DECOMPOSE ( NONE , BOTTLE , NONE )"}
{"input": "Form one: A child expected that the boy liked that the cat confessed that Evelyn liked that a student liked that Emma proved that Isabella expected that Mason liked that the tiger wished that the monster liked that a girl hoped that the rose crumpled .", "output": "EXPECT ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP EXPECT ( ISABELLA , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP WISH ( TIGER , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP CRUMPLE ( NONE , ROSE , NONE )"}
{"input": "Form one: Liam said that Ava confessed that a cat liked that the manager liked that a boy thought that the dog gave a chalk in the room to a girl .", "output": "SAY ( LIAM , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( MANAGER , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP GIVE ( DOG , IN ( CHALK , ROOM ) , GIRL )"}
{"input": "Form one: The queen thought that a dog liked that a bunny confessed that Liam hoped that Leah declared that the sailor proved that Olivia liked that Mia hoped that the hen respected that the mouse hoped that a cake was given to Nathan .", "output": "THINK ( QUEEN , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP CONFESS ( BUNNY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP DECLARE ( LEAH , NONE , NONE ) CCOMP PROVE ( SAILOR , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP RESPECT ( HEN , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , NATHAN )"}
{"input": "Form one: Grayson wished that Scarlett liked that Harper noticed that William believed that Emma liked that the girl noticed that a monster liked that a servant believed that a boy liked that Abigail liked that Jaxon liked that Charlotte liked that Ethan ate .", "output": "WISH ( GRAYSON , NONE , NONE ) CCOMP LIKE ( SCARLETT , NONE , NONE ) CCOMP NOTICE ( HARPER , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP BELIEVE ( SERVANT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( JAXON , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP EAT ( ETHAN , NONE , NONE )"}
{"input": "Form one: The monkey tolerated that a patient valued that the girl liked that Aubrey valued that a pupil declared that the lion confessed that a strawberry was rolled .", "output": "TOLERATE ( MONKEY , NONE , NONE ) CCOMP VALUE ( PATIENT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP VALUE ( AUBREY , NONE , NONE ) CCOMP DECLARE ( PUPIL , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP ROLL ( NONE , STRAWBERRY , NONE )"}
{"input": "Form one: Elizabeth liked that the girl hoped that Liam thought that a mouse said that a teacher liked that Isabella liked that Emma floated .", "output": "LIKE ( ELIZABETH , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP SAY ( MOUSE , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP FLOAT ( NONE , EMMA , NONE )"}
{"input": "Form one: A girl noticed that the cat confessed that Emma liked that the turkey proved that Liam imagined that Joshua liked that the frog liked that the melon froze .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP PROVE ( TURKEY , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP LIKE ( JOSHUA , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP FREEZE ( NONE , MELON , NONE )"}
{"input": "Form one: A lion appreciated that Liam meant that Alexander liked that the dog liked that the cat liked that a girl liked that a teacher respected that Emma confessed that Sophia slept .", "output": "APPRECIATE ( LION , NONE , NONE ) CCOMP MEAN ( LIAM , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP RESPECT ( TEACHER , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP SLEEP ( SOPHIA , NONE , NONE )"}
{"input": "Form one: Olivia liked that Logan liked that Ava liked that Emma liked that Jack cooked a rose in a parcel .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP COOK ( JACK , IN ( ROSE , PARCEL ) , NONE )"}
{"input": "Form one: A dog said that a bird supported that Noah declared that the boy noticed that a moose tolerated that a friend said that Elizabeth thought that Lillian liked that the girl declared that Henry hoped that Liam proved that the sandwich was slid .", "output": "SAY ( DOG , NONE , NONE ) CCOMP SUPPORT ( BIRD , NONE , NONE ) CCOMP DECLARE ( NOAH , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP TOLERATE ( MOOSE , NONE , NONE ) CCOMP SAY ( FRIEND , NONE , NONE ) CCOMP THINK ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP HOPE ( HENRY , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP SLIDE ( NONE , SANDWICH , NONE )"}
{"input": "Form one: Aria noticed that a turtle declared that Liam confessed that Noah hoped that Henry liked that Emma liked that the girl liked that Avery liked that Isabella respected that Joshua supported that the penguin liked that a professor valued that a friend ate .", "output": "NOTICE ( ARIA , NONE , NONE ) CCOMP DECLARE ( TURTLE , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( HENRY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP RESPECT ( ISABELLA , NONE , NONE ) CCOMP SUPPORT ( JOSHUA , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP VALUE ( PROFESSOR , NONE , NONE ) CCOMP EAT ( FRIEND , NONE , NONE )"}
{"input": "Form one: The girl declared that Emma liked that the horse confessed that a boy burned .", "output": "DECLARE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP CONFESS ( HORSE , NONE , NONE ) CCOMP BURN ( NONE , BOY , NONE )"}
{"input": "Form one: Victoria admired that Olivia said that Elijah believed that Isabella supported that Owen proved that Liam dreamed that a girl liked that Emma imagined that the lion appreciated that a visitor was rented the biscuit in a cabinet by Chloe .", "output": "ADMIRE ( VICTORIA , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( ELIJAH , NONE , NONE ) CCOMP SUPPORT ( ISABELLA , NONE , NONE ) CCOMP PROVE ( OWEN , NONE , NONE ) CCOMP DREAM ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( LION , NONE , NONE ) CCOMP RENT ( CHLOE , IN ( BISCUIT , CABINET ) , VISITOR )"}
{"input": "Form one: Ava said that the monkey wished that the writer expected that Noah hoped that Isabella noticed that Abigail liked that Benjamin said that Emma said that the baby liked that Evelyn hoped that a boy meant that Jackson said that the cake was brought to the girl by the president .", "output": "SAY ( AVA , NONE , NONE ) CCOMP WISH ( MONKEY , NONE , NONE ) CCOMP EXPECT ( WRITER , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP SAY ( BENJAMIN , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( EVELYN , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP SAY ( JACKSON , NONE , NONE ) CCOMP BRING ( PRESIDENT , CAKE , GIRL )"}
{"input": "Form one: A doctor noticed that the girl hoped that Audrey hoped that Daniel liked that the baby hoped that the goose hoped that a giraffe liked that Emma proved that a penguin hoped that the lion confessed that Ryan liked that a dog rolled .", "output": "NOTICE ( DOCTOR , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( AUDREY , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP HOPE ( GOOSE , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP HOPE ( PENGUIN , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP LIKE ( RYAN , NONE , NONE ) CCOMP ROLL ( NONE , DOG , NONE )"}
{"input": "Form one: Noah believed that the bird imagined that Ethan valued that Ava liked that the baby noticed that Benjamin declared that the horse expected that a boy liked that Emma said that Isabella confessed that a box floated .", "output": "BELIEVE ( NOAH , NONE , NONE ) CCOMP IMAGINE ( BIRD , NONE , NONE ) CCOMP VALUE ( ETHAN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP DECLARE ( BENJAMIN , NONE , NONE ) CCOMP EXPECT ( HORSE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP FLOAT ( NONE , BOX , NONE )"}
{"input": "Form one: Olivia liked that Liam liked that a frog expected that a guy liked that Lucas liked that the girl confessed that Logan meant that Alexander hoped that a cat decomposed .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP EXPECT ( FROG , NONE , NONE ) CCOMP LIKE ( GUY , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP MEAN ( LOGAN , NONE , NONE ) CCOMP HOPE ( ALEXANDER , NONE , NONE ) CCOMP DECOMPOSE ( NONE , CAT , NONE )"}
{"input": "Form one: Abigail liked that Elijah liked that the girl believed that Theodore liked that Benjamin supported that Ava liked that a dog respected that a governor hoped that the doll was enlarged by Mila .", "output": "LIKE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP SUPPORT ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP HOPE ( GOVERNOR , NONE , NONE ) CCOMP ENLARGE ( MILA , DOLL , NONE )"}
{"input": "Form one: A girl noticed that Sophia said that Liam liked that a donkey thought that the cookie slid .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP THINK ( DONKEY , NONE , NONE ) CCOMP SLIDE ( NONE , COOKIE , NONE )"}
{"input": "Form one: The cat imagined that a girl liked that William believed that a muffin was improved .", "output": "IMAGINE ( CAT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP IMPROVE ( NONE , MUFFIN , NONE )"}
{"input": "Form one: A dog noticed that a mouse proved that Ava expected that a girl believed that Amelia was mailed a donut .", "output": "NOTICE ( DOG , NONE , NONE ) CCOMP PROVE ( MOUSE , NONE , NONE ) CCOMP EXPECT ( AVA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP MAIL ( NONE , DONUT , AMELIA )"}
{"input": "Form one: Dylan imagined that a girl said that a mouse liked that Olivia liked that Noah liked that a horse dreamed that Isabella hoped that the boy noticed that Liam hoped that a cow hoped that Emma rolled .", "output": "IMAGINE ( DYLAN , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DREAM ( HORSE , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( COW , NONE , NONE ) CCOMP ROLL ( NONE , EMMA , NONE )"}
{"input": "Form one: The sailor wished that Liam liked that Emma liked that Noah declared that Joseph hoped that a giraffe liked that a dog supported that a book was sold to the princess by Daniel .", "output": "WISH ( SAILOR , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DECLARE ( NOAH , NONE , NONE ) CCOMP HOPE ( JOSEPH , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP SUPPORT ( DOG , NONE , NONE ) CCOMP SELL ( DANIEL , BOOK , PRINCESS )"}
{"input": "Form one: Olivia hoped that Emma liked that Liam proved that a priest liked that Ava gave Isabella a strawberry in the pool .", "output": "HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP LIKE ( PRIEST , NONE , NONE ) CCOMP GIVE ( AVA , IN ( STRAWBERRY , POOL ) , ISABELLA )"}
{"input": "Form one: Olivia liked that a girl liked that the lion noticed that Mason liked that Jackson thought that the horse said that Aiden hoped that the bear was given the cake by Emma .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( LION , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP THINK ( JACKSON , NONE , NONE ) CCOMP SAY ( HORSE , NONE , NONE ) CCOMP HOPE ( AIDEN , NONE , NONE ) CCOMP GIVE ( EMMA , CAKE , BEAR )"}
{"input": "Form one: Samuel respected that Lily noticed that Benjamin confessed that Jacob said that a lion liked that a girl said that Ava declared that the cat hoped that a book was admired by the horse .", "output": "RESPECT ( SAMUEL , NONE , NONE ) CCOMP NOTICE ( LILY , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP SAY ( JACOB , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP DECLARE ( AVA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP ADMIRE ( HORSE , BOOK , NONE )"}
{"input": "Form one: A princess liked that Dylan confessed that Liam tolerated that the girl said that a scarf was slipped to the crocodile .", "output": "LIKE ( PRINCESS , NONE , NONE ) CCOMP CONFESS ( DYLAN , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SLIP ( NONE , SCARF , CROCODILE )"}
{"input": "Form one: A chicken liked that the cat supported that the father believed that a boy thought that Noah meant that a mouse believed that Emma said that the cake rolled .", "output": "LIKE ( CHICKEN , NONE , NONE ) CCOMP SUPPORT ( CAT , NONE , NONE ) CCOMP BELIEVE ( FATHER , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP BELIEVE ( MOUSE , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Ava liked that the priest proved that Emma liked that a dealer noticed that Sophia appreciated that Isabella liked that Oliver liked that the boy frowned .", "output": "LIKE ( AVA , NONE , NONE ) CCOMP PROVE ( PRIEST , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( DEALER , NONE , NONE ) CCOMP APPRECIATE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP FROWN ( BOY , NONE , NONE )"}
{"input": "Form one: Ava hoped that a girl thought that a cat liked that Emma hoped that a fish liked that Olivia said that the cake froze .", "output": "HOPE ( AVA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: The girl admired that a cat said that the boy liked that Mason liked that Olivia believed that Lucas liked that the baby hoped that Henry hoped that David liked the cake beside the chair .", "output": "ADMIRE ( GIRL , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP HOPE ( HENRY , NONE , NONE ) CCOMP LIKE ( DAVID , BESIDE ( CAKE , CHAIR ) , NONE )"}
{"input": "Form one: Jackson liked that the giraffe admired that the hero wished that Liam meant that the teacher liked that the dog said that Joseph believed that Ava proved that Olivia tolerated that Emma hoped that Oliver found a mouse on the table .", "output": "LIKE ( JACKSON , NONE , NONE ) CCOMP ADMIRE ( GIRAFFE , NONE , NONE ) CCOMP WISH ( HERO , NONE , NONE ) CCOMP MEAN ( LIAM , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP BELIEVE ( JOSEPH , NONE , NONE ) CCOMP PROVE ( AVA , NONE , NONE ) CCOMP TOLERATE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP FIND ( OLIVER , ON ( MOUSE , TABLE ) , NONE )"}
{"input": "Form one: Olivia believed that the cat imagined that the donkey hoped that Jackson wished that Mason noticed that Jaxon liked that the girl liked that Avery liked that a squirrel confessed that a boy confessed that the bat was found .", "output": "BELIEVE ( OLIVIA , NONE , NONE ) CCOMP IMAGINE ( CAT , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP WISH ( JACKSON , NONE , NONE ) CCOMP NOTICE ( MASON , NONE , NONE ) CCOMP LIKE ( JAXON , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP CONFESS ( SQUIRREL , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP FIND ( NONE , BAT , NONE )"}
{"input": "Form one: Grace declared that Lucas liked that the child noticed that a frog thought that Liam rolled .", "output": "DECLARE ( GRACE , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP THINK ( FROG , NONE , NONE ) CCOMP ROLL ( NONE , LIAM , NONE )"}
{"input": "Form one: William hoped that the boy liked that Noah said that Emma liked that a girl liked that Liam hoped that Sebastian missed the cake .", "output": "HOPE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP MISS ( SEBASTIAN , CAKE , NONE )"}
{"input": "Form one: Emma liked that Ella liked that Liam respected that Oliver noticed that a girl imagined that Bella meant that Ava said that a hero was awarded the cake on the truck in the crib in the room .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ELLA , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP IMAGINE ( GIRL , NONE , NONE ) CCOMP MEAN ( BELLA , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP AWARD ( NONE , ON ( CAKE , IN ( TRUCK , IN ( CRIB , ROOM ) ) ) , HERO )"}
{"input": "Form one: Olivia supported that Charlotte hoped that the chicken liked that Emma hoped that the passenger liked that a donkey believed that Elijah hoped that the balloon was respected .", "output": "SUPPORT ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( PASSENGER , NONE , NONE ) CCOMP BELIEVE ( DONKEY , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP RESPECT ( NONE , BALLOON , NONE )"}
{"input": "Form one: Oliver thought that the boy liked that Lincoln noticed that the customer hoped that a wolf liked that James said that Ava tolerated that the teacher believed that the rose improved .", "output": "THINK ( OLIVER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP NOTICE ( LINCOLN , NONE , NONE ) CCOMP HOPE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP TOLERATE ( AVA , NONE , NONE ) CCOMP BELIEVE ( TEACHER , NONE , NONE ) CCOMP IMPROVE ( NONE , ROSE , NONE )"}
{"input": "Form one: The cat expected that Natalie hoped that Noah liked that Layla liked that Emma liked that Joseph liked that Liam was sold a cake in the bag .", "output": "EXPECT ( CAT , NONE , NONE ) CCOMP HOPE ( NATALIE , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( LAYLA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( JOSEPH , NONE , NONE ) CCOMP SELL ( NONE , IN ( CAKE , BAG ) , LIAM )"}
{"input": "Form one: The father said that Ava noticed that the baby liked that a king noticed that Evelyn confessed that a pig hoped that a champion declared that the scientist meant that a cake decomposed .", "output": "SAY ( FATHER , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP NOTICE ( KING , NONE , NONE ) CCOMP CONFESS ( EVELYN , NONE , NONE ) CCOMP HOPE ( PIG , NONE , NONE ) CCOMP DECLARE ( CHAMPION , NONE , NONE ) CCOMP MEAN ( SCIENTIST , NONE , NONE ) CCOMP DECOMPOSE ( NONE , CAKE , NONE )"}
{"input": "Form one: The baby respected that Lincoln declared that Liam meant that a boy liked that a princess dreamed that Isabella liked that Emma liked that a girl hoped that a cloud shortened .", "output": "RESPECT ( BABY , NONE , NONE ) CCOMP DECLARE ( LINCOLN , NONE , NONE ) CCOMP MEAN ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP DREAM ( PRINCESS , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SHORTEN ( NONE , CLOUD , NONE )"}
{"input": "Form one: The cat liked that a turkey thought that the lion said that Olivia liked that a duck thought that a governor liked that the monster valued that a girl believed that the chief said that Aiden said that the donkey liked that Lucas admired that the donut was rolled .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP THINK ( TURKEY , NONE , NONE ) CCOMP SAY ( LION , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP THINK ( DUCK , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP VALUE ( MONSTER , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP SAY ( CHIEF , NONE , NONE ) CCOMP SAY ( AIDEN , NONE , NONE ) CCOMP LIKE ( DONKEY , NONE , NONE ) CCOMP ADMIRE ( LUCAS , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: Sophia respected that the boy confessed that the deer liked that Mia liked that Liam supported that Emma proved that a child declared that the creature liked that Ava hoped that Luke hoped that William said that the baby burned the cake .", "output": "RESPECT ( SOPHIA , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP LIKE ( CREATURE , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP HOPE ( LUKE , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP BURN ( BABY , CAKE , NONE )"}
{"input": "Form one: The cat declared that Emma meant that Noah confessed that Wyatt wished that a chicken appreciated that Liam confessed that the princess declared that Elijah wished that Sophia proved that the girl gave a cake in the house to a monkey .", "output": "DECLARE ( CAT , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP WISH ( WYATT , NONE , NONE ) CCOMP APPRECIATE ( CHICKEN , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP DECLARE ( PRINCESS , NONE , NONE ) CCOMP WISH ( ELIJAH , NONE , NONE ) CCOMP PROVE ( SOPHIA , NONE , NONE ) CCOMP GIVE ( GIRL , IN ( CAKE , HOUSE ) , MONKEY )"}
{"input": "Form one: The boy hoped that the zebra respected that Henry declared that the kitty said that a girl hoped that the dog hoped that Ava respected that Isabella liked that a bunny liked that a sailor liked that Emma noticed that a sandwich froze .", "output": "HOPE ( BOY , NONE , NONE ) CCOMP RESPECT ( ZEBRA , NONE , NONE ) CCOMP DECLARE ( HENRY , NONE , NONE ) CCOMP SAY ( KITTY , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP RESPECT ( AVA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP FREEZE ( NONE , SANDWICH , NONE )"}
{"input": "Form one: Liam liked that the girl liked that a boy liked that Mason liked that a mother admired that a consumer lended the block beside the table to the teacher .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP ADMIRE ( MOTHER , NONE , NONE ) CCOMP LEND ( CONSUMER , BESIDE ( BLOCK , TABLE ) , TEACHER )"}
{"input": "Form one: A cat liked that Emma noticed that the mother liked that the horse thought that the host ate the girl beside a bench on a yacht .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( MOTHER , NONE , NONE ) CCOMP THINK ( HORSE , NONE , NONE ) CCOMP EAT ( HOST , BESIDE ( GIRL , ON ( BENCH , YACHT ) ) , NONE )"}
{"input": "Form one: The horse proved that the boy liked that Ava liked that Emma wished that Noah noticed that Liam hoped that John hoped that the cookie was handed to a girl .", "output": "PROVE ( HORSE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( JOHN , NONE , NONE ) CCOMP HAND ( NONE , COOKIE , GIRL )"}
{"input": "Form one: Noah said that Joseph liked that Liam respected that the teacher declared that Sofia admired that Harper declared that a driver meant that Emma declared that Violet liked that the cat crumpled .", "output": "SAY ( NOAH , NONE , NONE ) CCOMP LIKE ( JOSEPH , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP DECLARE ( TEACHER , NONE , NONE ) CCOMP ADMIRE ( SOFIA , NONE , NONE ) CCOMP DECLARE ( HARPER , NONE , NONE ) CCOMP MEAN ( DRIVER , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( VIOLET , NONE , NONE ) CCOMP CRUMPLE ( NONE , CAT , NONE )"}
{"input": "Form one: Liam declared that Olivia confessed that Jack liked that a girl liked that the cat liked that a teacher confessed that Aurora liked that William appreciated that the mouse liked that the fly hoped that a dog dreamed that Noah improved .", "output": "DECLARE ( LIAM , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP LIKE ( JACK , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP APPRECIATE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP HOPE ( FLY , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP IMPROVE ( NONE , NOAH , NONE )"}
{"input": "Form one: The penguin liked that a guy liked that the fish liked that a girl hoped that Noah hoped that the tourist supported that Oliver noticed that Elizabeth supported that Emma rolled .", "output": "LIKE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( GUY , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP SUPPORT ( TOURIST , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP SUPPORT ( ELIZABETH , NONE , NONE ) CCOMP ROLL ( NONE , EMMA , NONE )"}
{"input": "Form one: A girl liked that Elijah said that Liam noticed that Emma liked that a bird liked that Oliver hoped that the lion dreamed that the chicken liked that a cake crumpled .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( ELIJAH , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP DREAM ( LION , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP CRUMPLE ( NONE , CAKE , NONE )"}
{"input": "Form one: Harper expected that Olivia supported that Emma liked that Lillian noticed that Claire noticed that a boy believed that a hero noticed that Liam said that the dog was lended the melon by the child .", "output": "EXPECT ( HARPER , NONE , NONE ) CCOMP SUPPORT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( LILLIAN , NONE , NONE ) CCOMP NOTICE ( CLAIRE , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP NOTICE ( HERO , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LEND ( CHILD , MELON , DOG )"}
{"input": "Form one: A baby liked that the child respected that Harper declared that Penelope hoped that the girl declared that Olivia meant that the student thought that a poet liked that a boy liked that a cat snapped .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP RESPECT ( CHILD , NONE , NONE ) CCOMP DECLARE ( HARPER , NONE , NONE ) CCOMP HOPE ( PENELOPE , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP MEAN ( OLIVIA , NONE , NONE ) CCOMP THINK ( STUDENT , NONE , NONE ) CCOMP LIKE ( POET , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SNAP ( NONE , CAT , NONE )"}
{"input": "Form one: Emma liked that a boy believed that a girl said that the child liked that the scientist threw a dog beside the stool .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP THROW ( SCIENTIST , BESIDE ( DOG , STOOL ) , NONE )"}
{"input": "Form one: Grayson hoped that the sailor respected that a crocodile believed that the customer liked that a cat was posted a sandwich by Noah .", "output": "HOPE ( GRAYSON , NONE , NONE ) CCOMP RESPECT ( SAILOR , NONE , NONE ) CCOMP BELIEVE ( CROCODILE , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP POST ( NOAH , SANDWICH , CAT )"}
{"input": "Form one: James hoped that Sophia liked that the boy noticed that a cake rolled .", "output": "HOPE ( JAMES , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Noah hoped that the chicken valued that a passenger liked that Oliver liked that Liam confessed that the bee was sold a cake in the house .", "output": "HOPE ( NOAH , NONE , NONE ) CCOMP VALUE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( PASSENGER , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP SELL ( NONE , IN ( CAKE , HOUSE ) , BEE )"}
{"input": "Form one: The teacher dreamed that Isabella confessed that Emma liked that a cat appreciated that a girl appreciated that a bird liked that Hannah wished that Ava liked that Liam noticed that a child liked that Mila liked that the cow imagined that Daniel burned .", "output": "DREAM ( TEACHER , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP WISH ( HANNAH , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP IMAGINE ( COW , NONE , NONE ) CCOMP BURN ( NONE , DANIEL , NONE )"}
{"input": "Form one: Emma liked that Sophia liked that William noticed that the girl appreciated that Charlotte meant that Ava liked that Olivia proved that the chicken liked that Daniel liked that a fig broke .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP MEAN ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP PROVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP BREAK ( NONE , FIG , NONE )"}
{"input": "Form one: The girl hoped that Abigail hoped that Sophia valued that the boy saw the box on the bed .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( ABIGAIL , NONE , NONE ) CCOMP VALUE ( SOPHIA , NONE , NONE ) CCOMP SEE ( BOY , ON ( BOX , BED ) , NONE )"}
{"input": "Form one: A girl hoped that Emma imagined that Abigail liked that the bear believed that a moose declared that a cat liked that Evelyn proved that Ellie appreciated that Liam liked that a priest hoped that the cake was valued .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP BELIEVE ( BEAR , NONE , NONE ) CCOMP DECLARE ( MOOSE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP PROVE ( EVELYN , NONE , NONE ) CCOMP APPRECIATE ( ELLIE , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( PRIEST , NONE , NONE ) CCOMP VALUE ( NONE , CAKE , NONE )"}
{"input": "Form one: A bunny expected that Isabella liked that Layla proved that Olivia believed that Ava declared that Zoey thought that the boy hoped that a visitor hoped that William proved that the girl liked that Liam liked that the teacher supported that a lion smiled .", "output": "EXPECT ( BUNNY , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP PROVE ( LAYLA , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( AVA , NONE , NONE ) CCOMP THINK ( ZOEY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( VISITOR , NONE , NONE ) CCOMP PROVE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( TEACHER , NONE , NONE ) CCOMP SMILE ( LION , NONE , NONE )"}
{"input": "Form one: A governor dreamed that the cat liked that Sofia hoped that Emma believed that Liam danced .", "output": "DREAM ( GOVERNOR , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( SOFIA , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP DANCE ( LIAM , NONE , NONE )"}
{"input": "Form one: David thought that the horse hoped that Camila thought that the baby believed that Emily imagined that Ethan believed that a customer hoped that Mila liked that Evelyn liked that a scientist hoped that Emma said that John was fed the drink .", "output": "THINK ( DAVID , NONE , NONE ) CCOMP HOPE ( HORSE , NONE , NONE ) CCOMP THINK ( CAMILA , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP IMAGINE ( EMILY , NONE , NONE ) CCOMP BELIEVE ( ETHAN , NONE , NONE ) CCOMP HOPE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP HOPE ( SCIENTIST , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP FEED ( NONE , DRINK , JOHN )"}
{"input": "Form one: The cat confessed that Olivia noticed that Hazel declared that James noticed that Emma broke .", "output": "CONFESS ( CAT , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( HAZEL , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP BREAK ( NONE , EMMA , NONE )"}
{"input": "Form one: Liam hoped that Lincoln liked that Charlotte meant that Olivia froze .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( LINCOLN , NONE , NONE ) CCOMP MEAN ( CHARLOTTE , NONE , NONE ) CCOMP FREEZE ( NONE , OLIVIA , NONE )"}
{"input": "Form one: A child said that the dog noticed that Mason hoped that the baby hoped that a cat liked that Emma liked that a giraffe floated .", "output": "SAY ( CHILD , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP FLOAT ( NONE , GIRAFFE , NONE )"}
{"input": "Form one: Noah appreciated that William imagined that Emma liked that a customer admired that Asher thought that Owen liked that Olivia was offered the sandwich beside the stage .", "output": "APPRECIATE ( NOAH , NONE , NONE ) CCOMP IMAGINE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( CUSTOMER , NONE , NONE ) CCOMP THINK ( ASHER , NONE , NONE ) CCOMP LIKE ( OWEN , NONE , NONE ) CCOMP OFFER ( NONE , BESIDE ( SANDWICH , STAGE ) , OLIVIA )"}
{"input": "Form one: Liam liked that Oliver wished that the baby confessed that the cat liked that the captain valued that the dog liked that a girl respected that Olivia liked that Chloe liked that Ava hoped that a student rolled .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP WISH ( OLIVER , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP VALUE ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CHLOE , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP ROLL ( NONE , STUDENT , NONE )"}
{"input": "Form one: A baby liked that Brooklyn liked that Jacob tolerated that Thomas meant that Lily said that a prisoner liked that the deer thought that the farmer ate the drink .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( BROOKLYN , NONE , NONE ) CCOMP TOLERATE ( JACOB , NONE , NONE ) CCOMP MEAN ( THOMAS , NONE , NONE ) CCOMP SAY ( LILY , NONE , NONE ) CCOMP LIKE ( PRISONER , NONE , NONE ) CCOMP THINK ( DEER , NONE , NONE ) CCOMP EAT ( FARMER , DRINK , NONE )"}
{"input": "Form one: A frog liked that Avery liked that Jacob declared that Emma proved that Noah dreamed that Carter hoped that a turkey noticed that the girl liked that the teacher liked that Liam liked that Ava believed that Alexander liked that a donut was eaten by the monkey .", "output": "LIKE ( FROG , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP DECLARE ( JACOB , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP DREAM ( NOAH , NONE , NONE ) CCOMP HOPE ( CARTER , NONE , NONE ) CCOMP NOTICE ( TURKEY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP EAT ( MONKEY , DONUT , NONE )"}
{"input": "Form one: Aria liked that Mia liked that Abigail declared that the director supported that Emma dreamed that Olivia liked the cookie beside a broker .", "output": "LIKE ( ARIA , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP DECLARE ( ABIGAIL , NONE , NONE ) CCOMP SUPPORT ( DIRECTOR , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , BESIDE ( COOKIE , BROKER ) , NONE )"}
{"input": "Form one: The girl expected that the king appreciated that Julian hoped that Olivia liked that Liam believed that the chicken hoped that a wine was called .", "output": "EXPECT ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( KING , NONE , NONE ) CCOMP HOPE ( JULIAN , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP CALL ( NONE , WINE , NONE )"}
{"input": "Form one: Olivia liked that Zoe confessed that a girl believed that a mother wished that Emma expected that a boy liked that Addison liked that the citizen proved that Sophia said that a professor liked that Nora was given a cake .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( ZOE , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP WISH ( MOTHER , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( ADDISON , NONE , NONE ) CCOMP PROVE ( CITIZEN , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , NORA )"}
{"input": "Form one: Leo said that the kitty tolerated that the lawyer liked that a melon was collapsed .", "output": "SAY ( LEO , NONE , NONE ) CCOMP TOLERATE ( KITTY , NONE , NONE ) CCOMP LIKE ( LAWYER , NONE , NONE ) CCOMP COLLAPSE ( NONE , MELON , NONE )"}
{"input": "Form one: A mother liked that a patient believed that a girl said that William admired that the cookie rolled .", "output": "LIKE ( MOTHER , NONE , NONE ) CCOMP BELIEVE ( PATIENT , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP ADMIRE ( WILLIAM , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: Gabriel hoped that Liam said that Ava noticed that a teacher hoped that Oliver liked that the girl liked that a cake inflated .", "output": "HOPE ( GABRIEL , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP INFLATE ( NONE , CAKE , NONE )"}
{"input": "Form one: Noah liked that James liked that a wolf hoped that a horse liked that the hen was wired the sandwich .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP HOPE ( WOLF , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP WIRE ( NONE , SANDWICH , HEN )"}
{"input": "Form one: William noticed that a frog liked that a baby proved that the boy gave Olivia the button .", "output": "NOTICE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP PROVE ( BABY , NONE , NONE ) CCOMP GIVE ( BOY , BUTTON , OLIVIA )"}
{"input": "Form one: Isabella liked that a horse liked that Liam liked that Gabriel declared that the boy thought that Olivia split .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DECLARE ( GABRIEL , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP SPLIT ( NONE , OLIVIA , NONE )"}
{"input": "Form one: The chief liked that the frog valued that the boy meant that Addison said that Noah admired that the mouse hoped that a monster hoped that a kitty hoped that Emma hoped that Olivia expected that a girl liked that a cake was shortened .", "output": "LIKE ( CHIEF , NONE , NONE ) CCOMP VALUE ( FROG , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP SAY ( ADDISON , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP HOPE ( MONSTER , NONE , NONE ) CCOMP HOPE ( KITTY , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: A child liked that Ava liked that Olivia expected that the pony confessed that the girl appreciated that the director appreciated that Noah liked that the judge thought that the cat liked that James liked that David hoped that a ball was liked .", "output": "LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( PONY , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP THINK ( JUDGE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP HOPE ( DAVID , NONE , NONE ) CCOMP LIKE ( NONE , BALL , NONE )"}
{"input": "Form one: Liam admired that Noah liked that the boy liked that Jacob liked that the chicken liked that a moose thought that Ava declared that the box was eaten by the lion .", "output": "ADMIRE ( LIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP THINK ( MOOSE , NONE , NONE ) CCOMP DECLARE ( AVA , NONE , NONE ) CCOMP EAT ( LION , BOX , NONE )"}
{"input": "Form one: The girl wished that Savannah dreamed that the chicken liked that Sofia appreciated that the lion liked that Camila proved that Olivia appreciated that Ava proved that a monkey liked that Emma liked that the cake was disintegrated by a king .", "output": "WISH ( GIRL , NONE , NONE ) CCOMP DREAM ( SAVANNAH , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP APPRECIATE ( SOFIA , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP PROVE ( CAMILA , NONE , NONE ) CCOMP APPRECIATE ( OLIVIA , NONE , NONE ) CCOMP PROVE ( AVA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DISINTEGRATE ( KING , CAKE , NONE )"}
{"input": "Form one: Daniel proved that Emma declared that Olivia liked that Noah confessed that James said that Nora imagined that the boy liked that the landlord liked that a giraffe liked that a monkey meant that a baby declared that the girl danced .", "output": "PROVE ( DANIEL , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP IMAGINE ( NORA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LANDLORD , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP MEAN ( MONKEY , NONE , NONE ) CCOMP DECLARE ( BABY , NONE , NONE ) CCOMP DANCE ( GIRL , NONE , NONE )"}
{"input": "Form one: A boy valued that the fish liked that a cat believed that the baby liked that Lily hoped that Noah was lended a cake by a child .", "output": "VALUE ( BOY , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( LILY , NONE , NONE ) CCOMP LEND ( CHILD , CAKE , NOAH )"}
{"input": "Form one: Liam liked that Mason meant that Emma liked that James poked Sofia .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP MEAN ( MASON , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP POKE ( JAMES , SOFIA , NONE )"}
{"input": "Form one: The baby liked that Emma supported that Owen liked that the mouse was given the leaf by Oliver .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( OWEN , NONE , NONE ) CCOMP GIVE ( OLIVER , LEAF , MOUSE )"}
{"input": "Form one: The girl liked that Ava hoped that the goose liked that Noah supported that a boy liked that Benjamin hoped that Emma ate the baby .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LIKE ( GOOSE , NONE , NONE ) CCOMP SUPPORT ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( BENJAMIN , NONE , NONE ) CCOMP EAT ( EMMA , BABY , NONE )"}
{"input": "Form one: The teacher respected that the customer liked that the frog liked that the girl valued that Emma thought that a boy split .", "output": "RESPECT ( TEACHER , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP SPLIT ( NONE , BOY , NONE )"}
{"input": "Form one: Alexander liked that a girl liked that Ava supported that a donkey hoped that a baby confessed that Eleanor liked that Carter liked that Daniel dreamed that Evelyn tolerated that a boy liked that Liam liked that Aurora expected that Olivia fed the pretzel to Emma .", "output": "LIKE ( ALEXANDER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( AVA , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP LIKE ( ELEANOR , NONE , NONE ) CCOMP LIKE ( CARTER , NONE , NONE ) CCOMP DREAM ( DANIEL , NONE , NONE ) CCOMP TOLERATE ( EVELYN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP EXPECT ( AURORA , NONE , NONE ) CCOMP FEED ( OLIVIA , PRETZEL , EMMA )"}
{"input": "Form one: A frog hoped that a boy hoped that the girl thought that the monster confessed that Jackson meant that Abigail imagined that Oliver hoped that Olivia liked that Emma liked that Madison noticed that Asher liked that Liam liked that Sofia laughed .", "output": "HOPE ( FROG , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP CONFESS ( MONSTER , NONE , NONE ) CCOMP MEAN ( JACKSON , NONE , NONE ) CCOMP IMAGINE ( ABIGAIL , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( MADISON , NONE , NONE ) CCOMP LIKE ( ASHER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LAUGH ( SOFIA , NONE , NONE )"}
{"input": "Form one: The monkey said that the girl valued that a boy hoped that a cookie grew .", "output": "SAY ( MONKEY , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP GROW ( NONE , COOKIE , NONE )"}
{"input": "Form one: Olivia wished that a boy imagined that Sebastian liked that the frog noticed that the pig liked that Noah wished that Asher supported that a girl admired that the fish proved that Emma liked that William liked that a book crumpled .", "output": "WISH ( OLIVIA , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP LIKE ( SEBASTIAN , NONE , NONE ) CCOMP NOTICE ( FROG , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP WISH ( NOAH , NONE , NONE ) CCOMP SUPPORT ( ASHER , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP PROVE ( FISH , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP CRUMPLE ( NONE , BOOK , NONE )"}
{"input": "Form one: A patient hoped that the politician tolerated that Mila liked that a girl liked that Isabella declared that Emma declared that a kitty liked that the boy liked that Jackson confessed that the cookie rolled .", "output": "HOPE ( PATIENT , NONE , NONE ) CCOMP TOLERATE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( JACKSON , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: Sophia liked that a pupil liked that Elizabeth declared that Logan noticed that a puppy lended a melon to a goose .", "output": "LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( PUPIL , NONE , NONE ) CCOMP DECLARE ( ELIZABETH , NONE , NONE ) CCOMP NOTICE ( LOGAN , NONE , NONE ) CCOMP LEND ( PUPPY , MELON , GOOSE )"}
{"input": "Form one: Lucas valued that the doctor hoped that Benjamin appreciated that a girl declared that the queen proved that the monster thought that a cat supported that a moose believed that Sophia imagined that Olivia hoped that John liked that Emma confessed that the donut crumpled .", "output": "VALUE ( LUCAS , NONE , NONE ) CCOMP HOPE ( DOCTOR , NONE , NONE ) CCOMP APPRECIATE ( BENJAMIN , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP PROVE ( QUEEN , NONE , NONE ) CCOMP THINK ( MONSTER , NONE , NONE ) CCOMP SUPPORT ( CAT , NONE , NONE ) CCOMP BELIEVE ( MOOSE , NONE , NONE ) CCOMP IMAGINE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( JOHN , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP CRUMPLE ( NONE , DONUT , NONE )"}
{"input": "Form one: Emma admired that the mouse liked that the cat liked that Charlotte said that the pony liked that a boy liked that Logan wished that Olivia meant that a chicken was given the cookie .", "output": "ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SAY ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( PONY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP WISH ( LOGAN , NONE , NONE ) CCOMP MEAN ( OLIVIA , NONE , NONE ) CCOMP GIVE ( NONE , COOKIE , CHICKEN )"}
{"input": "Form one: A girl noticed that James said that Evelyn admired that Victoria liked that the boy liked that a pony appreciated that Olivia shortened .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP ADMIRE ( EVELYN , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP APPRECIATE ( PONY , NONE , NONE ) CCOMP SHORTEN ( NONE , OLIVIA , NONE )"}
{"input": "Form one: John liked that the girl said that Mia imagined that the moose declared that the guest declared that the cookie froze .", "output": "LIKE ( JOHN , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP IMAGINE ( MIA , NONE , NONE ) CCOMP DECLARE ( MOOSE , NONE , NONE ) CCOMP DECLARE ( GUEST , NONE , NONE ) CCOMP FREEZE ( NONE , COOKIE , NONE )"}
{"input": "Form one: Liam noticed that the girl said that a boy valued that Logan meant that the kitty liked that the cake broke .", "output": "NOTICE ( LIAM , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP VALUE ( BOY , NONE , NONE ) CCOMP MEAN ( LOGAN , NONE , NONE ) CCOMP LIKE ( KITTY , NONE , NONE ) CCOMP BREAK ( NONE , CAKE , NONE )"}
{"input": "Form one: The dog liked that James said that the kitty said that a giraffe hoped that Lillian liked that Liam liked that Emma liked that Logan liked that the bunny was given a block .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP SAY ( KITTY , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP GIVE ( NONE , BLOCK , BUNNY )"}
{"input": "Form one: Ava admired that the bear believed that Benjamin liked that Noah hoped that the girl proved that the dog liked that a cat admired that Liam liked that the rose was dusted .", "output": "ADMIRE ( AVA , NONE , NONE ) CCOMP BELIEVE ( BEAR , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DUST ( NONE , ROSE , NONE )"}
{"input": "Form one: Liam noticed that Sofia hoped that Emma declared that the giraffe believed that a crocodile confessed that a teacher offered a professor the ball on a ladder .", "output": "NOTICE ( LIAM , NONE , NONE ) CCOMP HOPE ( SOFIA , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( GIRAFFE , NONE , NONE ) CCOMP CONFESS ( CROCODILE , NONE , NONE ) CCOMP OFFER ( TEACHER , ON ( BALL , LADDER ) , PROFESSOR )"}
{"input": "Form one: The boy liked that a dog said that the frog believed that Olivia wanted to sleep .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP BELIEVE ( FROG , NONE , NONE ) CCOMP WANT ( OLIVIA , NONE , NONE ) XCOMP SLEEP ( OLIVIA , NONE , NONE )"}
{"input": "Form one: Noah noticed that the horse believed that a chicken liked that the boy said that the captain liked that Daniel liked that the donut rolled .", "output": "NOTICE ( NOAH , NONE , NONE ) CCOMP BELIEVE ( HORSE , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: Jackson admired that a baby proved that Elijah noticed that a girl wished that the bird liked that a dog liked that Noah expected that Isabella liked that the duck thought that the tenant respected that Emma declared that Sophia hoped that a boy was given a cake in the house .", "output": "ADMIRE ( JACKSON , NONE , NONE ) CCOMP PROVE ( BABY , NONE , NONE ) CCOMP NOTICE ( ELIJAH , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP EXPECT ( NOAH , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP THINK ( DUCK , NONE , NONE ) CCOMP RESPECT ( TENANT , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP GIVE ( NONE , IN ( CAKE , HOUSE ) , BOY )"}
{"input": "Form one: A girl confessed that Emma liked that Liam hoped that Penelope liked that Christopher tolerated that Oliver said that Noah was sent a cookie by Olivia .", "output": "CONFESS ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP TOLERATE ( CHRISTOPHER , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP SEND ( OLIVIA , COOKIE , NOAH )"}
{"input": "Form one: The hero liked that the dog liked that Isabella confessed that a girl meant that Ava said that Emma thought that Olivia hoped that the cat liked that a mouse liked that a donut split .", "output": "LIKE ( HERO , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP SPLIT ( NONE , DONUT , NONE )"}
{"input": "Form one: Mila admired that the scientist valued that Liam confessed that Camila appreciated that Andrew hoped that a penguin hoped that the girl liked that a dog proved that the frog liked that Amelia helped the giraffe on a cake .", "output": "ADMIRE ( MILA , NONE , NONE ) CCOMP VALUE ( SCIENTIST , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( CAMILA , NONE , NONE ) CCOMP HOPE ( ANDREW , NONE , NONE ) CCOMP HOPE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP HELP ( AMELIA , ON ( GIRAFFE , CAKE ) , NONE )"}
{"input": "Form one: Liam liked that Oliver liked that Leah said that the girl said that the mouse hoped that Elijah imagined that a frog liked that Charlotte meant that Isabella said that Emma appreciated that Olivia hoped that a boy noticed that a lion ate .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP SAY ( LEAH , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP IMAGINE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP MEAN ( CHARLOTTE , NONE , NONE ) CCOMP SAY ( ISABELLA , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP EAT ( LION , NONE , NONE )"}
{"input": "Form one: Mila appreciated that a chicken noticed that the human liked that Emma was given the cake on a bed by the girl .", "output": "APPRECIATE ( MILA , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( HUMAN , NONE , NONE ) CCOMP GIVE ( GIRL , ON ( CAKE , BED ) , EMMA )"}
{"input": "Form one: The researcher liked that a bird liked that the monkey said that Oliver hoped that Ethan was given a cookie by Aria .", "output": "LIKE ( RESEARCHER , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP GIVE ( ARIA , COOKIE , ETHAN )"}
{"input": "Form one: Mia liked that Isabella liked that a mouse liked that Noah liked that the girl liked that a boy was brought a donut .", "output": "LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BRING ( NONE , DONUT , BOY )"}
{"input": "Form one: Evelyn noticed that a frog respected that a boy imagined that Jayden liked that Emma liked that William liked that Noah hoped that a girl liked that Liam declared that Oliver liked that a princess tolerated that the cat was given a cake by Avery .", "output": "NOTICE ( EVELYN , NONE , NONE ) CCOMP RESPECT ( FROG , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP LIKE ( JAYDEN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP TOLERATE ( PRINCESS , NONE , NONE ) CCOMP GIVE ( AVERY , CAKE , CAT )"}
{"input": "Form one: A girl noticed that Elizabeth said that the monster liked that a butterfly believed that the sheep liked that the driver respected that Noah hoped that the manager liked that Mia hoped that the producer said that Layla returned the dealer the ring .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP SAY ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP BELIEVE ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( SHEEP , NONE , NONE ) CCOMP RESPECT ( DRIVER , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( MANAGER , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP SAY ( PRODUCER , NONE , NONE ) CCOMP RETURN ( LAYLA , RING , DEALER )"}
{"input": "Form one: James liked that a teacher confessed that the spokesman appreciated that Emma dreamed that the girl liked that the cake was eaten .", "output": "LIKE ( JAMES , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP APPRECIATE ( SPOKESMAN , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP EAT ( NONE , CAKE , NONE )"}
{"input": "Form one: The wolf liked that the producer supported that James hoped that Liam liked that Emma liked that the girl liked that Mia liked that Ava liked that the cake broke .", "output": "LIKE ( WOLF , NONE , NONE ) CCOMP SUPPORT ( PRODUCER , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP BREAK ( NONE , CAKE , NONE )"}
{"input": "Form one: Olivia liked that a girl liked that Noah liked that Liam tolerated that Emma liked that a prince hoped that the towel was helped by the chicken .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( PRINCE , NONE , NONE ) CCOMP HELP ( CHICKEN , TOWEL , NONE )"}
{"input": "Form one: The girl respected that Samuel liked that the tiger said that Noah supported that Oliver proved that the fish liked that Amelia was given a bat on the cabinet by Liam .", "output": "RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( SAMUEL , NONE , NONE ) CCOMP SAY ( TIGER , NONE , NONE ) CCOMP SUPPORT ( NOAH , NONE , NONE ) CCOMP PROVE ( OLIVER , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP GIVE ( LIAM , ON ( BAT , CABINET ) , AMELIA )"}
{"input": "Form one: The dog liked that Daniel believed that the servant said that Logan liked that a giraffe liked that William hoped that a turkey liked that a cow liked that Emma hoped that the cake was found .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP BELIEVE ( DANIEL , NONE , NONE ) CCOMP SAY ( SERVANT , NONE , NONE ) CCOMP LIKE ( LOGAN , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( TURKEY , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP FIND ( NONE , CAKE , NONE )"}
{"input": "Form one: A child liked that Thomas appreciated that a professor meant that Noah hoped that William liked that the student hoped that Olivia liked that the judge froze .", "output": "LIKE ( CHILD , NONE , NONE ) CCOMP APPRECIATE ( THOMAS , NONE , NONE ) CCOMP MEAN ( PROFESSOR , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( STUDENT , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP FREEZE ( NONE , JUDGE , NONE )"}
{"input": "Form one: Isabella declared that Theodore hoped that the penguin confessed that a girl liked that Liam proved that Amelia hoped that Benjamin liked that Wyatt was offered the cake on a TV .", "output": "DECLARE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( THEODORE , NONE , NONE ) CCOMP CONFESS ( PENGUIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP HOPE ( AMELIA , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP OFFER ( NONE , ON ( CAKE , TV ) , WYATT )"}
{"input": "Form one: A bear liked that the farmer confessed that a baby noticed that Alexander liked that Sophia was wired a pen .", "output": "LIKE ( BEAR , NONE , NONE ) CCOMP CONFESS ( FARMER , NONE , NONE ) CCOMP NOTICE ( BABY , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP WIRE ( NONE , PEN , SOPHIA )"}
{"input": "Form one: Anthony hoped that Liam liked that Emma liked that a boy liked that the cat was posted a cake .", "output": "HOPE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP POST ( NONE , CAKE , CAT )"}
{"input": "Form one: Emma said that Lily declared that Ella declared that Liam liked that a dealer appreciated that the boy was lended the donut beside the table .", "output": "SAY ( EMMA , NONE , NONE ) CCOMP DECLARE ( LILY , NONE , NONE ) CCOMP DECLARE ( ELLA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( DEALER , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( DONUT , TABLE ) , BOY )"}
{"input": "Form one: A boy liked that a fly dreamed that the baby supported that Liam respected that a monkey thought that the cat hoped that a girl supported that Logan snapped .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP DREAM ( FLY , NONE , NONE ) CCOMP SUPPORT ( BABY , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP THINK ( MONKEY , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP SNAP ( NONE , LOGAN , NONE )"}
{"input": "Form one: A dog confessed that a child said that James said that Victoria hoped that the goose expected that the guard declared that the puppy valued that Benjamin valued that Liam said that the boy believed that a girl noticed that Olivia changed Emma .", "output": "CONFESS ( DOG , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP HOPE ( VICTORIA , NONE , NONE ) CCOMP EXPECT ( GOOSE , NONE , NONE ) CCOMP DECLARE ( GUARD , NONE , NONE ) CCOMP VALUE ( PUPPY , NONE , NONE ) CCOMP VALUE ( BENJAMIN , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP CHANGE ( OLIVIA , EMMA , NONE )"}
{"input": "Form one: Audrey noticed that a lion noticed that the bunny hoped that Emma wished that the friend liked that Daniel appreciated that Olivia liked that a baby believed that the cat meant that a boy tolerated that Liam tolerated that a gumball rolled .", "output": "NOTICE ( AUDREY , NONE , NONE ) CCOMP NOTICE ( LION , NONE , NONE ) CCOMP HOPE ( BUNNY , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP LIKE ( FRIEND , NONE , NONE ) CCOMP APPRECIATE ( DANIEL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP TOLERATE ( BOY , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP ROLL ( NONE , GUMBALL , NONE )"}
{"input": "Form one: The girl said that Emma declared that Sophia tolerated that the game was admired by Liam .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( SOPHIA , NONE , NONE ) CCOMP ADMIRE ( LIAM , GAME , NONE )"}
{"input": "Form one: Noah dreamed that a girl hoped that the judge noticed that Olivia imagined that Mateo hoped that the zebra admired that the baby confessed that the teacher supported that the mirror was snapped by the boy .", "output": "DREAM ( NOAH , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NOTICE ( JUDGE , NONE , NONE ) CCOMP IMAGINE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( MATEO , NONE , NONE ) CCOMP ADMIRE ( ZEBRA , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP SUPPORT ( TEACHER , NONE , NONE ) CCOMP SNAP ( BOY , MIRROR , NONE )"}
{"input": "Form one: The girl liked that a boy dreamed that Aiden liked that a cat liked that the cookie was tossed by Emma .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP DREAM ( BOY , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP TOSS ( EMMA , COOKIE , NONE )"}
{"input": "Form one: Olivia admired that Mia said that the mouse confessed that the cat said that the monster liked that the child proved that Liam imagined that a teacher liked that Emma said that a manager said that the bat rolled .", "output": "ADMIRE ( OLIVIA , NONE , NONE ) CCOMP SAY ( MIA , NONE , NONE ) CCOMP CONFESS ( MOUSE , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP SAY ( MANAGER , NONE , NONE ) CCOMP ROLL ( NONE , BAT , NONE )"}
{"input": "Form one: A passenger liked that a wolf liked that Penelope dreamed that Olivia believed that William meant that the boy hoped that John hoped that Ava said that Emma was passed a cookie by Liam .", "output": "LIKE ( PASSENGER , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP DREAM ( PENELOPE , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP MEAN ( WILLIAM , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( JOHN , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP PASS ( LIAM , COOKIE , EMMA )"}
{"input": "Form one: Emma liked that the butterfly liked that Liam hoped that a chicken supported that Oliver liked that a duck liked that a girl declared that the squirrel liked that a cake rolled .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( CHICKEN , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP LIKE ( SQUIRREL , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma liked that a girl liked that the cat dreamed that Jaxon declared that the hammer slid .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DREAM ( CAT , NONE , NONE ) CCOMP DECLARE ( JAXON , NONE , NONE ) CCOMP SLIDE ( NONE , HAMMER , NONE )"}
{"input": "Form one: A president liked that Grayson valued that Addison declared that Emma liked that Olivia liked that a fly said that a baby appreciated that the girl expected that Carter rolled a cookie .", "output": "LIKE ( PRESIDENT , NONE , NONE ) CCOMP VALUE ( GRAYSON , NONE , NONE ) CCOMP DECLARE ( ADDISON , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SAY ( FLY , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP EXPECT ( GIRL , NONE , NONE ) CCOMP ROLL ( CARTER , COOKIE , NONE )"}
{"input": "Form one: A manager liked that William hoped that the dog declared that a guard liked that the girl hoped that the guest hoped that the bird liked that Jayden liked that Wyatt thought that the child declared that the pencil froze .", "output": "LIKE ( MANAGER , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP LIKE ( GUARD , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( GUEST , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( JAYDEN , NONE , NONE ) CCOMP THINK ( WYATT , NONE , NONE ) CCOMP DECLARE ( CHILD , NONE , NONE ) CCOMP FREEZE ( NONE , PENCIL , NONE )"}
{"input": "Form one: The lion liked that Liam imagined that Ava believed that Logan hoped that Emma liked that a rose was improved by Oliver .", "output": "LIKE ( LION , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP HOPE ( LOGAN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP IMPROVE ( OLIVER , ROSE , NONE )"}
{"input": "Form one: The champion hoped that a cat liked that the boy hoped that Emma noticed that Olivia respected that the dog was given the potato in a house by a fish .", "output": "HOPE ( CHAMPION , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP GIVE ( FISH , IN ( POTATO , HOUSE ) , DOG )"}
{"input": "Form one: Isabella proved that Emma hoped that a boy believed that the mother said that a girl valued that the teacher liked that Michael liked that a goose expected that Hazel noticed that a cookie was reddened .", "output": "PROVE ( ISABELLA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP SAY ( MOTHER , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( MICHAEL , NONE , NONE ) CCOMP EXPECT ( GOOSE , NONE , NONE ) CCOMP NOTICE ( HAZEL , NONE , NONE ) CCOMP REDDEN ( NONE , COOKIE , NONE )"}
{"input": "Form one: Levi liked that a girl believed that Mason hoped that Olivia supported that a jar was reddened by the governor .", "output": "LIKE ( LEVI , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP SUPPORT ( OLIVIA , NONE , NONE ) CCOMP REDDEN ( GOVERNOR , JAR , NONE )"}
{"input": "Form one: A mouse supported that Mila liked that the father imagined that a horse hoped that a girl liked that the frog supported that Liam hoped that Aurora liked that Emma declared that a hamburger froze .", "output": "SUPPORT ( MOUSE , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP IMAGINE ( FATHER , NONE , NONE ) CCOMP HOPE ( HORSE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( FROG , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP FREEZE ( NONE , HAMBURGER , NONE )"}
{"input": "Form one: Grace liked that Ava liked that the cat liked that Liam liked that a chicken liked that the coach tolerated that William noticed that Mason liked that the baby appreciated that Elizabeth believed that a consumer dreamed that Emma proved that the donut was eaten .", "output": "LIKE ( GRACE , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP TOLERATE ( COACH , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP APPRECIATE ( BABY , NONE , NONE ) CCOMP BELIEVE ( ELIZABETH , NONE , NONE ) CCOMP DREAM ( CONSUMER , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP EAT ( NONE , DONUT , NONE )"}
{"input": "Form one: A cat liked that Bella said that a teacher dreamed that Sophia admired that Emma appreciated that a doll crumpled .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP SAY ( BELLA , NONE , NONE ) CCOMP DREAM ( TEACHER , NONE , NONE ) CCOMP ADMIRE ( SOPHIA , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP CRUMPLE ( NONE , DOLL , NONE )"}
{"input": "Form one: Stella wished that Emma said that the monster declared that the baby said that the boy admired that Liam tolerated that the girl was given a cookie by the bear .", "output": "WISH ( STELLA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP DECLARE ( MONSTER , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP GIVE ( BEAR , COOKIE , GIRL )"}
{"input": "Form one: A donkey admired that Liam liked that Emma liked that Aurora liked that a monster was forwarded the cake by Elijah .", "output": "ADMIRE ( DONKEY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP FORWARD ( ELIJAH , CAKE , MONSTER )"}
{"input": "Form one: Olivia supported that Emma liked that Aiden liked that a pencil shortened .", "output": "SUPPORT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP SHORTEN ( NONE , PENCIL , NONE )"}
{"input": "Form one: Noah proved that Olivia liked that Oliver noticed that a girl was given the cookie .", "output": "PROVE ( NOAH , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( OLIVER , NONE , NONE ) CCOMP GIVE ( NONE , COOKIE , GIRL )"}
{"input": "Form one: A scientist expected that a cat hoped that the moose imagined that Victoria wished that the tourist imagined that Emma liked that Isabella liked that Ava burned .", "output": "EXPECT ( SCIENTIST , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP IMAGINE ( MOOSE , NONE , NONE ) CCOMP WISH ( VICTORIA , NONE , NONE ) CCOMP IMAGINE ( TOURIST , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP BURN ( NONE , AVA , NONE )"}
{"input": "Form one: Liam believed that the father liked that the boy thought that a dog dreamed that Emma said that a pumpkin was liked .", "output": "BELIEVE ( LIAM , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( NONE , PUMPKIN , NONE )"}
{"input": "Form one: Logan liked that the monster hoped that Oliver liked that the boy tolerated that Luke thought that the cat liked that Savannah liked that a girl declared that Mason liked that the chief proved that Emma believed that Liam liked that a cake was drawn .", "output": "LIKE ( LOGAN , NONE , NONE ) CCOMP HOPE ( MONSTER , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP TOLERATE ( BOY , NONE , NONE ) CCOMP THINK ( LUKE , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( SAVANNAH , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP PROVE ( CHIEF , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DRAW ( NONE , CAKE , NONE )"}
{"input": "Form one: A bear meant that Emma liked that the cat liked that Hannah admired that James hoped that Zoey said that Ava hoped that a boy liked that Lucas declared that the girl was given the drink beside the table .", "output": "MEAN ( BEAR , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP ADMIRE ( HANNAH , NONE , NONE ) CCOMP HOPE ( JAMES , NONE , NONE ) CCOMP SAY ( ZOEY , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP DECLARE ( LUCAS , NONE , NONE ) CCOMP GIVE ( NONE , BESIDE ( DRINK , TABLE ) , GIRL )"}
{"input": "Form one: The cat said that Liam hoped that the frog liked that a chicken gave Emma a cake beside a table .", "output": "SAY ( CAT , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP GIVE ( CHICKEN , BESIDE ( CAKE , TABLE ) , EMMA )"}
{"input": "Form one: Liam admired that Emma proved that Sophia liked that Elijah was passed the glue .", "output": "ADMIRE ( LIAM , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP PASS ( NONE , GLUE , ELIJAH )"}
{"input": "Form one: Hazel believed that the girl declared that Henry noticed that a sandwich was liked .", "output": "BELIEVE ( HAZEL , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP NOTICE ( HENRY , NONE , NONE ) CCOMP LIKE ( NONE , SANDWICH , NONE )"}
{"input": "Form one: A manager noticed that Emma declared that a giraffe liked that the butterfly hoped that the girl respected that a boy hoped that the clock snapped .", "output": "NOTICE ( MANAGER , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP HOPE ( BUTTERFLY , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP SNAP ( NONE , CLOCK , NONE )"}
{"input": "Form one: Luna liked that the girl liked that Ava supported that Emma broke .", "output": "LIKE ( LUNA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( AVA , NONE , NONE ) CCOMP BREAK ( NONE , EMMA , NONE )"}
{"input": "Form one: Emma hoped that William hoped that Liam liked that the girl proved that Ava tolerated that Jackson was wired a cake on the chessboard by a citizen .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP TOLERATE ( AVA , NONE , NONE ) CCOMP WIRE ( CITIZEN , ON ( CAKE , CHESSBOARD ) , JACKSON )"}
{"input": "Form one: Liam hoped that Sebastian hoped that a monkey liked that Benjamin confessed that the hen supported that a baby liked that the bat rolled .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP HOPE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP SUPPORT ( HEN , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP ROLL ( NONE , BAT , NONE )"}
{"input": "Form one: Emma admired that a child proved that a lion liked that the zebra said that the horse liked that the monkey admired that a drink rolled .", "output": "ADMIRE ( EMMA , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP SAY ( ZEBRA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP ADMIRE ( MONKEY , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: Sebastian hoped that Mateo hoped that Aiden confessed that Amelia believed that the chicken confessed that Liam said that Mila liked that a child imagined that Charlotte hoped that Sofia said that Noah liked that a boy was lended a donut .", "output": "HOPE ( SEBASTIAN , NONE , NONE ) CCOMP HOPE ( MATEO , NONE , NONE ) CCOMP CONFESS ( AIDEN , NONE , NONE ) CCOMP BELIEVE ( AMELIA , NONE , NONE ) CCOMP CONFESS ( CHICKEN , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP IMAGINE ( CHILD , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP SAY ( SOFIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LEND ( NONE , DONUT , BOY )"}
{"input": "Form one: Noah wished that Carter believed that the girl liked that Emma liked that the frog valued that a child liked that Nora preferred to walk .", "output": "WISH ( NOAH , NONE , NONE ) CCOMP BELIEVE ( CARTER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP VALUE ( FROG , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP PREFER ( NORA , NONE , NONE ) XCOMP WALK ( NORA , NONE , NONE )"}
{"input": "Form one: A priest meant that a dog expected that Oliver proved that Hannah liked that Mia believed that Ava liked that the baby said that a cake was given to a boy .", "output": "MEAN ( PRIEST , NONE , NONE ) CCOMP EXPECT ( DOG , NONE , NONE ) CCOMP PROVE ( OLIVER , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP BELIEVE ( MIA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP GIVE ( NONE , CAKE , BOY )"}
{"input": "Form one: A scientist liked that Liam liked that Emma valued that Jacob liked that the boy wished that Nora nursed a cake .", "output": "LIKE ( SCIENTIST , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( EMMA , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP WISH ( BOY , NONE , NONE ) CCOMP NURSE ( NORA , CAKE , NONE )"}
{"input": "Form one: Emma liked that a cat hoped that a scientist meant that Evelyn confessed that Oliver liked that a princess liked that a baby meant that Noah hoped that Isabella reddened .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP MEAN ( SCIENTIST , NONE , NONE ) CCOMP CONFESS ( EVELYN , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( PRINCESS , NONE , NONE ) CCOMP MEAN ( BABY , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP REDDEN ( NONE , ISABELLA , NONE )"}
{"input": "Form one: The girl noticed that a teacher liked that the boy liked that a cat proved that the princess believed that William noticed that Avery noticed that Emma liked that Liam liked that a child said that the monkey liked that Noah liked that a donut rolled .", "output": "NOTICE ( GIRL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP BELIEVE ( PRINCESS , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP NOTICE ( AVERY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP ROLL ( NONE , DONUT , NONE )"}
{"input": "Form one: A girl admired that a priest hoped that Ava appreciated that Liam cooked the baby on a chair .", "output": "ADMIRE ( GIRL , NONE , NONE ) CCOMP HOPE ( PRIEST , NONE , NONE ) CCOMP APPRECIATE ( AVA , NONE , NONE ) CCOMP COOK ( LIAM , ON ( BABY , CHAIR ) , NONE )"}
{"input": "Form one: Michael confessed that a girl appreciated that a landlord thought that a boy appreciated that the cat liked that Sophia wished that the pencil disintegrated .", "output": "CONFESS ( MICHAEL , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP THINK ( LANDLORD , NONE , NONE ) CCOMP APPRECIATE ( BOY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP WISH ( SOPHIA , NONE , NONE ) CCOMP DISINTEGRATE ( NONE , PENCIL , NONE )"}
{"input": "Form one: The dog confessed that Emma wished that Layla noticed that the boy admired that a girl liked that Noah wished that Ava changed .", "output": "CONFESS ( DOG , NONE , NONE ) CCOMP WISH ( EMMA , NONE , NONE ) CCOMP NOTICE ( LAYLA , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP WISH ( NOAH , NONE , NONE ) CCOMP CHANGE ( NONE , AVA , NONE )"}
{"input": "Form one: The dog thought that a manager tolerated that the duck liked that Emma liked that Liam liked that a cat hoped that a chicken believed that a lion liked that the kid liked that Harper noticed that the child hoped that Ava liked Sophia .", "output": "THINK ( DOG , NONE , NONE ) CCOMP TOLERATE ( MANAGER , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP BELIEVE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( KID , NONE , NONE ) CCOMP NOTICE ( HARPER , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( AVA , SOPHIA , NONE )"}
{"input": "Form one: Olivia proved that a cat hoped that the mouse hoped that Noah was offered a cake on a table in a house in the hole by a girl .", "output": "PROVE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP OFFER ( GIRL , ON ( CAKE , IN ( TABLE , IN ( HOUSE , HOLE ) ) ) , NOAH )"}
{"input": "Form one: Emma noticed that Sophia liked that a lion confessed that a dog smirked .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP SMIRK ( DOG , NONE , NONE )"}
{"input": "Form one: Ava noticed that a baby said that a boy noticed that the president liked that a teacher liked that Emma appreciated that Theodore liked that the dog thought that Aiden liked that Noah confessed that Liam liked that Aria proved that Hazel was sent a guitar beside a stage .", "output": "NOTICE ( AVA , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP LIKE ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP LIKE ( THEODORE , NONE , NONE ) CCOMP THINK ( DOG , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP PROVE ( ARIA , NONE , NONE ) CCOMP SEND ( NONE , BESIDE ( GUITAR , STAGE ) , HAZEL )"}
{"input": "Form one: Mason liked that Emma liked that Julian appreciated that Luke hoped that the deer liked that the girl wished that a priest appreciated that a soldier hoped that William expected that the frog admired that a boy liked that the cake rolled .", "output": "LIKE ( MASON , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( JULIAN , NONE , NONE ) CCOMP HOPE ( LUKE , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( PRIEST , NONE , NONE ) CCOMP HOPE ( SOLDIER , NONE , NONE ) CCOMP EXPECT ( WILLIAM , NONE , NONE ) CCOMP ADMIRE ( FROG , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: A girl liked that Emma expected that Riley proved that Ava dreamed that William supported that a doll froze .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP PROVE ( RILEY , NONE , NONE ) CCOMP DREAM ( AVA , NONE , NONE ) CCOMP SUPPORT ( WILLIAM , NONE , NONE ) CCOMP FREEZE ( NONE , DOLL , NONE )"}
{"input": "Form one: A boy liked that the penguin hoped that a dog hoped that a girl appreciated that Emma hoped that a cake rolled .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( PENGUIN , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Harper hoped that Olivia hoped that a chicken thought that Isabella admired that a queen dreamed that the boy liked that Emma declared that a girl liked that a drink was drawn .", "output": "HOPE ( HARPER , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP THINK ( CHICKEN , NONE , NONE ) CCOMP ADMIRE ( ISABELLA , NONE , NONE ) CCOMP DREAM ( QUEEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DRAW ( NONE , DRINK , NONE )"}
{"input": "Form one: The giraffe hoped that a cat wished that Liam liked that Emma noticed that Elijah confessed that Mason noticed that Noah noticed that Mia hoped that a monkey hoped that a mouse hoped that a tiger liked that Oliver hoped that the cake was sold to Amelia by a boy .", "output": "HOPE ( GIRAFFE , NONE , NONE ) CCOMP WISH ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP CONFESS ( ELIJAH , NONE , NONE ) CCOMP NOTICE ( MASON , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP LIKE ( TIGER , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP SELL ( BOY , CAKE , AMELIA )"}
{"input": "Form one: Aria liked that the girl hoped that William noticed that Oliver proved that Emma tolerated that Olivia thought that a donut was eaten .", "output": "LIKE ( ARIA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP PROVE ( OLIVER , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP THINK ( OLIVIA , NONE , NONE ) CCOMP EAT ( NONE , DONUT , NONE )"}
{"input": "Form one: A boy said that the girl liked that the patient imagined that the consumer noticed that Aria wished that a child noticed that the director proved that Noah noticed that a donut was split .", "output": "SAY ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( PATIENT , NONE , NONE ) CCOMP NOTICE ( CONSUMER , NONE , NONE ) CCOMP WISH ( ARIA , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP PROVE ( DIRECTOR , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP SPLIT ( NONE , DONUT , NONE )"}
{"input": "Form one: A cat valued that a dog said that a bird liked that the girl hoped that Sophia thought that a turtle liked that the cake shortened .", "output": "VALUE ( CAT , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP THINK ( SOPHIA , NONE , NONE ) CCOMP LIKE ( TURTLE , NONE , NONE ) CCOMP SHORTEN ( NONE , CAKE , NONE )"}
{"input": "Form one: A moose liked that Olivia believed that a girl hoped that a cat expected that a duck confessed that a baby confessed that the passenger declared that a host said that Emma imagined that the butterfly valued that William liked that Liam shortened Ava .", "output": "LIKE ( MOOSE , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP EXPECT ( CAT , NONE , NONE ) CCOMP CONFESS ( DUCK , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP DECLARE ( PASSENGER , NONE , NONE ) CCOMP SAY ( HOST , NONE , NONE ) CCOMP IMAGINE ( EMMA , NONE , NONE ) CCOMP VALUE ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP SHORTEN ( LIAM , AVA , NONE )"}
{"input": "Form one: Olivia proved that a girl noticed that David meant that Lucas confessed that Emma supported that the zebra liked that Ava liked that a human said that the chalk was eaten .", "output": "PROVE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP MEAN ( DAVID , NONE , NONE ) CCOMP CONFESS ( LUCAS , NONE , NONE ) CCOMP SUPPORT ( EMMA , NONE , NONE ) CCOMP LIKE ( ZEBRA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP SAY ( HUMAN , NONE , NONE ) CCOMP EAT ( NONE , CHALK , NONE )"}
{"input": "Form one: Liam appreciated that a dog liked that Elijah respected that David imagined that Noah hoped that the girl confessed that a boy liked that the teacher declared that Emma hoped that Olivia hoped that Ava burned .", "output": "APPRECIATE ( LIAM , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP RESPECT ( ELIJAH , NONE , NONE ) CCOMP IMAGINE ( DAVID , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP DECLARE ( TEACHER , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP BURN ( NONE , AVA , NONE )"}
{"input": "Form one: The dog liked that William declared that a citizen liked that Noah wished that the boy said that the politician liked that Emma expected that Liam tolerated that Avery hoped that Jaxon admired that the duck respected that a girl confessed that the tiger decomposed .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( CITIZEN , NONE , NONE ) CCOMP WISH ( NOAH , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( POLITICIAN , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP HOPE ( AVERY , NONE , NONE ) CCOMP ADMIRE ( JAXON , NONE , NONE ) CCOMP RESPECT ( DUCK , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP DECOMPOSE ( NONE , TIGER , NONE )"}
{"input": "Form one: Liam liked that Noah noticed that a patient valued that the prince liked that the professor valued that Isabella liked that a butterfly appreciated that Mia proved that Theodore expected that Olivia valued that a boy said that the donut was found by Riley .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP VALUE ( PATIENT , NONE , NONE ) CCOMP LIKE ( PRINCE , NONE , NONE ) CCOMP VALUE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP APPRECIATE ( BUTTERFLY , NONE , NONE ) CCOMP PROVE ( MIA , NONE , NONE ) CCOMP EXPECT ( THEODORE , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP FIND ( RILEY , DONUT , NONE )"}
{"input": "Form one: The bunny liked that the writer believed that Zoe noticed that Amelia imagined that a baby liked that Oliver hoped that a monster proved that Benjamin confessed that Emma believed that Wyatt liked a chair .", "output": "LIKE ( BUNNY , NONE , NONE ) CCOMP BELIEVE ( WRITER , NONE , NONE ) CCOMP NOTICE ( ZOE , NONE , NONE ) CCOMP IMAGINE ( AMELIA , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP PROVE ( MONSTER , NONE , NONE ) CCOMP CONFESS ( BENJAMIN , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( WYATT , CHAIR , NONE )"}
{"input": "Form one: Liam hoped that a duke supported that the boy valued that Emma said that a baby believed that the kid confessed that the cake broke .", "output": "HOPE ( LIAM , NONE , NONE ) CCOMP SUPPORT ( DUKE , NONE , NONE ) CCOMP VALUE ( BOY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP CONFESS ( KID , NONE , NONE ) CCOMP BREAK ( NONE , CAKE , NONE )"}
{"input": "Form one: Sophia believed that a boy tolerated that Liam meant that a girl thought that Andrew said that the sailor liked that a soldier noticed that the rose was sent to Ava by James .", "output": "BELIEVE ( SOPHIA , NONE , NONE ) CCOMP TOLERATE ( BOY , NONE , NONE ) CCOMP MEAN ( LIAM , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP SAY ( ANDREW , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP NOTICE ( SOLDIER , NONE , NONE ) CCOMP SEND ( JAMES , ROSE , AVA )"}
{"input": "Form one: A boy confessed that the professor imagined that Jacob liked that a girl liked that Liam respected that Ava wanted to sleep .", "output": "CONFESS ( BOY , NONE , NONE ) CCOMP IMAGINE ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP WANT ( AVA , NONE , NONE ) XCOMP SLEEP ( AVA , NONE , NONE )"}
{"input": "Form one: The cat believed that Liam liked that Aurora liked that a girl said that the block was drawn by a lawyer .", "output": "BELIEVE ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( AURORA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP DRAW ( LAWYER , BLOCK , NONE )"}
{"input": "Form one: Aria wished that Nathan confessed that Liam liked that the duck hoped that Anthony hoped that Emma was given the toy by Olivia .", "output": "WISH ( ARIA , NONE , NONE ) CCOMP CONFESS ( NATHAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( DUCK , NONE , NONE ) CCOMP HOPE ( ANTHONY , NONE , NONE ) CCOMP GIVE ( OLIVIA , TOY , EMMA )"}
{"input": "Form one: Isabella thought that Sophia noticed that a girl liked that a manager appreciated that a dog said that the chicken confessed that Olivia hoped that a citizen valued that a monkey hoped that a boy declared that William liked that a mouse dreamed that a cake was posted to the cat .", "output": "THINK ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( MANAGER , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP CONFESS ( CHICKEN , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP VALUE ( CITIZEN , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP DREAM ( MOUSE , NONE , NONE ) CCOMP POST ( NONE , CAKE , CAT )"}
{"input": "Form one: A baby liked that Emily hoped that Olivia liked that Noah hoped that Liam noticed that Henry hoped that a girl liked that the director believed that Charlotte liked that the boy liked that the cake was observed by Aria .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( EMILY , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP HOPE ( HENRY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP OBSERVE ( ARIA , CAKE , NONE )"}
{"input": "Form one: Benjamin believed that Emma said that Mason liked that a coach was given a donut on a table by James .", "output": "BELIEVE ( BENJAMIN , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP GIVE ( JAMES , ON ( DONUT , TABLE ) , COACH )"}
{"input": "Form one: A lawyer respected that Avery liked that Emma proved that the professor liked that Ella appreciated that a chicken liked that a girl liked that the hen proved that a boy liked that a dog admired that the princess meant that the cake was liked by Lily .", "output": "RESPECT ( LAWYER , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP LIKE ( PROFESSOR , NONE , NONE ) CCOMP APPRECIATE ( ELLA , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( HEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP ADMIRE ( DOG , NONE , NONE ) CCOMP MEAN ( PRINCESS , NONE , NONE ) CCOMP LIKE ( LILY , CAKE , NONE )"}
{"input": "Form one: A duck liked that a kitty hoped that the baby dreamed that a monster hoped that a father liked that Olivia hoped that the customer noticed that the boy hoped that the lawyer confessed that Emma froze .", "output": "LIKE ( DUCK , NONE , NONE ) CCOMP HOPE ( KITTY , NONE , NONE ) CCOMP DREAM ( BABY , NONE , NONE ) CCOMP HOPE ( MONSTER , NONE , NONE ) CCOMP LIKE ( FATHER , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( CUSTOMER , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP CONFESS ( LAWYER , NONE , NONE ) CCOMP FREEZE ( NONE , EMMA , NONE )"}
{"input": "Form one: The cat liked that Sophia liked that a girl liked that Emma admired that Noah liked that Nathan hoped that a baby liked that Liam liked that Chloe liked that the dog believed that the pony juggled .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP HOPE ( NATHAN , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHLOE , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP JUGGLE ( PONY , NONE , NONE )"}
{"input": "Form one: The hen noticed that a mother believed that a customer hoped that Mason liked that Liam liked that Ava liked that a resident valued that a cat liked that the mouse respected that a girl liked that Nora liked that the cake was liked by the cow .", "output": "NOTICE ( HEN , NONE , NONE ) CCOMP BELIEVE ( MOTHER , NONE , NONE ) CCOMP HOPE ( CUSTOMER , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP VALUE ( RESIDENT , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP RESPECT ( MOUSE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( NORA , NONE , NONE ) CCOMP LIKE ( COW , CAKE , NONE )"}
{"input": "Form one: Liam liked that Olivia hoped that Aurora hoped that Emma said that Noah liked that William liked that Elijah supported that Sofia liked that a gumball shortened .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( AURORA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP SUPPORT ( ELIJAH , NONE , NONE ) CCOMP LIKE ( SOFIA , NONE , NONE ) CCOMP SHORTEN ( NONE , GUMBALL , NONE )"}
{"input": "Form one: A girl imagined that Emma hoped that a pig liked that the dog liked that the queen rolled .", "output": "IMAGINE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( PIG , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP ROLL ( NONE , QUEEN , NONE )"}
{"input": "Form one: Isabella liked that Emma said that a cat noticed that Olivia said that Sofia liked that Sebastian was given the box by a baby .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP LIKE ( SOFIA , NONE , NONE ) CCOMP GIVE ( BABY , BOX , SEBASTIAN )"}
{"input": "Form one: A professor liked that a tiger noticed that the frog confessed that Liam said that Olivia hoped that Amelia liked that the boy meant that the child liked that a donut froze .", "output": "LIKE ( PROFESSOR , NONE , NONE ) CCOMP NOTICE ( TIGER , NONE , NONE ) CCOMP CONFESS ( FROG , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP FREEZE ( NONE , DONUT , NONE )"}
{"input": "Form one: The pig valued that a baby liked that the cat noticed that the child liked that Samuel rolled .", "output": "VALUE ( PIG , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP ROLL ( NONE , SAMUEL , NONE )"}
{"input": "Form one: Abigail liked that a manager admired that a chicken noticed that the child hoped that the duck liked that a girl liked that Emma hoped that William liked that a dog liked that a bird admired that a boy was loaned a spoon .", "output": "LIKE ( ABIGAIL , NONE , NONE ) CCOMP ADMIRE ( MANAGER , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP ADMIRE ( BIRD , NONE , NONE ) CCOMP LOAN ( NONE , SPOON , BOY )"}
{"input": "Form one: The duke supported that William declared that Jacob confessed that the hen thought that Liam proved that the cat liked that a zebra liked that the baby hoped that the patient liked that the giraffe gave Emma a nail in the room .", "output": "SUPPORT ( DUKE , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP CONFESS ( JACOB , NONE , NONE ) CCOMP THINK ( HEN , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( ZEBRA , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP GIVE ( GIRAFFE , IN ( NAIL , ROOM ) , EMMA )"}
{"input": "Form one: The child supported that a monster liked that a moose hoped that Emma liked that Liam said that the cake was helped .", "output": "SUPPORT ( CHILD , NONE , NONE ) CCOMP LIKE ( MONSTER , NONE , NONE ) CCOMP HOPE ( MOOSE , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HELP ( NONE , CAKE , NONE )"}
{"input": "Form one: The patient liked that a cat liked that Joseph hoped that Ryan hoped that a landlord liked that a girl liked that the puppy liked that Lillian liked that Mason hoped that the boy hoped that a cake was lended to Jaxon .", "output": "LIKE ( PATIENT , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( JOSEPH , NONE , NONE ) CCOMP HOPE ( RYAN , NONE , NONE ) CCOMP LIKE ( LANDLORD , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( PUPPY , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LEND ( NONE , CAKE , JAXON )"}
{"input": "Form one: The princess believed that the baby thought that a chicken respected that Emma hoped that a boy said that a lion noticed that a deer liked that a cow said that Riley appreciated that a leaf was liked by a bird .", "output": "BELIEVE ( PRINCESS , NONE , NONE ) CCOMP THINK ( BABY , NONE , NONE ) CCOMP RESPECT ( CHICKEN , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP NOTICE ( LION , NONE , NONE ) CCOMP LIKE ( DEER , NONE , NONE ) CCOMP SAY ( COW , NONE , NONE ) CCOMP APPRECIATE ( RILEY , NONE , NONE ) CCOMP LIKE ( BIRD , LEAF , NONE )"}
{"input": "Form one: Emma believed that a girl said that Carter said that the crocodile liked that the mouse liked that a professor hoped that the donut was frozen by a lion .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( CARTER , NONE , NONE ) CCOMP LIKE ( CROCODILE , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP HOPE ( PROFESSOR , NONE , NONE ) CCOMP FREEZE ( LION , DONUT , NONE )"}
{"input": "Form one: The dog confessed that the duke expected that Ava thought that the horse liked that the baby hoped that the plate shortened .", "output": "CONFESS ( DOG , NONE , NONE ) CCOMP EXPECT ( DUKE , NONE , NONE ) CCOMP THINK ( AVA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP SHORTEN ( NONE , PLATE , NONE )"}
{"input": "Form one: Aiden dreamed that the chicken liked that Isabella proved that the horse declared that a block was liked .", "output": "DREAM ( AIDEN , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP PROVE ( ISABELLA , NONE , NONE ) CCOMP DECLARE ( HORSE , NONE , NONE ) CCOMP LIKE ( NONE , BLOCK , NONE )"}
{"input": "Form one: Emma liked that a deer said that Isabella said that Ava believed that Liam hoped that a girl valued that Mila hoped that the cake was liked by Olivia .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( DEER , NONE , NONE ) CCOMP SAY ( ISABELLA , NONE , NONE ) CCOMP BELIEVE ( AVA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP HOPE ( MILA , NONE , NONE ) CCOMP LIKE ( OLIVIA , CAKE , NONE )"}
{"input": "Form one: A baby liked that Emma liked that the cat admired that a mouse confessed that the researcher hoped that a girl liked that the child believed that Isabella was given the cake on the counter .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP CONFESS ( MOUSE , NONE , NONE ) CCOMP HOPE ( RESEARCHER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP GIVE ( NONE , ON ( CAKE , COUNTER ) , ISABELLA )"}
{"input": "Form one: Liam valued that Sebastian said that a politician noticed that a cat liked that a penguin liked that Isabella hoped that the boy admired that a girl ate .", "output": "VALUE ( LIAM , NONE , NONE ) CCOMP SAY ( SEBASTIAN , NONE , NONE ) CCOMP NOTICE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( PENGUIN , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP EAT ( GIRL , NONE , NONE )"}
{"input": "Form one: The girl said that the prince liked that Emma proved that a child hoped that the dealer liked that a mouse noticed that Luna hoped that the cat thought that a boy liked that a bear hoped that Liam thought that Jacob believed that a block was changed .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( PRINCE , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP LIKE ( DEALER , NONE , NONE ) CCOMP NOTICE ( MOUSE , NONE , NONE ) CCOMP HOPE ( LUNA , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( BEAR , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP BELIEVE ( JACOB , NONE , NONE ) CCOMP CHANGE ( NONE , BLOCK , NONE )"}
{"input": "Form one: James respected that Emma liked that a student said that a girl liked that a coach hoped that the drink was given to Liam by a fish .", "output": "RESPECT ( JAMES , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( STUDENT , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( COACH , NONE , NONE ) CCOMP GIVE ( FISH , DRINK , LIAM )"}
{"input": "Form one: Olivia liked that the dog hoped that a turtle supported that the girl meant that Liam liked that Sophia valued that Benjamin noticed that a judge proved that Wyatt valued that Harper thought that a chicken appreciated that Oliver slid .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP SUPPORT ( TURTLE , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( SOPHIA , NONE , NONE ) CCOMP NOTICE ( BENJAMIN , NONE , NONE ) CCOMP PROVE ( JUDGE , NONE , NONE ) CCOMP VALUE ( WYATT , NONE , NONE ) CCOMP THINK ( HARPER , NONE , NONE ) CCOMP APPRECIATE ( CHICKEN , NONE , NONE ) CCOMP SLIDE ( NONE , OLIVER , NONE )"}
{"input": "Form one: The chicken noticed that Liam liked that a captain liked that Emma hoped that Olivia liked that the cow admired that a boy liked that a lawyer noticed that a donkey wanted to walk .", "output": "NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( COW , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP NOTICE ( LAWYER , NONE , NONE ) CCOMP WANT ( DONKEY , NONE , NONE ) XCOMP WALK ( DONKEY , NONE , NONE )"}
{"input": "Form one: The dog liked that Benjamin believed that the cow believed that Liam noticed that Sebastian said that Harper respected that a cake was rolled by Ava .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP BELIEVE ( BENJAMIN , NONE , NONE ) CCOMP BELIEVE ( COW , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP SAY ( SEBASTIAN , NONE , NONE ) CCOMP RESPECT ( HARPER , NONE , NONE ) CCOMP ROLL ( AVA , CAKE , NONE )"}
{"input": "Form one: Emma believed that Logan tolerated that a dog liked that Zoe liked that a baby liked that a writer confessed that Jacob proved that the mouse respected that the patient liked that a cookie was eaten by a lawyer .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( LOGAN , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( ZOE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP CONFESS ( WRITER , NONE , NONE ) CCOMP PROVE ( JACOB , NONE , NONE ) CCOMP RESPECT ( MOUSE , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP EAT ( LAWYER , COOKIE , NONE )"}
{"input": "Form one: Logan liked that the crocodile hoped that Harper proved that a dog wished that Sebastian said that the cow liked that the moose meant that David liked that a baby liked that a lion hoped that Scarlett liked that Abigail confessed that Liam was offered a cake beside a tree .", "output": "LIKE ( LOGAN , NONE , NONE ) CCOMP HOPE ( CROCODILE , NONE , NONE ) CCOMP PROVE ( HARPER , NONE , NONE ) CCOMP WISH ( DOG , NONE , NONE ) CCOMP SAY ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP MEAN ( MOOSE , NONE , NONE ) CCOMP LIKE ( DAVID , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP LIKE ( SCARLETT , NONE , NONE ) CCOMP CONFESS ( ABIGAIL , NONE , NONE ) CCOMP OFFER ( NONE , BESIDE ( CAKE , TREE ) , LIAM )"}
{"input": "Form one: William tolerated that a girl said that a cat thought that the child liked that Emma respected that Ava liked that Elizabeth liked that Sophia liked that Noah was sent a pizza in the bin .", "output": "TOLERATE ( WILLIAM , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP RESPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP SEND ( NONE , IN ( PIZZA , BIN ) , NOAH )"}
{"input": "Form one: Elijah confessed that Noah admired that Lincoln said that the goose liked that the scientist admired that a giraffe believed that a butterfly liked that a girl admired that a boy liked that the passenger liked that a chicken liked that the yogurt burned .", "output": "CONFESS ( ELIJAH , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP SAY ( LINCOLN , NONE , NONE ) CCOMP LIKE ( GOOSE , NONE , NONE ) CCOMP ADMIRE ( SCIENTIST , NONE , NONE ) CCOMP BELIEVE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP ADMIRE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( PASSENGER , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP BURN ( NONE , YOGURT , NONE )"}
{"input": "Form one: A pig hoped that Zoe said that a judge imagined that a girl hoped that Sophia appreciated that Liam liked that Skylar valued that Henry believed that William liked that the professor respected that Sofia believed that Emma hoped that a butterfly ate the yogurt .", "output": "HOPE ( PIG , NONE , NONE ) CCOMP SAY ( ZOE , NONE , NONE ) CCOMP IMAGINE ( JUDGE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( SKYLAR , NONE , NONE ) CCOMP BELIEVE ( HENRY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP RESPECT ( PROFESSOR , NONE , NONE ) CCOMP BELIEVE ( SOFIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP EAT ( BUTTERFLY , YOGURT , NONE )"}
{"input": "Form one: The cat liked that Penelope said that Noah tolerated that a frog liked that Henry hoped that a director liked that Emma declared that Isabella thought that James liked that the girl liked that the dog said that the driver confessed that a hero rolled .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP SAY ( PENELOPE , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP HOPE ( HENRY , NONE , NONE ) CCOMP LIKE ( DIRECTOR , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP THINK ( ISABELLA , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP CONFESS ( DRIVER , NONE , NONE ) CCOMP ROLL ( NONE , HERO , NONE )"}
{"input": "Form one: A boy thought that the horse liked that Olivia believed that the girl liked that the politician admired that Liam liked that Evelyn declared that William believed that Jacob wished that Emma liked that a fish declared that the cake improved .", "output": "THINK ( BOY , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP DECLARE ( EVELYN , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP WISH ( JACOB , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP DECLARE ( FISH , NONE , NONE ) CCOMP IMPROVE ( NONE , CAKE , NONE )"}
{"input": "Form one: A lion supported that Lily noticed that a bird liked that Lillian admired that Emma declared that Olivia noticed that Luna liked that a donut was poked .", "output": "SUPPORT ( LION , NONE , NONE ) CCOMP NOTICE ( LILY , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP ADMIRE ( LILLIAN , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP NOTICE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( LUNA , NONE , NONE ) CCOMP POKE ( NONE , DONUT , NONE )"}
{"input": "Form one: Emma believed that Olivia liked that the donkey appreciated that Bella was returned the cake .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( DONKEY , NONE , NONE ) CCOMP RETURN ( NONE , CAKE , BELLA )"}
{"input": "Form one: The girl believed that a director appreciated that a baby said that a bear liked that a boy liked that Emma liked that Olivia tolerated that James proved that the student wished that William liked that the box froze .", "output": "BELIEVE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( DIRECTOR , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP TOLERATE ( OLIVIA , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP WISH ( STUDENT , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP FREEZE ( NONE , BOX , NONE )"}
{"input": "Form one: A girl supported that Logan meant that Olivia believed that the manager said that Noah tolerated that Liam liked that Caleb liked that a monkey liked that the frog liked that the director said that Ava wished that Aiden liked that a president screamed .", "output": "SUPPORT ( GIRL , NONE , NONE ) CCOMP MEAN ( LOGAN , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP SAY ( MANAGER , NONE , NONE ) CCOMP TOLERATE ( NOAH , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( CALEB , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP SAY ( DIRECTOR , NONE , NONE ) CCOMP WISH ( AVA , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP SCREAM ( PRESIDENT , NONE , NONE )"}
{"input": "Form one: A lion hoped that the dog believed that Theodore hoped that the girl meant that Isabella hoped that Liam liked that Olivia wished that Noah liked that Ryan believed that a cat meant that the boy was passed a cake by the friend .", "output": "HOPE ( LION , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP HOPE ( THEODORE , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP WISH ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP BELIEVE ( RYAN , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP PASS ( FRIEND , CAKE , BOY )"}
{"input": "Form one: The father declared that the pupil hoped that a dog admired that a frog hoped that Olivia liked that Ava hoped that a rose was rolled by the child .", "output": "DECLARE ( FATHER , NONE , NONE ) CCOMP HOPE ( PUPIL , NONE , NONE ) CCOMP ADMIRE ( DOG , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP ROLL ( CHILD , ROSE , NONE )"}
{"input": "Form one: Violet respected that a bear admired that Liam liked that a chicken liked that a patient said that the child appreciated that the girl said that Emma noticed that a student liked that Charlotte liked that the director appreciated that Harper liked that the cake rolled .", "output": "RESPECT ( VIOLET , NONE , NONE ) CCOMP ADMIRE ( BEAR , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP SAY ( PATIENT , NONE , NONE ) CCOMP APPRECIATE ( CHILD , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP APPRECIATE ( DIRECTOR , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma confessed that the girl dreamed that Jack valued that a cookie snapped .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP VALUE ( JACK , NONE , NONE ) CCOMP SNAP ( NONE , COOKIE , NONE )"}
{"input": "Form one: The kitty liked that Oliver liked that Noah liked that Liam confessed that the girl liked that the king liked that Julian said that a butterfly confessed that a boy confessed that the baby liked that Hazel liked that the cake was juggled by Charlotte .", "output": "LIKE ( KITTY , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( KING , NONE , NONE ) CCOMP SAY ( JULIAN , NONE , NONE ) CCOMP CONFESS ( BUTTERFLY , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( HAZEL , NONE , NONE ) CCOMP JUGGLE ( CHARLOTTE , CAKE , NONE )"}
{"input": "Form one: A father confessed that Caleb tolerated that William proved that a researcher hoped that Emma liked that Elijah hoped that Benjamin noticed that the cat said that the professor meant that Liam expected that the bee liked that a cake rolled .", "output": "CONFESS ( FATHER , NONE , NONE ) CCOMP TOLERATE ( CALEB , NONE , NONE ) CCOMP PROVE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( RESEARCHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP NOTICE ( BENJAMIN , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP MEAN ( PROFESSOR , NONE , NONE ) CCOMP EXPECT ( LIAM , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: James expected that Emma admired that the butterfly declared that Luke appreciated that Mason supported that a tiger appreciated that the teacher liked that Noah painted .", "output": "EXPECT ( JAMES , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP DECLARE ( BUTTERFLY , NONE , NONE ) CCOMP APPRECIATE ( LUKE , NONE , NONE ) CCOMP SUPPORT ( MASON , NONE , NONE ) CCOMP APPRECIATE ( TIGER , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP PAINT ( NOAH , NONE , NONE )"}
{"input": "Form one: Liam liked that a king liked that the girl dreamed that Luke hoped that a turkey confessed that Emma confessed that Carter believed that a child liked that the baby liked that William liked that Grace crumpled a duck .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( KING , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP HOPE ( LUKE , NONE , NONE ) CCOMP CONFESS ( TURKEY , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP BELIEVE ( CARTER , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP CRUMPLE ( GRACE , DUCK , NONE )"}
{"input": "Form one: Harper expected that Ava wished that a giraffe hoped that Aubrey thought that Emma said that Charlotte believed that Daniel admired that Jackson noticed that a girl liked that a teacher believed that William liked that the dog was fed a mirror in a pot by a boy .", "output": "EXPECT ( HARPER , NONE , NONE ) CCOMP WISH ( AVA , NONE , NONE ) CCOMP HOPE ( GIRAFFE , NONE , NONE ) CCOMP THINK ( AUBREY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP BELIEVE ( CHARLOTTE , NONE , NONE ) CCOMP ADMIRE ( DANIEL , NONE , NONE ) CCOMP NOTICE ( JACKSON , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( TEACHER , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP FEED ( BOY , IN ( MIRROR , POT ) , DOG )"}
{"input": "Form one: Charlotte valued that Emma declared that a cat confessed that a boy admired that Liam tolerated that Olivia hoped that the donut was improved .", "output": "VALUE ( CHARLOTTE , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP TOLERATE ( LIAM , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP IMPROVE ( NONE , DONUT , NONE )"}
{"input": "Form one: A boy liked that a governor respected that James liked that Emma said that Liam confessed that the writer hoped that a girl respected that Olivia confessed that the dog liked that Charlotte was loaned the balloon by a cat .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP RESPECT ( GOVERNOR , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP HOPE ( WRITER , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LOAN ( CAT , BALLOON , CHARLOTTE )"}
{"input": "Form one: A cow hoped that the girl said that a boy dreamed that Emma confessed that the box was fed to Skylar .", "output": "HOPE ( COW , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP DREAM ( BOY , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP FEED ( NONE , BOX , SKYLAR )"}
{"input": "Form one: Isaac liked that Christopher hoped that Liam liked that Lucas hoped that a girl hoped that the donut was nursed .", "output": "LIKE ( ISAAC , NONE , NONE ) CCOMP HOPE ( CHRISTOPHER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP NURSE ( NONE , DONUT , NONE )"}
{"input": "Form one: Elizabeth valued that James expected that William hoped that Liam hoped that the boy believed that a guest hoped that Hannah liked that a girl meant that Zoe supported that Benjamin was lended a crown beside the bed .", "output": "VALUE ( ELIZABETH , NONE , NONE ) CCOMP EXPECT ( JAMES , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP HOPE ( GUEST , NONE , NONE ) CCOMP LIKE ( HANNAH , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP SUPPORT ( ZOE , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( CROWN , BED ) , BENJAMIN )"}
{"input": "Form one: A cat liked that Luna hoped that Emma liked that Olivia liked that Liam appreciated that the bear floated .", "output": "LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( LUNA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP FLOAT ( NONE , BEAR , NONE )"}
{"input": "Form one: Noah liked that Olivia hoped that Isabella confessed that the cake crumpled .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( ISABELLA , NONE , NONE ) CCOMP CRUMPLE ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma liked that the bunny liked that a farmer said that a girl liked that Isabella declared that Lucas said that a dog dreamed that a donut was eaten .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP SAY ( FARMER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP SAY ( LUCAS , NONE , NONE ) CCOMP DREAM ( DOG , NONE , NONE ) CCOMP EAT ( NONE , DONUT , NONE )"}
{"input": "Form one: The dog hoped that Oliver liked that a monkey hoped that a boy liked that the cow confessed that Sophia liked that the girl declared that Penelope appreciated that a balloon was painted .", "output": "HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( COW , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP APPRECIATE ( PENELOPE , NONE , NONE ) CCOMP PAINT ( NONE , BALLOON , NONE )"}
{"input": "Form one: The dog hoped that Noah respected that a girl hoped that a guy liked that Grayson meant that a baby hoped that Skylar liked that Avery noticed that Mason liked that Bella expected that Scarlett said that a boy was given a pizza .", "output": "HOPE ( DOG , NONE , NONE ) CCOMP RESPECT ( NOAH , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( GUY , NONE , NONE ) CCOMP MEAN ( GRAYSON , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( SKYLAR , NONE , NONE ) CCOMP NOTICE ( AVERY , NONE , NONE ) CCOMP LIKE ( MASON , NONE , NONE ) CCOMP EXPECT ( BELLA , NONE , NONE ) CCOMP SAY ( SCARLETT , NONE , NONE ) CCOMP GIVE ( NONE , PIZZA , BOY )"}
{"input": "Form one: The fly said that Emma tolerated that the butterfly meant that a cat liked that a child hoped that a scientist supported that a basket rolled .", "output": "SAY ( FLY , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP MEAN ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP SUPPORT ( SCIENTIST , NONE , NONE ) CCOMP ROLL ( NONE , BASKET , NONE )"}
{"input": "Form one: A baby believed that Emma said that a cat liked that Liam liked that a bee liked that a boy noticed that Ava respected that Charlotte hoped that Lucas liked that Noah noticed that Ethan said that the cake was pierced by the horse .", "output": "BELIEVE ( BABY , NONE , NONE ) CCOMP SAY ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( BEE , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP RESPECT ( AVA , NONE , NONE ) CCOMP HOPE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( LUCAS , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP SAY ( ETHAN , NONE , NONE ) CCOMP PIERCE ( HORSE , CAKE , NONE )"}
{"input": "Form one: A hero believed that a boy declared that Henry believed that William liked that Mason said that a chicken hoped that Emma confessed that Mateo liked that the sailor hoped that the horse said that a bird was lended the cake .", "output": "BELIEVE ( HERO , NONE , NONE ) CCOMP DECLARE ( BOY , NONE , NONE ) CCOMP BELIEVE ( HENRY , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP SAY ( MASON , NONE , NONE ) CCOMP HOPE ( CHICKEN , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP LIKE ( MATEO , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP SAY ( HORSE , NONE , NONE ) CCOMP LEND ( NONE , CAKE , BIRD )"}
{"input": "Form one: Victoria noticed that Emma meant that the cat noticed that Liam declared that Isaac meant that Jacob thought that a boy meant that Joshua liked that Olivia declared that Isabella liked that David froze .", "output": "NOTICE ( VICTORIA , NONE , NONE ) CCOMP MEAN ( EMMA , NONE , NONE ) CCOMP NOTICE ( CAT , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP MEAN ( ISAAC , NONE , NONE ) CCOMP THINK ( JACOB , NONE , NONE ) CCOMP MEAN ( BOY , NONE , NONE ) CCOMP LIKE ( JOSHUA , NONE , NONE ) CCOMP DECLARE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP FREEZE ( NONE , DAVID , NONE )"}
{"input": "Form one: The dog hoped that a lawyer declared that the teacher liked that a pupil believed that Lucas said that Liam declared that the bee hoped that the spoon split .", "output": "HOPE ( DOG , NONE , NONE ) CCOMP DECLARE ( LAWYER , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP BELIEVE ( PUPIL , NONE , NONE ) CCOMP SAY ( LUCAS , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP HOPE ( BEE , NONE , NONE ) CCOMP SPLIT ( NONE , SPOON , NONE )"}
{"input": "Form one: Noah hoped that Liam appreciated that Emma noticed that Lucas was sold a cake .", "output": "HOPE ( NOAH , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP SELL ( NONE , CAKE , LUCAS )"}
{"input": "Form one: William hoped that John believed that the frog hoped that the puppy said that a cat believed that Emma hoped that a penguin hoped that the pig hoped that a lion hoped that a giraffe declared that Alexander was given the glue on a table .", "output": "HOPE ( WILLIAM , NONE , NONE ) CCOMP BELIEVE ( JOHN , NONE , NONE ) CCOMP HOPE ( FROG , NONE , NONE ) CCOMP SAY ( PUPPY , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( PENGUIN , NONE , NONE ) CCOMP HOPE ( PIG , NONE , NONE ) CCOMP HOPE ( LION , NONE , NONE ) CCOMP DECLARE ( GIRAFFE , NONE , NONE ) CCOMP GIVE ( NONE , ON ( GLUE , TABLE ) , ALEXANDER )"}
{"input": "Form one: The girl liked that the boy said that the baby valued that the sailor hoped that Liam thought that the frog liked that Ava meant that Sophia admired that Abigail hoped that William said that Andrew was wired the ball beside a road .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP VALUE ( BABY , NONE , NONE ) CCOMP HOPE ( SAILOR , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP MEAN ( AVA , NONE , NONE ) CCOMP ADMIRE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( ABIGAIL , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP WIRE ( NONE , BESIDE ( BALL , ROAD ) , ANDREW )"}
{"input": "Form one: The cat hoped that the teacher appreciated that Elijah liked that a girl declared that Lucas hoped that the dog thought that the lion liked that Liam expected that the duke said that Olivia said that Emma expected that the butterfly hoped that a button split .", "output": "HOPE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( TEACHER , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP THINK ( DOG , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP EXPECT ( LIAM , NONE , NONE ) CCOMP SAY ( DUKE , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP HOPE ( BUTTERFLY , NONE , NONE ) CCOMP SPLIT ( NONE , BUTTON , NONE )"}
{"input": "Form one: Liam liked that the lawyer liked that Abigail liked that a goose believed that the cat declared that a student expected that Emma confessed that the cake rolled .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( LAWYER , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP BELIEVE ( GOOSE , NONE , NONE ) CCOMP DECLARE ( CAT , NONE , NONE ) CCOMP EXPECT ( STUDENT , NONE , NONE ) CCOMP CONFESS ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Harper liked that a bunny liked that a scientist said that a girl hoped that Olivia believed that the bird rolled .", "output": "LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP SAY ( SCIENTIST , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( OLIVIA , NONE , NONE ) CCOMP ROLL ( NONE , BIRD , NONE )"}
{"input": "Form one: Emma confessed that the monster said that Matthew noticed that the girl hoped that a boy liked that Charlotte liked that a chicken liked that the jigsaw rolled .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP SAY ( MONSTER , NONE , NONE ) CCOMP NOTICE ( MATTHEW , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP ROLL ( NONE , JIGSAW , NONE )"}
{"input": "Form one: Abigail declared that a boy liked that Emma noticed that the student liked that the mouse hoped that a cake was changed .", "output": "DECLARE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( STUDENT , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP CHANGE ( NONE , CAKE , NONE )"}
{"input": "Form one: Benjamin liked that James said that the cow liked that Liam supported that a host thought that the boy said that the cat imagined that the girl thought that Madison liked that a cookie was given to Daniel by a turkey .", "output": "LIKE ( BENJAMIN , NONE , NONE ) CCOMP SAY ( JAMES , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP SUPPORT ( LIAM , NONE , NONE ) CCOMP THINK ( HOST , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP IMAGINE ( CAT , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP GIVE ( TURKEY , COOKIE , DANIEL )"}
{"input": "Form one: The kitty tolerated that a child liked that Emma noticed that a donut was found .", "output": "TOLERATE ( KITTY , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP FIND ( NONE , DONUT , NONE )"}
{"input": "Form one: Victoria proved that a chicken imagined that Madison liked that a girl liked that Olivia supported that a cake froze .", "output": "PROVE ( VICTORIA , NONE , NONE ) CCOMP IMAGINE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( MADISON , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SUPPORT ( OLIVIA , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: A chicken believed that Ellie liked that Olivia expected that a boy admired that a cat valued that Emma appreciated that Liam hoped that Ava said that Isaac liked that a creature declared that the dog liked that a cake was fed to a girl .", "output": "BELIEVE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( ELLIE , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( BOY , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( EMMA , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP LIKE ( ISAAC , NONE , NONE ) CCOMP DECLARE ( CREATURE , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP FEED ( NONE , CAKE , GIRL )"}
{"input": "Form one: A monkey appreciated that Liam declared that a boy liked that James proved that a girl respected that Natalie liked that a president froze .", "output": "APPRECIATE ( MONKEY , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( JAMES , NONE , NONE ) CCOMP RESPECT ( GIRL , NONE , NONE ) CCOMP LIKE ( NATALIE , NONE , NONE ) CCOMP FREEZE ( NONE , PRESIDENT , NONE )"}
{"input": "Form one: A girl liked that Olivia proved that the princess confessed that Mila hoped that the journalist liked that Ella dreamed that a frog noticed that Emma was slipped a biscuit beside a lamp .", "output": "LIKE ( GIRL , NONE , NONE ) CCOMP PROVE ( OLIVIA , NONE , NONE ) CCOMP CONFESS ( PRINCESS , NONE , NONE ) CCOMP HOPE ( MILA , NONE , NONE ) CCOMP LIKE ( JOURNALIST , NONE , NONE ) CCOMP DREAM ( ELLA , NONE , NONE ) CCOMP NOTICE ( FROG , NONE , NONE ) CCOMP SLIP ( NONE , BESIDE ( BISCUIT , LAMP ) , EMMA )"}
{"input": "Form one: A wolf said that Isaac valued that Isabella believed that Liam slept .", "output": "SAY ( WOLF , NONE , NONE ) CCOMP VALUE ( ISAAC , NONE , NONE ) CCOMP BELIEVE ( ISABELLA , NONE , NONE ) CCOMP SLEEP ( LIAM , NONE , NONE )"}
{"input": "Form one: Emma hoped that Grayson liked that the fly liked that a girl liked that David liked that a baby liked that James was rented the cake in the house .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( GRAYSON , NONE , NONE ) CCOMP LIKE ( FLY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( DAVID , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP RENT ( NONE , IN ( CAKE , HOUSE ) , JAMES )"}
{"input": "Form one: A donkey thought that Eleanor noticed that a girl said that Jaxon liked that Lucas hoped that the bird liked that a consumer gave a baby the cookie .", "output": "THINK ( DONKEY , NONE , NONE ) CCOMP NOTICE ( ELEANOR , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP LIKE ( JAXON , NONE , NONE ) CCOMP HOPE ( LUCAS , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP GIVE ( CONSUMER , COOKIE , BABY )"}
{"input": "Form one: A cat confessed that a girl tolerated that the director liked that Emma noticed that Carter liked that the plate was rolled .", "output": "CONFESS ( CAT , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP LIKE ( DIRECTOR , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP LIKE ( CARTER , NONE , NONE ) CCOMP ROLL ( NONE , PLATE , NONE )"}
{"input": "Form one: Zoey liked that the boy proved that Ava liked that Liam thought that the donut was burned .", "output": "LIKE ( ZOEY , NONE , NONE ) CCOMP PROVE ( BOY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP THINK ( LIAM , NONE , NONE ) CCOMP BURN ( NONE , DONUT , NONE )"}
{"input": "Form one: A baby liked that the professor said that the sailor liked that the boy liked that Noah liked that Grace proved that a duke liked that Ellie said that Owen hoped that the girl hoped that Liam hoped that Amelia appreciated the cake in the trunk beside the book beside the pillar .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP SAY ( PROFESSOR , NONE , NONE ) CCOMP LIKE ( SAILOR , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP PROVE ( GRACE , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP SAY ( ELLIE , NONE , NONE ) CCOMP HOPE ( OWEN , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP APPRECIATE ( AMELIA , IN ( CAKE , BESIDE ( TRUNK , BESIDE ( BOOK , PILLAR ) ) ) , NONE )"}
{"input": "Form one: James said that a manager liked that Aiden appreciated that Emily believed that the girl was posted a cake beside a table by Olivia .", "output": "SAY ( JAMES , NONE , NONE ) CCOMP LIKE ( MANAGER , NONE , NONE ) CCOMP APPRECIATE ( AIDEN , NONE , NONE ) CCOMP BELIEVE ( EMILY , NONE , NONE ) CCOMP POST ( OLIVIA , BESIDE ( CAKE , TABLE ) , GIRL )"}
{"input": "Form one: The baby liked that the butterfly wished that a boy liked that Liam hoped that the pupil said that Emma proved that Noah hoped that the kid liked that the human liked that Camila hoped that a tiger rolled .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP WISH ( BUTTERFLY , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SAY ( PUPIL , NONE , NONE ) CCOMP PROVE ( EMMA , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( KID , NONE , NONE ) CCOMP LIKE ( HUMAN , NONE , NONE ) CCOMP HOPE ( CAMILA , NONE , NONE ) CCOMP ROLL ( NONE , TIGER , NONE )"}
{"input": "Form one: Emma said that Noah valued that a boy liked that James liked that Liam tolerated a president in a car beside a torch .", "output": "SAY ( EMMA , NONE , NONE ) CCOMP VALUE ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP TOLERATE ( LIAM , IN ( PRESIDENT , BESIDE ( CAR , TORCH ) ) , NONE )"}
{"input": "Form one: Victoria dreamed that Harper tolerated that the girl liked that a mouse liked that a baby liked that the chicken admired that the father hoped that Emma offered a human a cake beside the stage .", "output": "DREAM ( VICTORIA , NONE , NONE ) CCOMP TOLERATE ( HARPER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( MOUSE , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP ADMIRE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( FATHER , NONE , NONE ) CCOMP OFFER ( EMMA , BESIDE ( CAKE , STAGE ) , HUMAN )"}
{"input": "Form one: A wolf hoped that Sebastian appreciated that a boy liked that a cat confessed that the girl supported that Noah noticed that Sophia hoped that the scientist expected that a citizen confessed that Michael appreciated that Emma worshipped a goose .", "output": "HOPE ( WOLF , NONE , NONE ) CCOMP APPRECIATE ( SEBASTIAN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP NOTICE ( NOAH , NONE , NONE ) CCOMP HOPE ( SOPHIA , NONE , NONE ) CCOMP EXPECT ( SCIENTIST , NONE , NONE ) CCOMP CONFESS ( CITIZEN , NONE , NONE ) CCOMP APPRECIATE ( MICHAEL , NONE , NONE ) CCOMP WORSHIP ( EMMA , GOOSE , NONE )"}
{"input": "Form one: Emma imagined that a mouse valued that the manager appreciated that the cake was eaten .", "output": "IMAGINE ( EMMA , NONE , NONE ) CCOMP VALUE ( MOUSE , NONE , NONE ) CCOMP APPRECIATE ( MANAGER , NONE , NONE ) CCOMP EAT ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma hoped that Liam admired that a cat liked that Noah respected that Jacob valued that a soldier appreciated that a child said that Ava liked that William noticed that the horse liked that Luna liked that a girl liked that the cake was burned by Mila .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP ADMIRE ( LIAM , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP RESPECT ( NOAH , NONE , NONE ) CCOMP VALUE ( JACOB , NONE , NONE ) CCOMP APPRECIATE ( SOLDIER , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP LIKE ( LUNA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BURN ( MILA , CAKE , NONE )"}
{"input": "Form one: John liked that a cat liked that Emma thought that a teacher hoped that Benjamin liked that a mouse hoped that the girl liked that Elizabeth said that a lawyer liked that the horse hoped that the lion liked that Ava supported that the duck preferred to walk .", "output": "LIKE ( JOHN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP LIKE ( BENJAMIN , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( LAWYER , NONE , NONE ) CCOMP HOPE ( HORSE , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP SUPPORT ( AVA , NONE , NONE ) CCOMP PREFER ( DUCK , NONE , NONE ) XCOMP WALK ( DUCK , NONE , NONE )"}
{"input": "Form one: Liam supported that Lillian said that the prince liked that Amelia liked that Emma was wired a cookie beside a rock by David .", "output": "SUPPORT ( LIAM , NONE , NONE ) CCOMP SAY ( LILLIAN , NONE , NONE ) CCOMP LIKE ( PRINCE , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP WIRE ( DAVID , BESIDE ( COOKIE , ROCK ) , EMMA )"}
{"input": "Form one: Ryan tolerated that the monster said that the wolf liked that a queen appreciated that a duck dreamed that a girl dreamed that Mia meant that Isabella grew .", "output": "TOLERATE ( RYAN , NONE , NONE ) CCOMP SAY ( MONSTER , NONE , NONE ) CCOMP LIKE ( WOLF , NONE , NONE ) CCOMP APPRECIATE ( QUEEN , NONE , NONE ) CCOMP DREAM ( DUCK , NONE , NONE ) CCOMP DREAM ( GIRL , NONE , NONE ) CCOMP MEAN ( MIA , NONE , NONE ) CCOMP GROW ( NONE , ISABELLA , NONE )"}
{"input": "Form one: The child admired that a boy liked that Ava hoped that the girl liked that Hazel liked that Liam liked that Emma expected that a dog liked that a horse hoped that the captain noticed that Charlotte handed the cake to a cat .", "output": "ADMIRE ( CHILD , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( HAZEL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( HORSE , NONE , NONE ) CCOMP NOTICE ( CAPTAIN , NONE , NONE ) CCOMP HAND ( CHARLOTTE , CAKE , CAT )"}
{"input": "Form one: Elizabeth proved that the spokesman liked that the monkey appreciated that the boy confessed that a baby believed that Liam declared that the child said that Daniel hoped that a teacher liked that the lion slid a cake on a booklet .", "output": "PROVE ( ELIZABETH , NONE , NONE ) CCOMP LIKE ( SPOKESMAN , NONE , NONE ) CCOMP APPRECIATE ( MONKEY , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP BELIEVE ( BABY , NONE , NONE ) CCOMP DECLARE ( LIAM , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP HOPE ( DANIEL , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP SLIDE ( LION , ON ( CAKE , BOOKLET ) , NONE )"}
{"input": "Form one: Emma believed that the citizen wished that the chicken thought that a girl liked that a butterfly rolled .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP WISH ( CITIZEN , NONE , NONE ) CCOMP THINK ( CHICKEN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , BUTTERFLY , NONE )"}
{"input": "Form one: The kitty thought that Noah supported that Benjamin noticed that Elijah liked that a chicken crumpled a jigsaw .", "output": "THINK ( KITTY , NONE , NONE ) CCOMP SUPPORT ( NOAH , NONE , NONE ) CCOMP NOTICE ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP CRUMPLE ( CHICKEN , JIGSAW , NONE )"}
{"input": "Form one: The monkey liked that the judge liked that the chicken liked that a girl noticed that a pony hoped that Isabella believed that William declared that a pretzel rolled .", "output": "LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( JUDGE , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP HOPE ( PONY , NONE , NONE ) CCOMP BELIEVE ( ISABELLA , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP ROLL ( NONE , PRETZEL , NONE )"}
{"input": "Form one: Emma liked that a hen said that a teacher said that Liam liked that Avery liked that the donut was helped by a princess .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( HEN , NONE , NONE ) CCOMP SAY ( TEACHER , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( AVERY , NONE , NONE ) CCOMP HELP ( PRINCESS , DONUT , NONE )"}
{"input": "Form one: Levi liked that Emma declared that the girl wished that a lawyer liked that the turtle imagined that a monkey liked that Charlotte ate .", "output": "LIKE ( LEVI , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP LIKE ( LAWYER , NONE , NONE ) CCOMP IMAGINE ( TURTLE , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP EAT ( CHARLOTTE , NONE , NONE )"}
{"input": "Form one: The bear admired that a bird liked that Emma liked that the child proved that Liam liked that Isabella liked that the dog said that Avery hoped that Leah proved that the boy liked that the girl tolerated that a cake froze .", "output": "ADMIRE ( BEAR , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP HOPE ( AVERY , NONE , NONE ) CCOMP PROVE ( LEAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP TOLERATE ( GIRL , NONE , NONE ) CCOMP FREEZE ( NONE , CAKE , NONE )"}
{"input": "Form one: Isabella liked that the penguin admired that the chicken believed that the boy liked that Olivia was sold a cookie in a basket .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP ADMIRE ( PENGUIN , NONE , NONE ) CCOMP BELIEVE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SELL ( NONE , IN ( COOKIE , BASKET ) , OLIVIA )"}
{"input": "Form one: The sailor noticed that Matthew hoped that a girl proved that Liam liked that the mouse believed that the donkey hoped that a cat brought the rose to the baby .", "output": "NOTICE ( SAILOR , NONE , NONE ) CCOMP HOPE ( MATTHEW , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP BELIEVE ( MOUSE , NONE , NONE ) CCOMP HOPE ( DONKEY , NONE , NONE ) CCOMP BRING ( CAT , ROSE , BABY )"}
{"input": "Form one: The pig hoped that the dog appreciated that Oliver said that the customer supported that Chloe confessed that Charlotte proved that Joseph imagined that Emma was offered a strawberry in the garden by a cat .", "output": "HOPE ( PIG , NONE , NONE ) CCOMP APPRECIATE ( DOG , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP SUPPORT ( CUSTOMER , NONE , NONE ) CCOMP CONFESS ( CHLOE , NONE , NONE ) CCOMP PROVE ( CHARLOTTE , NONE , NONE ) CCOMP IMAGINE ( JOSEPH , NONE , NONE ) CCOMP OFFER ( CAT , IN ( STRAWBERRY , GARDEN ) , EMMA )"}
{"input": "Form one: Carter liked that a penguin appreciated that Audrey liked that Ava liked that the chicken noticed that the dog hoped that a cat respected that Olivia liked that Charlotte said that Ella confessed that Anthony hoped that a girl called .", "output": "LIKE ( CARTER , NONE , NONE ) CCOMP APPRECIATE ( PENGUIN , NONE , NONE ) CCOMP LIKE ( AUDREY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP RESPECT ( CAT , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SAY ( CHARLOTTE , NONE , NONE ) CCOMP CONFESS ( ELLA , NONE , NONE ) CCOMP HOPE ( ANTHONY , NONE , NONE ) CCOMP CALL ( GIRL , NONE , NONE )"}
{"input": "Form one: Amelia said that the boy liked that a child proved that the girl nursed a cake .", "output": "SAY ( AMELIA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( CHILD , NONE , NONE ) CCOMP NURSE ( GIRL , CAKE , NONE )"}
{"input": "Form one: The bird liked that the professor confessed that Joseph respected that a girl liked that James noticed that Olivia liked that the boy hoped that the baby hoped that a box was rolled by the hero .", "output": "LIKE ( BIRD , NONE , NONE ) CCOMP CONFESS ( PROFESSOR , NONE , NONE ) CCOMP RESPECT ( JOSEPH , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP ROLL ( HERO , BOX , NONE )"}
{"input": "Form one: Emma hoped that the girl liked that a mouse believed that William liked that James appreciated that a butterfly respected that Amelia found Liam .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( MOUSE , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP APPRECIATE ( JAMES , NONE , NONE ) CCOMP RESPECT ( BUTTERFLY , NONE , NONE ) CCOMP FIND ( AMELIA , LIAM , NONE )"}
{"input": "Form one: Noah liked that Elijah supported that the girl said that the cat confessed that Emma declared that the nail was rolled by the baby .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP SUPPORT ( ELIJAH , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP ROLL ( BABY , NAIL , NONE )"}
{"input": "Form one: Addison liked that a dog hoped that Emma liked that Liam was offered the balloon in the car .", "output": "LIKE ( ADDISON , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP OFFER ( NONE , IN ( BALLOON , CAR ) , LIAM )"}
{"input": "Form one: A sailor thought that Olivia liked that Emma declared that Liam respected that a lion believed that Gabriel hoped that Noah hoped that Violet noticed that a king helped the girl .", "output": "THINK ( SAILOR , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP BELIEVE ( LION , NONE , NONE ) CCOMP HOPE ( GABRIEL , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP NOTICE ( VIOLET , NONE , NONE ) CCOMP HELP ( KING , GIRL , NONE )"}
{"input": "Form one: A penguin noticed that a baby wished that the coach liked that Ava proved that Emma liked that the girl said that the box was drawn .", "output": "NOTICE ( PENGUIN , NONE , NONE ) CCOMP WISH ( BABY , NONE , NONE ) CCOMP LIKE ( COACH , NONE , NONE ) CCOMP PROVE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP DRAW ( NONE , BOX , NONE )"}
{"input": "Form one: Sophia admired that the turkey liked that Samuel said that the governor thought that the president expected that the lion appreciated that a girl declared that Liam confessed that Madison believed that Emma hoped that Noah slipped the cake in the house to Isabella .", "output": "ADMIRE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( TURKEY , NONE , NONE ) CCOMP SAY ( SAMUEL , NONE , NONE ) CCOMP THINK ( GOVERNOR , NONE , NONE ) CCOMP EXPECT ( PRESIDENT , NONE , NONE ) CCOMP APPRECIATE ( LION , NONE , NONE ) CCOMP DECLARE ( GIRL , NONE , NONE ) CCOMP CONFESS ( LIAM , NONE , NONE ) CCOMP BELIEVE ( MADISON , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP SLIP ( NOAH , IN ( CAKE , HOUSE ) , ISABELLA )"}
{"input": "Form one: A cat imagined that Abigail liked that a monkey said that the mouse hoped that Ava hoped that a frog noticed that the boy believed that Elijah thought that Isabella hoped that a girl noticed that the cake was given to a manager by Emma .", "output": "IMAGINE ( CAT , NONE , NONE ) CCOMP LIKE ( ABIGAIL , NONE , NONE ) CCOMP SAY ( MONKEY , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP NOTICE ( FROG , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP THINK ( ELIJAH , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP GIVE ( EMMA , CAKE , MANAGER )"}
{"input": "Form one: Liam liked that a bunny valued that the fly hoped that a girl liked that the cracker crumpled .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP VALUE ( BUNNY , NONE , NONE ) CCOMP HOPE ( FLY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CRUMPLE ( NONE , CRACKER , NONE )"}
{"input": "Form one: The bunny dreamed that a lion liked that a duck liked that the fish hoped that Ava tolerated that Mila liked that the boy confessed that the cat believed that Emma declared that Liam proved that a bear liked that a visitor froze .", "output": "DREAM ( BUNNY , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP HOPE ( FISH , NONE , NONE ) CCOMP TOLERATE ( AVA , NONE , NONE ) CCOMP LIKE ( MILA , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP PROVE ( LIAM , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP FREEZE ( NONE , VISITOR , NONE )"}
{"input": "Form one: Emma tolerated that a cat said that a lamb said that Oliver declared that Olivia hoped that Mia proved that the girl liked that a monster expected that a farmer liked that Daniel said that Liam liked that a boy slept .", "output": "TOLERATE ( EMMA , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP SAY ( LAMB , NONE , NONE ) CCOMP DECLARE ( OLIVER , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP PROVE ( MIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP EXPECT ( MONSTER , NONE , NONE ) CCOMP LIKE ( FARMER , NONE , NONE ) CCOMP SAY ( DANIEL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP SLEEP ( BOY , NONE , NONE )"}
{"input": "Form one: A teacher liked that Mia liked that Oliver declared that Charlotte liked that Olivia liked that a boy thought that a cat proved that a girl thought that the baby confessed that a bear declared that Emma liked that Levi was given a cake in the pool .", "output": "LIKE ( TEACHER , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP DECLARE ( OLIVER , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP CONFESS ( BABY , NONE , NONE ) CCOMP DECLARE ( BEAR , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP GIVE ( NONE , IN ( CAKE , POOL ) , LEVI )"}
{"input": "Form one: The farmer liked that the girl liked that a duck admired that Liam said that Isabella respected that a soldier dreamed that Benjamin hoped that a cake rolled .", "output": "LIKE ( FARMER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( DUCK , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP RESPECT ( ISABELLA , NONE , NONE ) CCOMP DREAM ( SOLDIER , NONE , NONE ) CCOMP HOPE ( BENJAMIN , NONE , NONE ) CCOMP ROLL ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma liked that the buyer dreamed that the journalist liked that a girl hoped that a rose was snapped .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP DREAM ( BUYER , NONE , NONE ) CCOMP LIKE ( JOURNALIST , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP SNAP ( NONE , ROSE , NONE )"}
{"input": "Form one: Noah said that Grace hoped that a king declared that Aria liked that a cat believed that Olivia confessed that a pony hoped that a donkey respected that a baby expected that the monkey hoped that the zebra hoped that the duke was awarded the donut on the speaker .", "output": "SAY ( NOAH , NONE , NONE ) CCOMP HOPE ( GRACE , NONE , NONE ) CCOMP DECLARE ( KING , NONE , NONE ) CCOMP LIKE ( ARIA , NONE , NONE ) CCOMP BELIEVE ( CAT , NONE , NONE ) CCOMP CONFESS ( OLIVIA , NONE , NONE ) CCOMP HOPE ( PONY , NONE , NONE ) CCOMP RESPECT ( DONKEY , NONE , NONE ) CCOMP EXPECT ( BABY , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP HOPE ( ZEBRA , NONE , NONE ) CCOMP AWARD ( NONE , ON ( DONUT , SPEAKER ) , DUKE )"}
{"input": "Form one: Emily hoped that Liam said that the baby hoped that the dog proved that Sophia said that the student hoped that a boy believed that Emma liked that a girl said that the producer said that Ava imagined that Noah froze .", "output": "HOPE ( EMILY , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP PROVE ( DOG , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP HOPE ( STUDENT , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SAY ( PRODUCER , NONE , NONE ) CCOMP IMAGINE ( AVA , NONE , NONE ) CCOMP FREEZE ( NONE , NOAH , NONE )"}
{"input": "Form one: The driver thought that the boy expected that a child liked that a bunny liked that a girl liked that Noah hoped that a hero thought that Mia liked that a bird liked that a cat said that Emma admired that Ethan said that the cake broke .", "output": "THINK ( DRIVER , NONE , NONE ) CCOMP EXPECT ( BOY , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP THINK ( HERO , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP SAY ( ETHAN , NONE , NONE ) CCOMP BREAK ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma liked that Liam believed that a politician noticed that a cow liked that the bunny liked that Oliver liked that the girl hoped that Andrew declared that Mason hoped that Jacob liked that a box was handed to Isabella by a monkey .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP NOTICE ( POLITICIAN , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP LIKE ( BUNNY , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP DECLARE ( ANDREW , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP HAND ( MONKEY , BOX , ISABELLA )"}
{"input": "Form one: The baby dreamed that the boy hoped that the visitor liked that the child liked that the bear liked that a monkey hoped that the chicken said that a girl supported that Mia imagined that Hannah confessed that a cookie rolled .", "output": "DREAM ( BABY , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( VISITOR , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP HOPE ( MONKEY , NONE , NONE ) CCOMP SAY ( CHICKEN , NONE , NONE ) CCOMP SUPPORT ( GIRL , NONE , NONE ) CCOMP IMAGINE ( MIA , NONE , NONE ) CCOMP CONFESS ( HANNAH , NONE , NONE ) CCOMP ROLL ( NONE , COOKIE , NONE )"}
{"input": "Form one: The girl said that Brooklyn noticed that Chloe valued that Liam said that the cat meant that Victoria noticed that William believed that Noah liked that the dog declared that Lucas appreciated that the spokesman believed that Emma changed .", "output": "SAY ( GIRL , NONE , NONE ) CCOMP NOTICE ( BROOKLYN , NONE , NONE ) CCOMP VALUE ( CHLOE , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP NOTICE ( VICTORIA , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP DECLARE ( DOG , NONE , NONE ) CCOMP APPRECIATE ( LUCAS , NONE , NONE ) CCOMP BELIEVE ( SPOKESMAN , NONE , NONE ) CCOMP CHANGE ( NONE , EMMA , NONE )"}
{"input": "Form one: Charlotte said that the teacher confessed that the boy said that Isabella noticed that a girl said that Liam believed that Noah liked that a weapon was studied by Emma .", "output": "SAY ( CHARLOTTE , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP NOTICE ( ISABELLA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP BELIEVE ( LIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP STUDY ( EMMA , WEAPON , NONE )"}
{"input": "Form one: Olivia liked that a crocodile hoped that a cat said that the girl hoped that a boy thought that Anthony liked that Natalie liked that Harper liked that James noticed that a raisin was rolled .", "output": "LIKE ( OLIVIA , NONE , NONE ) CCOMP HOPE ( CROCODILE , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP THINK ( BOY , NONE , NONE ) CCOMP LIKE ( ANTHONY , NONE , NONE ) CCOMP LIKE ( NATALIE , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP NOTICE ( JAMES , NONE , NONE ) CCOMP ROLL ( NONE , RAISIN , NONE )"}
{"input": "Form one: A dog confessed that Carter noticed that the captain wished that the priest hoped that Samuel meant that William believed that Logan supported that the mother liked that Emma liked that Liam rolled .", "output": "CONFESS ( DOG , NONE , NONE ) CCOMP NOTICE ( CARTER , NONE , NONE ) CCOMP WISH ( CAPTAIN , NONE , NONE ) CCOMP HOPE ( PRIEST , NONE , NONE ) CCOMP MEAN ( SAMUEL , NONE , NONE ) CCOMP BELIEVE ( WILLIAM , NONE , NONE ) CCOMP SUPPORT ( LOGAN , NONE , NONE ) CCOMP LIKE ( MOTHER , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , LIAM , NONE )"}
{"input": "Form one: Sophia hoped that William hoped that a teacher thought that the cat slept .", "output": "HOPE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP THINK ( TEACHER , NONE , NONE ) CCOMP SLEEP ( CAT , NONE , NONE )"}
{"input": "Form one: Emma hoped that Samuel liked that the dog said that Amelia expected that James liked that Ava admired that Liam liked that the girl confessed that Harper liked that a rose was sold to the child .", "output": "HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( SAMUEL , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP EXPECT ( AMELIA , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP ADMIRE ( AVA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( GIRL , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP SELL ( NONE , ROSE , CHILD )"}
{"input": "Form one: A frog said that Zoe liked that a turtle confessed that a tenant liked that Ethan liked that Liam liked that William noticed that Noah liked that Ava liked that a girl believed that a boy rolled .", "output": "SAY ( FROG , NONE , NONE ) CCOMP LIKE ( ZOE , NONE , NONE ) CCOMP CONFESS ( TURTLE , NONE , NONE ) CCOMP LIKE ( TENANT , NONE , NONE ) CCOMP LIKE ( ETHAN , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP NOTICE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP ROLL ( NONE , BOY , NONE )"}
{"input": "Form one: Noah valued that the child liked that William hoped that Leah expected that Ava respected that the girl valued that Olivia examined Emma .", "output": "VALUE ( NOAH , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( WILLIAM , NONE , NONE ) CCOMP EXPECT ( LEAH , NONE , NONE ) CCOMP RESPECT ( AVA , NONE , NONE ) CCOMP VALUE ( GIRL , NONE , NONE ) CCOMP EXAMINE ( OLIVIA , EMMA , NONE )"}
{"input": "Form one: Sophia appreciated that the baby hoped that Isabella wished that the passenger noticed that Penelope liked that Abigail imagined that a girl liked that Layla noticed that the boy noticed that a duke liked that Olivia liked that Elizabeth noticed that the cake was rolled by Emma .", "output": "APPRECIATE ( SOPHIA , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP WISH ( ISABELLA , NONE , NONE ) CCOMP NOTICE ( PASSENGER , NONE , NONE ) CCOMP LIKE ( PENELOPE , NONE , NONE ) CCOMP IMAGINE ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP NOTICE ( LAYLA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( ELIZABETH , NONE , NONE ) CCOMP ROLL ( EMMA , CAKE , NONE )"}
{"input": "Form one: Isabella said that a human liked that the hero hoped that Emma hoped that a rose was frozen by Lillian .", "output": "SAY ( ISABELLA , NONE , NONE ) CCOMP LIKE ( HUMAN , NONE , NONE ) CCOMP HOPE ( HERO , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP FREEZE ( LILLIAN , ROSE , NONE )"}
{"input": "Form one: A monster said that the girl liked that a lion liked that Henry believed that a bird respected that Ava was lended the cake in the vehicle .", "output": "SAY ( MONSTER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP BELIEVE ( HENRY , NONE , NONE ) CCOMP RESPECT ( BIRD , NONE , NONE ) CCOMP LEND ( NONE , IN ( CAKE , VEHICLE ) , AVA )"}
{"input": "Form one: The girl hoped that Olivia liked that Noah liked that a president said that the boy liked that the bear liked that a bat was liked .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP SAY ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( BEAR , NONE , NONE ) CCOMP LIKE ( NONE , BAT , NONE )"}
{"input": "Form one: A teacher proved that a girl hoped that the patient respected that William was promised the leaf by Olivia .", "output": "PROVE ( TEACHER , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP RESPECT ( PATIENT , NONE , NONE ) CCOMP PROMISE ( OLIVIA , LEAF , WILLIAM )"}
{"input": "Form one: Elijah hoped that the cat meant that Emma declared that the girl said that a drink was split .", "output": "HOPE ( ELIJAH , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP DECLARE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP SPLIT ( NONE , DRINK , NONE )"}
{"input": "Form one: A dog thought that the cow proved that a boy noticed that the cookie burned .", "output": "THINK ( DOG , NONE , NONE ) CCOMP PROVE ( COW , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP BURN ( NONE , COOKIE , NONE )"}
{"input": "Form one: Liam liked that Julian liked that the dog liked that Mia hoped that a cow thought that the cat liked that a teacher liked that the boy confessed that Emma liked that Alexander liked that a puppy declared that the box was tolerated by Jacob .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( JULIAN , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP THINK ( COW , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP CONFESS ( BOY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( ALEXANDER , NONE , NONE ) CCOMP DECLARE ( PUPPY , NONE , NONE ) CCOMP TOLERATE ( JACOB , BOX , NONE )"}
{"input": "Form one: Ava hoped that a chief respected that a boy liked that a girl proved that Olivia liked that Emma slept .", "output": "HOPE ( AVA , NONE , NONE ) CCOMP RESPECT ( CHIEF , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP PROVE ( GIRL , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP SLEEP ( EMMA , NONE , NONE )"}
{"input": "Form one: A baby liked that the journalist confessed that a researcher tolerated that Oliver said that a boy noticed that a writer wished that the dog liked that the girl liked that Liam liked that a citizen imagined that a prince wanted to sketch .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP CONFESS ( JOURNALIST , NONE , NONE ) CCOMP TOLERATE ( RESEARCHER , NONE , NONE ) CCOMP SAY ( OLIVER , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP WISH ( WRITER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP IMAGINE ( CITIZEN , NONE , NONE ) CCOMP WANT ( PRINCE , NONE , NONE ) XCOMP SKETCH ( PRINCE , NONE , NONE )"}
{"input": "Form one: The bear hoped that Harper liked that Noah liked that the poet liked that the dog hoped that the frog confessed that Emma tolerated that Ava hoped that the sandwich was rented to the boy by the soldier .", "output": "HOPE ( BEAR , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( POET , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP CONFESS ( FROG , NONE , NONE ) CCOMP TOLERATE ( EMMA , NONE , NONE ) CCOMP HOPE ( AVA , NONE , NONE ) CCOMP RENT ( SOLDIER , SANDWICH , BOY )"}
{"input": "Form one: A frog liked that a child said that Amelia liked that a hen liked that the boy hoped that the squirrel liked that William appreciated that a donut was rolled by a girl .", "output": "LIKE ( FROG , NONE , NONE ) CCOMP SAY ( CHILD , NONE , NONE ) CCOMP LIKE ( AMELIA , NONE , NONE ) CCOMP LIKE ( HEN , NONE , NONE ) CCOMP HOPE ( BOY , NONE , NONE ) CCOMP LIKE ( SQUIRREL , NONE , NONE ) CCOMP APPRECIATE ( WILLIAM , NONE , NONE ) CCOMP ROLL ( GIRL , DONUT , NONE )"}
{"input": "Form one: Luna hoped that the girl liked that Ava liked that Emma liked that a child liked that a president wished that Mason gave Olivia the block .", "output": "HOPE ( LUNA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP WISH ( PRESIDENT , NONE , NONE ) CCOMP GIVE ( MASON , BLOCK , OLIVIA )"}
{"input": "Form one: Noah liked that the boy liked that Ava liked that a cat valued that Olivia expected that Abigail expected that the duck liked that the cow hoped that Emma liked that Jackson meant that the dog said that a girl froze .", "output": "LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP VALUE ( CAT , NONE , NONE ) CCOMP EXPECT ( OLIVIA , NONE , NONE ) CCOMP EXPECT ( ABIGAIL , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP HOPE ( COW , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP MEAN ( JACKSON , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP FREEZE ( NONE , GIRL , NONE )"}
{"input": "Form one: Olivia declared that the cat tolerated that the girl noticed that Isabella declared that Emma admired that a dog respected that John liked that a baby hoped that Sophia liked that Ava admired that the boy tolerated that the cake was fed to Noah .", "output": "DECLARE ( OLIVIA , NONE , NONE ) CCOMP TOLERATE ( CAT , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP ADMIRE ( EMMA , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP LIKE ( JOHN , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP ADMIRE ( AVA , NONE , NONE ) CCOMP TOLERATE ( BOY , NONE , NONE ) CCOMP FEED ( NONE , CAKE , NOAH )"}
{"input": "Form one: Sophia said that Stella supported that the frog tolerated that a boy proved that the crocodile confessed that a cat said that the president liked that Ava liked that a monkey liked that Emma was mailed the clock .", "output": "SAY ( SOPHIA , NONE , NONE ) CCOMP SUPPORT ( STELLA , NONE , NONE ) CCOMP TOLERATE ( FROG , NONE , NONE ) CCOMP PROVE ( BOY , NONE , NONE ) CCOMP CONFESS ( CROCODILE , NONE , NONE ) CCOMP SAY ( CAT , NONE , NONE ) CCOMP LIKE ( PRESIDENT , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP MAIL ( NONE , CLOCK , EMMA )"}
{"input": "Form one: Emma dreamed that the baby hoped that Sophia said that Olivia respected that a child liked that a mouse proved that a scientist wished that a customer confessed that Charlotte juggled .", "output": "DREAM ( EMMA , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP SAY ( SOPHIA , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP PROVE ( MOUSE , NONE , NONE ) CCOMP WISH ( SCIENTIST , NONE , NONE ) CCOMP CONFESS ( CUSTOMER , NONE , NONE ) CCOMP JUGGLE ( CHARLOTTE , NONE , NONE )"}
{"input": "Form one: Emily liked that Liam said that Elijah liked that William liked that the boy believed that a girl meant that the princess hoped that Emma liked that the giraffe liked that a dog respected that the cake was lended to the zebra .", "output": "LIKE ( EMILY , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP HOPE ( PRINCESS , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP RESPECT ( DOG , NONE , NONE ) CCOMP LEND ( NONE , CAKE , ZEBRA )"}
{"input": "Form one: A frog valued that a hero said that a fly meant that Emma slept .", "output": "VALUE ( FROG , NONE , NONE ) CCOMP SAY ( HERO , NONE , NONE ) CCOMP MEAN ( FLY , NONE , NONE ) CCOMP SLEEP ( EMMA , NONE , NONE )"}
{"input": "Form one: A baby proved that a chicken wished that the cow valued that Liam noticed that William said that the girl forwarded the fish the radio beside a rock .", "output": "PROVE ( BABY , NONE , NONE ) CCOMP WISH ( CHICKEN , NONE , NONE ) CCOMP VALUE ( COW , NONE , NONE ) CCOMP NOTICE ( LIAM , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP FORWARD ( GIRL , BESIDE ( RADIO , ROCK ) , FISH )"}
{"input": "Form one: Jacob respected that Emma believed that a captain liked that a girl hoped that William admired that the lion liked that a bear believed that Ava said that a lawyer believed that Isabella hoped that a cat meant that the president rolled .", "output": "RESPECT ( JACOB , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAPTAIN , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( WILLIAM , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP BELIEVE ( BEAR , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP BELIEVE ( LAWYER , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP MEAN ( CAT , NONE , NONE ) CCOMP ROLL ( NONE , PRESIDENT , NONE )"}
{"input": "Form one: Emma confessed that Mason said that a frog noticed that Noah liked that the child noticed that a cat confessed that a glue broke .", "output": "CONFESS ( EMMA , NONE , NONE ) CCOMP SAY ( MASON , NONE , NONE ) CCOMP NOTICE ( FROG , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP CONFESS ( CAT , NONE , NONE ) CCOMP BREAK ( NONE , GLUE , NONE )"}
{"input": "Form one: Isabella liked that the girl said that a lawyer wished that Ava tolerated that a lion supported that the cat liked that Nathan supported that Matthew liked that a king rolled .", "output": "LIKE ( ISABELLA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP WISH ( LAWYER , NONE , NONE ) CCOMP TOLERATE ( AVA , NONE , NONE ) CCOMP SUPPORT ( LION , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP SUPPORT ( NATHAN , NONE , NONE ) CCOMP LIKE ( MATTHEW , NONE , NONE ) CCOMP ROLL ( NONE , KING , NONE )"}
{"input": "Form one: A child said that Theodore hoped that Olivia liked that a frog liked that Mia respected that Emma hoped that the girl hoped that Mason hoped that the boy said that a baby liked that Ava liked that a doctor dreamed that a cake was liked .", "output": "SAY ( CHILD , NONE , NONE ) CCOMP HOPE ( THEODORE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( FROG , NONE , NONE ) CCOMP RESPECT ( MIA , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP HOPE ( MASON , NONE , NONE ) CCOMP SAY ( BOY , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP DREAM ( DOCTOR , NONE , NONE ) CCOMP LIKE ( NONE , CAKE , NONE )"}
{"input": "Form one: The scientist declared that William said that Daniel liked that the game was eaten by Aria .", "output": "DECLARE ( SCIENTIST , NONE , NONE ) CCOMP SAY ( WILLIAM , NONE , NONE ) CCOMP LIKE ( DANIEL , NONE , NONE ) CCOMP EAT ( ARIA , GAME , NONE )"}
{"input": "Form one: Liam thought that the duke thought that a hero liked that a crocodile proved that a boy believed that Mia respected that the customer liked that Olivia valued that the cat thought that the teacher liked that Aria cooked .", "output": "THINK ( LIAM , NONE , NONE ) CCOMP THINK ( DUKE , NONE , NONE ) CCOMP LIKE ( HERO , NONE , NONE ) CCOMP PROVE ( CROCODILE , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP RESPECT ( MIA , NONE , NONE ) CCOMP LIKE ( CUSTOMER , NONE , NONE ) CCOMP VALUE ( OLIVIA , NONE , NONE ) CCOMP THINK ( CAT , NONE , NONE ) CCOMP LIKE ( TEACHER , NONE , NONE ) CCOMP COOK ( ARIA , NONE , NONE )"}
{"input": "Form one: Chloe liked that Natalie liked that the child liked that a baby hoped that the chicken liked that Emma noticed that the bat shortened .", "output": "LIKE ( CHLOE , NONE , NONE ) CCOMP LIKE ( NATALIE , NONE , NONE ) CCOMP LIKE ( CHILD , NONE , NONE ) CCOMP HOPE ( BABY , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP NOTICE ( EMMA , NONE , NONE ) CCOMP SHORTEN ( NONE , BAT , NONE )"}
{"input": "Form one: Liam noticed that a girl said that a child hoped that Sophia meant that Stella liked that a duck dreamed that Ava declared that Emma believed that Aiden liked that the cake was eaten .", "output": "NOTICE ( LIAM , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP HOPE ( CHILD , NONE , NONE ) CCOMP MEAN ( SOPHIA , NONE , NONE ) CCOMP LIKE ( STELLA , NONE , NONE ) CCOMP DREAM ( DUCK , NONE , NONE ) CCOMP DECLARE ( AVA , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( AIDEN , NONE , NONE ) CCOMP EAT ( NONE , CAKE , NONE )"}
{"input": "Form one: Emma noticed that Lucas proved that the dog said that the cat proved that Ava confessed that a pig respected that Henry was promised a cake on the table .", "output": "NOTICE ( EMMA , NONE , NONE ) CCOMP PROVE ( LUCAS , NONE , NONE ) CCOMP SAY ( DOG , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP CONFESS ( AVA , NONE , NONE ) CCOMP RESPECT ( PIG , NONE , NONE ) CCOMP PROMISE ( NONE , ON ( CAKE , TABLE ) , HENRY )"}
{"input": "Form one: Ava appreciated that the cow liked that Emma liked that the director hoped that a frog supported that Liam said that the dealer hoped that the cat hoped that Mia hoped that Nathan liked that the boy imagined that the girl liked that the horse was sent a cake beside a table .", "output": "APPRECIATE ( AVA , NONE , NONE ) CCOMP LIKE ( COW , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP HOPE ( DIRECTOR , NONE , NONE ) CCOMP SUPPORT ( FROG , NONE , NONE ) CCOMP SAY ( LIAM , NONE , NONE ) CCOMP HOPE ( DEALER , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP HOPE ( MIA , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP IMAGINE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SEND ( NONE , BESIDE ( CAKE , TABLE ) , HORSE )"}
{"input": "Form one: A prisoner liked that Olivia proved that Abigail supported that Emma rolled a fly beside the table .", "output": "LIKE ( PRISONER , NONE , NONE ) CCOMP PROVE ( OLIVIA , NONE , NONE ) CCOMP SUPPORT ( ABIGAIL , NONE , NONE ) CCOMP ROLL ( EMMA , BESIDE ( FLY , TABLE ) , NONE )"}
{"input": "Form one: Violet supported that a girl wished that Olivia said that Emma believed that the cat liked that Liam hoped that Lucas declared that the horse noticed that a dog noticed that Noah liked that Jacob liked that William was given the ball .", "output": "SUPPORT ( VIOLET , NONE , NONE ) CCOMP WISH ( GIRL , NONE , NONE ) CCOMP SAY ( OLIVIA , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP DECLARE ( LUCAS , NONE , NONE ) CCOMP NOTICE ( HORSE , NONE , NONE ) CCOMP NOTICE ( DOG , NONE , NONE ) CCOMP LIKE ( NOAH , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP GIVE ( NONE , BALL , WILLIAM )"}
{"input": "Form one: The dog liked that Jacob liked that Noah wished that the cat liked that the girl believed that a goose hoped that a governor liked that the queen liked that Ava liked that the boy liked that Liam hoped that the lion split .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( JACOB , NONE , NONE ) CCOMP WISH ( NOAH , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP HOPE ( GOOSE , NONE , NONE ) CCOMP LIKE ( GOVERNOR , NONE , NONE ) CCOMP LIKE ( QUEEN , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SPLIT ( NONE , LION , NONE )"}
{"input": "Form one: William liked that Ava said that Lillian liked that Liam respected that Olivia dreamed that a citizen liked that a ball rolled .", "output": "LIKE ( WILLIAM , NONE , NONE ) CCOMP SAY ( AVA , NONE , NONE ) CCOMP LIKE ( LILLIAN , NONE , NONE ) CCOMP RESPECT ( LIAM , NONE , NONE ) CCOMP DREAM ( OLIVIA , NONE , NONE ) CCOMP LIKE ( CITIZEN , NONE , NONE ) CCOMP ROLL ( NONE , BALL , NONE )"}
{"input": "Form one: The frog declared that a chicken liked that Emma liked that Dylan liked that a girl hoped that the prince dreamed that a director rolled .", "output": "DECLARE ( FROG , NONE , NONE ) CCOMP LIKE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( DYLAN , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP DREAM ( PRINCE , NONE , NONE ) CCOMP ROLL ( NONE , DIRECTOR , NONE )"}
{"input": "Form one: The frog liked that Ella proved that a patient liked that Olivia admired that Emma liked that the chicken noticed that a cat liked that William proved that Noah said that Liam was fed a drink in the house .", "output": "LIKE ( FROG , NONE , NONE ) CCOMP PROVE ( ELLA , NONE , NONE ) CCOMP LIKE ( PATIENT , NONE , NONE ) CCOMP ADMIRE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP NOTICE ( CHICKEN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP PROVE ( WILLIAM , NONE , NONE ) CCOMP SAY ( NOAH , NONE , NONE ) CCOMP FEED ( NONE , IN ( DRINK , HOUSE ) , LIAM )"}
{"input": "Form one: Ryan liked that Emma expected that Ethan dreamed that a girl hoped that Penelope tolerated that the bird liked that a hen liked that Elijah hoped that Ella confessed that a donut was examined by William .", "output": "LIKE ( RYAN , NONE , NONE ) CCOMP EXPECT ( EMMA , NONE , NONE ) CCOMP DREAM ( ETHAN , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP TOLERATE ( PENELOPE , NONE , NONE ) CCOMP LIKE ( BIRD , NONE , NONE ) CCOMP LIKE ( HEN , NONE , NONE ) CCOMP HOPE ( ELIJAH , NONE , NONE ) CCOMP CONFESS ( ELLA , NONE , NONE ) CCOMP EXAMINE ( WILLIAM , DONUT , NONE )"}
{"input": "Form one: Samuel admired that a goose hoped that the child noticed that Evelyn liked that Dylan proved that Isabella hoped that Charlotte supported that the girl liked that Ellie believed that Addison appreciated that Emma liked that Oliver liked that Mason burned a balloon in the kennel on a table .", "output": "ADMIRE ( SAMUEL , NONE , NONE ) CCOMP HOPE ( GOOSE , NONE , NONE ) CCOMP NOTICE ( CHILD , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP PROVE ( DYLAN , NONE , NONE ) CCOMP HOPE ( ISABELLA , NONE , NONE ) CCOMP SUPPORT ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP BELIEVE ( ELLIE , NONE , NONE ) CCOMP APPRECIATE ( ADDISON , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP BURN ( MASON , IN ( BALLOON , ON ( KENNEL , TABLE ) ) , NONE )"}
{"input": "Form one: A dog hoped that a mouse hoped that a prisoner liked that the visitor tolerated that a monkey liked that Liam liked that a teacher confessed that a girl noticed that the prince imagined that Sophia liked that Victoria liked that the boy needed to nap .", "output": "HOPE ( DOG , NONE , NONE ) CCOMP HOPE ( MOUSE , NONE , NONE ) CCOMP LIKE ( PRISONER , NONE , NONE ) CCOMP TOLERATE ( VISITOR , NONE , NONE ) CCOMP LIKE ( MONKEY , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( TEACHER , NONE , NONE ) CCOMP NOTICE ( GIRL , NONE , NONE ) CCOMP IMAGINE ( PRINCE , NONE , NONE ) CCOMP LIKE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( VICTORIA , NONE , NONE ) CCOMP NEED ( BOY , NONE , NONE ) XCOMP NAP ( BOY , NONE , NONE )"}
{"input": "Form one: Jackson liked that Elijah liked that a cat admired that Noah meant that Evelyn liked that Scarlett hoped that the banana was forwarded to Mason by a girl .", "output": "LIKE ( JACKSON , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP ADMIRE ( CAT , NONE , NONE ) CCOMP MEAN ( NOAH , NONE , NONE ) CCOMP LIKE ( EVELYN , NONE , NONE ) CCOMP HOPE ( SCARLETT , NONE , NONE ) CCOMP FORWARD ( GIRL , BANANA , MASON )"}
{"input": "Form one: Charlotte liked that Noah expected that Oliver liked that Lincoln valued that Emma liked that Harper liked that the monkey proved that Nathan liked that a girl appreciated that Aria was given the balloon by the chicken .", "output": "LIKE ( CHARLOTTE , NONE , NONE ) CCOMP EXPECT ( NOAH , NONE , NONE ) CCOMP LIKE ( OLIVER , NONE , NONE ) CCOMP VALUE ( LINCOLN , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( HARPER , NONE , NONE ) CCOMP PROVE ( MONKEY , NONE , NONE ) CCOMP LIKE ( NATHAN , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP GIVE ( CHICKEN , BALLOON , ARIA )"}
{"input": "Form one: The boy valued that the dog hoped that the child believed that a cat tolerated that the student noticed that Emma believed that a girl appreciated that Logan said that the cake was cleaned .", "output": "VALUE ( BOY , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP BELIEVE ( CHILD , NONE , NONE ) CCOMP TOLERATE ( CAT , NONE , NONE ) CCOMP NOTICE ( STUDENT , NONE , NONE ) CCOMP BELIEVE ( EMMA , NONE , NONE ) CCOMP APPRECIATE ( GIRL , NONE , NONE ) CCOMP SAY ( LOGAN , NONE , NONE ) CCOMP CLEAN ( NONE , CAKE , NONE )"}
{"input": "Form one: Christopher liked that Olivia respected that a girl liked that Noah confessed that Chloe noticed that Camila declared that Liam appreciated that a director liked that the lion confessed that a melon burned .", "output": "LIKE ( CHRISTOPHER , NONE , NONE ) CCOMP RESPECT ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP CONFESS ( NOAH , NONE , NONE ) CCOMP NOTICE ( CHLOE , NONE , NONE ) CCOMP DECLARE ( CAMILA , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP LIKE ( DIRECTOR , NONE , NONE ) CCOMP CONFESS ( LION , NONE , NONE ) CCOMP BURN ( NONE , MELON , NONE )"}
{"input": "Form one: Oliver imagined that James liked that Olivia hoped that the girl liked that Ava liked that the boy liked Emma .", "output": "IMAGINE ( OLIVER , NONE , NONE ) CCOMP LIKE ( JAMES , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( AVA , NONE , NONE ) CCOMP LIKE ( BOY , EMMA , NONE )"}
{"input": "Form one: Mason liked that James valued that Zoey respected that Oliver hoped that Sophia imagined that Elizabeth liked that a girl meant that Liam liked that the consumer thought that Mia liked that a giraffe wanted to read .", "output": "LIKE ( MASON , NONE , NONE ) CCOMP VALUE ( JAMES , NONE , NONE ) CCOMP RESPECT ( ZOEY , NONE , NONE ) CCOMP HOPE ( OLIVER , NONE , NONE ) CCOMP IMAGINE ( SOPHIA , NONE , NONE ) CCOMP LIKE ( ELIZABETH , NONE , NONE ) CCOMP MEAN ( GIRL , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP THINK ( CONSUMER , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP WANT ( GIRAFFE , NONE , NONE ) XCOMP READ ( GIRAFFE , NONE , NONE )"}
{"input": "Form one: The girl hoped that the duck liked that a prisoner declared that Liam wished that the student admired that the donut was loaned to James .", "output": "HOPE ( GIRL , NONE , NONE ) CCOMP LIKE ( DUCK , NONE , NONE ) CCOMP DECLARE ( PRISONER , NONE , NONE ) CCOMP WISH ( LIAM , NONE , NONE ) CCOMP ADMIRE ( STUDENT , NONE , NONE ) CCOMP LOAN ( NONE , DONUT , JAMES )"}
{"input": "Form one: The captain hoped that the girl liked that the dog liked that Liam hoped that Luke declared that Emma dreamed that a boy noticed that Hannah supported that William declared that the butterfly shortened .", "output": "HOPE ( CAPTAIN , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP DECLARE ( LUKE , NONE , NONE ) CCOMP DREAM ( EMMA , NONE , NONE ) CCOMP NOTICE ( BOY , NONE , NONE ) CCOMP SUPPORT ( HANNAH , NONE , NONE ) CCOMP DECLARE ( WILLIAM , NONE , NONE ) CCOMP SHORTEN ( NONE , BUTTERFLY , NONE )"}
{"input": "Form one: A lion believed that Julian confessed that the mouse admired that a girl hoped that Emma thought that Liam liked that Scarlett respected that Olivia hoped that a goose was lended the raisin by Amelia .", "output": "BELIEVE ( LION , NONE , NONE ) CCOMP CONFESS ( JULIAN , NONE , NONE ) CCOMP ADMIRE ( MOUSE , NONE , NONE ) CCOMP HOPE ( GIRL , NONE , NONE ) CCOMP THINK ( EMMA , NONE , NONE ) CCOMP LIKE ( LIAM , NONE , NONE ) CCOMP RESPECT ( SCARLETT , NONE , NONE ) CCOMP HOPE ( OLIVIA , NONE , NONE ) CCOMP LEND ( AMELIA , RAISIN , GOOSE )"}
{"input": "Form one: Emma liked that the fish liked that a journalist liked that a boy liked that Liam valued that Isabella declared that James appreciated that a giraffe liked that the hat was liked .", "output": "LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( FISH , NONE , NONE ) CCOMP LIKE ( JOURNALIST , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP DECLARE ( ISABELLA , NONE , NONE ) CCOMP APPRECIATE ( JAMES , NONE , NONE ) CCOMP LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( NONE , HAT , NONE )"}
{"input": "Form one: Liam liked that a cow confessed that a girl believed that a dog liked that the boy offered the rose in a house to the hero .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP CONFESS ( COW , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP OFFER ( BOY , IN ( ROSE , HOUSE ) , HERO )"}
{"input": "Form one: Riley liked that a baby liked that a bear admired that Emma liked that the teacher believed that a boy believed that a lion liked that the butterfly liked that the customer believed that the dog believed that the kid proved that the towel was given to the frog by Liam .", "output": "LIKE ( RILEY , NONE , NONE ) CCOMP LIKE ( BABY , NONE , NONE ) CCOMP ADMIRE ( BEAR , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP BELIEVE ( TEACHER , NONE , NONE ) CCOMP BELIEVE ( BOY , NONE , NONE ) CCOMP LIKE ( LION , NONE , NONE ) CCOMP LIKE ( BUTTERFLY , NONE , NONE ) CCOMP BELIEVE ( CUSTOMER , NONE , NONE ) CCOMP BELIEVE ( DOG , NONE , NONE ) CCOMP PROVE ( KID , NONE , NONE ) CCOMP GIVE ( LIAM , TOWEL , FROG )"}
{"input": "Form one: A girl dreamed that Michael confessed that Isabella liked that William liked that a cat hoped that Liam appreciated that a princess slept .", "output": "DREAM ( GIRL , NONE , NONE ) CCOMP CONFESS ( MICHAEL , NONE , NONE ) CCOMP LIKE ( ISABELLA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP APPRECIATE ( LIAM , NONE , NONE ) CCOMP SLEEP ( PRINCESS , NONE , NONE )"}
{"input": "Form one: The deer meant that a girl liked that a bear said that Luke hoped that the cat forwarded Emma a block .", "output": "MEAN ( DEER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP SAY ( BEAR , NONE , NONE ) CCOMP HOPE ( LUKE , NONE , NONE ) CCOMP FORWARD ( CAT , BLOCK , EMMA )"}
{"input": "Form one: A boy liked that the wolf confessed that Emily hoped that a girl liked that a dealer liked that Elijah liked that a bird dreamed that the landlord liked that Emma liked that Olivia liked that Ava noticed .", "output": "LIKE ( BOY , NONE , NONE ) CCOMP CONFESS ( WOLF , NONE , NONE ) CCOMP HOPE ( EMILY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( DEALER , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP DREAM ( BIRD , NONE , NONE ) CCOMP LIKE ( LANDLORD , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE )"}
{"input": "Form one: A pupil hoped that Gabriel liked that a boy liked that a girl liked that Avery admired that the horse believed that Benjamin thought that the pumpkin was slid by a frog .", "output": "HOPE ( PUPIL , NONE , NONE ) CCOMP LIKE ( GABRIEL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP ADMIRE ( AVERY , NONE , NONE ) CCOMP BELIEVE ( HORSE , NONE , NONE ) CCOMP THINK ( BENJAMIN , NONE , NONE ) CCOMP SLIDE ( FROG , PUMPKIN , NONE )"}
{"input": "Form one: Emma believed that the girl liked that a dog hoped that Olivia enlarged .", "output": "BELIEVE ( EMMA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP HOPE ( DOG , NONE , NONE ) CCOMP ENLARGE ( NONE , OLIVIA , NONE )"}
{"input": "Form one: A giraffe liked that Olivia liked that Sofia liked that a teacher hoped that a dog liked that Emma liked that the drink rolled .", "output": "LIKE ( GIRAFFE , NONE , NONE ) CCOMP LIKE ( OLIVIA , NONE , NONE ) CCOMP LIKE ( SOFIA , NONE , NONE ) CCOMP HOPE ( TEACHER , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP ROLL ( NONE , DRINK , NONE )"}
{"input": "Form one: Liam liked that the boy liked that a baby said that Emma liked that a girl said that Carter called .", "output": "LIKE ( LIAM , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP SAY ( BABY , NONE , NONE ) CCOMP LIKE ( EMMA , NONE , NONE ) CCOMP SAY ( GIRL , NONE , NONE ) CCOMP CALL ( CARTER , NONE , NONE )"}
{"input": "Form one: Liam meant that Benjamin respected that a cat liked that a mouse thought that Noah hoped that Mia liked that the father noticed that the teacher collapsed .", "output": "MEAN ( LIAM , NONE , NONE ) CCOMP RESPECT ( BENJAMIN , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP THINK ( MOUSE , NONE , NONE ) CCOMP HOPE ( NOAH , NONE , NONE ) CCOMP LIKE ( MIA , NONE , NONE ) CCOMP NOTICE ( FATHER , NONE , NONE ) CCOMP COLLAPSE ( NONE , TEACHER , NONE )"}
{"input": "Form one: A girl declared that a wolf said that Charlotte liked that Elijah liked that Liam hoped that the cake was slid .", "output": "DECLARE ( GIRL , NONE , NONE ) CCOMP SAY ( WOLF , NONE , NONE ) CCOMP LIKE ( CHARLOTTE , NONE , NONE ) CCOMP LIKE ( ELIJAH , NONE , NONE ) CCOMP HOPE ( LIAM , NONE , NONE ) CCOMP SLIDE ( NONE , CAKE , NONE )"}
{"input": "Form one: Noah supported that the cat hoped that Ava noticed that a girl liked that a dog was lended the cookie beside the sphere .", "output": "SUPPORT ( NOAH , NONE , NONE ) CCOMP HOPE ( CAT , NONE , NONE ) CCOMP NOTICE ( AVA , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LEND ( NONE , BESIDE ( COOKIE , SPHERE ) , DOG )"}
{"input": "Form one: A dog liked that Mason appreciated that a girl believed that a teacher thought that Liam valued that Oliver was promised a shoe beside a table .", "output": "LIKE ( DOG , NONE , NONE ) CCOMP APPRECIATE ( MASON , NONE , NONE ) CCOMP BELIEVE ( GIRL , NONE , NONE ) CCOMP THINK ( TEACHER , NONE , NONE ) CCOMP VALUE ( LIAM , NONE , NONE ) CCOMP PROMISE ( NONE , BESIDE ( SHOE , TABLE ) , OLIVER )"}
{"input": "Form one: Daniel confessed that a cat proved that Mateo hoped that a friend liked that the coach believed that a mother appreciated that the girl liked that Ava expected that William liked that Liam imagined that Zoe hoped that Sophia confessed that the chicken was rented a donut .", "output": "CONFESS ( DANIEL , NONE , NONE ) CCOMP PROVE ( CAT , NONE , NONE ) CCOMP HOPE ( MATEO , NONE , NONE ) CCOMP LIKE ( FRIEND , NONE , NONE ) CCOMP BELIEVE ( COACH , NONE , NONE ) CCOMP APPRECIATE ( MOTHER , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP EXPECT ( AVA , NONE , NONE ) CCOMP LIKE ( WILLIAM , NONE , NONE ) CCOMP IMAGINE ( LIAM , NONE , NONE ) CCOMP HOPE ( ZOE , NONE , NONE ) CCOMP CONFESS ( SOPHIA , NONE , NONE ) CCOMP RENT ( NONE , DONUT , CHICKEN )"}
{"input": "Form one: A child confessed that the duke liked that a king liked that the bee noticed that a teacher thought that a sailor imagined that a dog liked that Olivia meant that Noah admired that Mila hoped that a girl thought that the boy liked that the monster was offered the box in the bottle beside the cat by the lawyer .", "output": "CONFESS ( CHILD , NONE , NONE ) CCOMP LIKE ( DUKE , NONE , NONE ) CCOMP LIKE ( KING , NONE , NONE ) CCOMP NOTICE ( BEE , NONE , NONE ) CCOMP THINK ( TEACHER , NONE , NONE ) CCOMP IMAGINE ( SAILOR , NONE , NONE ) CCOMP LIKE ( DOG , NONE , NONE ) CCOMP MEAN ( OLIVIA , NONE , NONE ) CCOMP ADMIRE ( NOAH , NONE , NONE ) CCOMP HOPE ( MILA , NONE , NONE ) CCOMP THINK ( GIRL , NONE , NONE ) CCOMP LIKE ( BOY , NONE , NONE ) CCOMP OFFER ( LAWYER , IN ( BOX , BESIDE ( BOTTLE , CAT ) ) , MONSTER )"}
{"input": "Form one: A baby liked that the girl liked that the cat liked that Emma hoped that the horse liked that Chloe hoped that Oliver was given the cookie in a garden by Sophia .", "output": "LIKE ( BABY , NONE , NONE ) CCOMP LIKE ( GIRL , NONE , NONE ) CCOMP LIKE ( CAT , NONE , NONE ) CCOMP HOPE ( EMMA , NONE , NONE ) CCOMP LIKE ( HORSE , NONE , NONE ) CCOMP HOPE ( CHLOE , NONE , NONE ) CCOMP GIVE ( SOPHIA , IN ( COOKIE , GARDEN ) , OLIVER )"}
